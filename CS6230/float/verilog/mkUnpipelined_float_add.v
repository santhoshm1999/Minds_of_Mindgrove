//
// Generated by Bluespec Compiler, version untagged-g2930c314 (build 2930c314)
//
// On Mon Nov 25 05:10:01 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inp_s                  O     1
// RDY_get_inp_c                  O     1
// get_result                     O    32 reg
// RDY_get_result                 O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inp_s_inp_S                I    32
// get_inp_c_inp_C                I    32
// EN_get_inp_s                   I     1
// EN_get_inp_c                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkUnpipelined_float_add(CLK,
			       RST_N,

			       get_inp_s_inp_S,
			       EN_get_inp_s,
			       RDY_get_inp_s,

			       get_inp_c_inp_C,
			       EN_get_inp_c,
			       RDY_get_inp_c,

			       get_result,
			       RDY_get_result);
  input  CLK;
  input  RST_N;

  // action method get_inp_s
  input  [31 : 0] get_inp_s_inp_S;
  input  EN_get_inp_s;
  output RDY_get_inp_s;

  // action method get_inp_c
  input  [31 : 0] get_inp_c_inp_C;
  input  EN_get_inp_c;
  output RDY_get_inp_c;

  // value method get_result
  output [31 : 0] get_result;
  output RDY_get_result;

  // signals for module outputs
  wire [31 : 0] get_result;
  wire RDY_get_inp_c, RDY_get_inp_s, RDY_get_result;

  // register add_done
  reg add_done;
  wire add_done_D_IN, add_done_EN;

  // register add_or_sub
  reg [1 : 0] add_or_sub;
  wire [1 : 0] add_or_sub_D_IN;
  wire add_or_sub_EN;

  // register addition_start
  reg addition_start;
  wire addition_start_D_IN, addition_start_EN;

  // register adj_exp_done
  reg adj_exp_done;
  wire adj_exp_done_D_IN, adj_exp_done_EN;

  // register align_man_done
  reg align_man_done;
  wire align_man_done_D_IN, align_man_done_EN;

  // register c
  reg [31 : 0] c;
  wire [31 : 0] c_D_IN;
  wire c_EN;

  // register calc_fraction_done
  reg calc_fraction_done;
  wire calc_fraction_done_D_IN, calc_fraction_done_EN;

  // register cmp_exp_done
  reg cmp_exp_done;
  wire cmp_exp_done_D_IN, cmp_exp_done_EN;

  // register end_result
  reg [31 : 0] end_result;
  wire [31 : 0] end_result_D_IN;
  wire end_result_EN;

  // register exp_diff
  reg [7 : 0] exp_diff;
  wire [7 : 0] exp_diff_D_IN;
  wire exp_diff_EN;

  // register exp_mantissa
  reg [30 : 0] exp_mantissa;
  wire [30 : 0] exp_mantissa_D_IN;
  wire exp_mantissa_EN;

  // register exp_res
  reg [7 : 0] exp_res;
  wire [7 : 0] exp_res_D_IN;
  wire exp_res_EN;

  // register get_r
  reg get_r;
  wire get_r_D_IN, get_r_EN;

  // register got_c
  reg got_c;
  wire got_c_D_IN, got_c_EN;

  // register got_s
  reg got_s;
  wire got_s_D_IN, got_s_EN;

  // register handle_zero
  reg handle_zero;
  wire handle_zero_D_IN, handle_zero_EN;

  // register input_no
  reg input_no;
  wire input_no_D_IN, input_no_EN;

  // register input_zero
  reg input_zero;
  wire input_zero_D_IN, input_zero_EN;

  // register mantissa_done
  reg mantissa_done;
  wire mantissa_done_D_IN, mantissa_done_EN;

  // register mantissa_res
  reg [22 : 0] mantissa_res;
  wire [22 : 0] mantissa_res_D_IN;
  wire mantissa_res_EN;

  // register pack_done
  reg pack_done;
  wire pack_done_D_IN, pack_done_EN;

  // register result_concatenated
  reg result_concatenated;
  wire result_concatenated_D_IN, result_concatenated_EN;

  // register s
  reg [31 : 0] s;
  wire [31 : 0] s_D_IN;
  wire s_EN;

  // register sign_done
  reg sign_done;
  wire sign_done_D_IN, sign_done_EN;

  // register swap_done
  reg swap_done;
  wire swap_done_D_IN, swap_done_EN;

  // register temp_c
  reg [49 : 0] temp_c;
  wire [49 : 0] temp_c_D_IN;
  wire temp_c_EN;

  // register temp_man
  reg [49 : 0] temp_man;
  wire [49 : 0] temp_man_D_IN;
  wire temp_man_EN;

  // register temp_s
  reg [49 : 0] temp_s;
  wire [49 : 0] temp_s_D_IN;
  wire temp_s_EN;

  // register tmp_exp
  reg [7 : 0] tmp_exp;
  wire [7 : 0] tmp_exp_D_IN;
  wire tmp_exp_EN;

  // register tmp_res
  reg [23 : 0] tmp_res;
  wire [23 : 0] tmp_res_D_IN;
  wire tmp_res_EN;

  // register tmp_sign
  reg tmp_sign;
  wire tmp_sign_D_IN, tmp_sign_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_add_or_sub_exp,
       CAN_FIRE_RL_rl_adj_exp,
       CAN_FIRE_RL_rl_adj_mantissa,
       CAN_FIRE_RL_rl_align_exp,
       CAN_FIRE_RL_rl_assemble_result,
       CAN_FIRE_RL_rl_cmp_exp,
       CAN_FIRE_RL_rl_deassert_signals,
       CAN_FIRE_RL_rl_get_sign,
       CAN_FIRE_RL_rl_handle_zero_val,
       CAN_FIRE_RL_rl_swap,
       CAN_FIRE_get_inp_c,
       CAN_FIRE_get_inp_s,
       WILL_FIRE_RL_rl_add_or_sub_exp,
       WILL_FIRE_RL_rl_adj_exp,
       WILL_FIRE_RL_rl_adj_mantissa,
       WILL_FIRE_RL_rl_align_exp,
       WILL_FIRE_RL_rl_assemble_result,
       WILL_FIRE_RL_rl_cmp_exp,
       WILL_FIRE_RL_rl_deassert_signals,
       WILL_FIRE_RL_rl_get_sign,
       WILL_FIRE_RL_rl_handle_zero_val,
       WILL_FIRE_RL_rl_swap,
       WILL_FIRE_get_inp_c,
       WILL_FIRE_get_inp_s;

  // inputs to muxes for submodule ports
  wire [49 : 0] MUX_temp_c_write_1__VAL_1,
		MUX_temp_c_write_1__VAL_2,
		MUX_temp_man_write_1__VAL_1,
		MUX_temp_man_write_1__VAL_2;
  wire [31 : 0] MUX_end_result_write_1__VAL_1, MUX_end_result_write_1__VAL_2;
  wire [7 : 0] MUX_tmp_exp_write_1__VAL_1;
  wire [1 : 0] MUX_add_or_sub_write_1__VAL_1;
  wire MUX_add_or_sub_write_1__SEL_2,
       MUX_adj_exp_done_write_1__SEL_1,
       MUX_c_write_1__SEL_1,
       MUX_input_zero_write_1__SEL_2,
       MUX_pack_done_write_1__SEL_2,
       MUX_temp_man_write_1__SEL_1,
       MUX_temp_man_write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h1693;
  reg [31 : 0] v__h5888;
  reg [31 : 0] v__h5936;
  reg [31 : 0] v__h5986;
  reg [31 : 0] v__h6240;
  reg [31 : 0] v__h16915;
  reg [31 : 0] v__h37716;
  reg [31 : 0] v__h37841;
  reg [31 : 0] v__h41098;
  reg [31 : 0] v__h66615;
  // synopsys translate_on

  // remaining internal signals
  wire [49 : 0] IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6,
		IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5,
		IF_temp_c_BIT_0_THEN_1_ELSE_0__q3,
		IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9,
		IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8,
		x__h16986,
		x__h41044,
		x__h41055,
		x__h6317;
  wire [47 : 0] temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553,
		temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924;
  wire [45 : 0] temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552,
		temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923;
  wire [43 : 0] temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551,
		temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922;
  wire [41 : 0] temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550,
		temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921;
  wire [39 : 0] temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549,
		temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920;
  wire [37 : 0] temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548,
		temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919;
  wire [35 : 0] temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547,
		temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918;
  wire [33 : 0] temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546,
		temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917;
  wire [31 : 0] temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545,
		temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916;
  wire [30 : 0] IF_NOT_temp_man_36_BIT_24_134_135_OR_temp_man__ETC___d1217,
		IF_NOT_temp_man_36_BIT_25_005_006_OR_temp_man__ETC___d1133,
		IF_temp_man_36_BIT_49_39_AND_temp_man_36_BIT_4_ETC___d1132,
		IF_temp_man_36_BIT_49_39_XOR_temp_man_36_BIT_4_ETC___d1216;
  wire [29 : 0] temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544,
		temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915;
  wire [27 : 0] temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543,
		temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914;
  wire [25 : 0] temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542,
		temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913;
  wire [23 : 0] temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541,
		temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912;
  wire [22 : 0] rounded_mantissa__h53042,
		rounded_mantissa__h64879,
		rounded_mantissa__h66465,
		rounded_mantissa__h66555;
  wire [21 : 0] temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540,
		temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911;
  wire [19 : 0] temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539,
		temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910;
  wire [17 : 0] temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538,
		temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909;
  wire [15 : 0] temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537,
		temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908;
  wire [13 : 0] temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536,
		temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907;
  wire [11 : 0] temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535,
		temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906;
  wire [9 : 0] temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905;
  wire [7 : 0] IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10,
	       IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4,
	       IF_c_BIT_23_THEN_0_ELSE_1__q1,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7,
	       _theResult___fst__h64880,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904;
  wire [6 : 0] tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1081;
  wire [5 : 0] temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903,
	       tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155;
  wire [4 : 0] temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1205,
	       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1121,
	       tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1080;
  wire [3 : 0] temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902,
	       tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154;
  wire [2 : 0] tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1079;
  wire [1 : 0] temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901,
	       tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153;
  wire IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_1__ETC___d985,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_2__ETC___d982,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_3__ETC___d979,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_4__ETC___d976,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_5__ETC___d973,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_6__ETC___d970,
       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_7__ETC___d967,
       NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46,
       NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49,
       NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56,
       NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57,
       got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68,
       got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929,
       s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27,
       s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34,
       s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26,
       s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31,
       temp_man_36_BIT_26_009_XOR_temp_man_36_BIT_25_005___d1188,
       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26_009___d1104,
       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26__ETC___d1187,
       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1103,
       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1186,
       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1102,
       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1185,
       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1101,
       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1184,
       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1100,
       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1183,
       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1099,
       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1182,
       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1098,
       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1181,
       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1097,
       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1180,
       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1096,
       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1179,
       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1095,
       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1178,
       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1094,
       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1177,
       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1093,
       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1176,
       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1092,
       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1175,
       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1091,
       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1174,
       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1090,
       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1173,
       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1089,
       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1172,
       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1088,
       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1171,
       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1087,
       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1170,
       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1086,
       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1169,
       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1085,
       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1168,
       temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1084,
       temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1167,
       temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1083,
       tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d946,
       x__h10059,
       x__h10106,
       x__h10251,
       x__h10298,
       x__h10443,
       x__h10490,
       x__h10635,
       x__h10682,
       x__h10827,
       x__h10874,
       x__h11019,
       x__h11066,
       x__h11211,
       x__h11258,
       x__h11403,
       x__h11450,
       x__h11595,
       x__h11642,
       x__h11787,
       x__h11834,
       x__h11979,
       x__h12026,
       x__h12171,
       x__h12218,
       x__h12363,
       x__h12410,
       x__h12555,
       x__h12602,
       x__h12747,
       x__h12794,
       x__h12939,
       x__h12986,
       x__h13131,
       x__h13178,
       x__h13323,
       x__h13370,
       x__h13515,
       x__h13562,
       x__h13707,
       x__h13754,
       x__h13899,
       x__h13946,
       x__h14091,
       x__h14138,
       x__h14283,
       x__h14330,
       x__h14475,
       x__h14522,
       x__h14667,
       x__h14714,
       x__h14859,
       x__h14906,
       x__h15051,
       x__h15098,
       x__h15243,
       x__h15290,
       x__h15435,
       x__h15482,
       x__h15627,
       x__h15674,
       x__h15819,
       x__h15866,
       x__h16011,
       x__h16058,
       x__h16203,
       x__h16250,
       x__h16395,
       x__h16442,
       x__h16587,
       x__h16634,
       x__h16720,
       x__h16779,
       x__h16826,
       x__h28513,
       x__h28641,
       x__h28699,
       x__h28830,
       x__h28888,
       x__h29019,
       x__h29077,
       x__h29208,
       x__h29266,
       x__h29397,
       x__h29455,
       x__h29586,
       x__h29644,
       x__h29775,
       x__h29833,
       x__h29964,
       x__h30022,
       x__h30153,
       x__h30211,
       x__h30342,
       x__h30400,
       x__h30531,
       x__h30589,
       x__h30720,
       x__h30778,
       x__h30909,
       x__h30967,
       x__h31098,
       x__h31156,
       x__h31287,
       x__h31345,
       x__h31476,
       x__h31534,
       x__h31665,
       x__h31723,
       x__h31854,
       x__h31912,
       x__h32043,
       x__h32101,
       x__h32232,
       x__h32290,
       x__h32421,
       x__h32479,
       x__h32610,
       x__h32668,
       x__h32799,
       x__h32857,
       x__h32988,
       x__h33046,
       x__h33177,
       x__h33235,
       x__h33366,
       x__h33424,
       x__h33555,
       x__h33613,
       x__h33744,
       x__h33802,
       x__h33933,
       x__h33991,
       x__h34122,
       x__h34180,
       x__h34311,
       x__h34369,
       x__h34500,
       x__h34558,
       x__h34689,
       x__h34747,
       x__h34878,
       x__h34936,
       x__h35067,
       x__h35125,
       x__h35256,
       x__h35314,
       x__h35445,
       x__h35503,
       x__h35634,
       x__h35692,
       x__h35823,
       x__h35881,
       x__h36012,
       x__h36070,
       x__h36201,
       x__h36259,
       x__h36390,
       x__h36448,
       x__h36579,
       x__h36637,
       x__h36768,
       x__h36826,
       x__h36957,
       x__h37015,
       x__h37146,
       x__h37204,
       x__h37335,
       x__h37393,
       x__h37524,
       x__h37582,
       x__h40010,
       x__h40201,
       x__h40392,
       x__h40583,
       x__h40774,
       x__h40860,
       x__h40965,
       x__h4325,
       x__h4536,
       x__h4664,
       x__h4722,
       x__h4853,
       x__h4911,
       x__h5042,
       x__h5100,
       x__h5231,
       x__h5289,
       x__h53307,
       x__h53433,
       x__h53619,
       x__h53805,
       x__h53991,
       x__h54177,
       x__h5420,
       x__h5478,
       x__h5609,
       x__h5667,
       x__h7755,
       x__h7802,
       x__h7947,
       x__h7994,
       x__h8139,
       x__h8186,
       x__h8331,
       x__h8378,
       x__h8523,
       x__h8570,
       x__h8715,
       x__h8762,
       x__h8907,
       x__h8954,
       x__h9099,
       x__h9146,
       x__h9291,
       x__h9338,
       x__h9483,
       x__h9530,
       x__h9675,
       x__h9722,
       x__h9867,
       x__h9914,
       y__h10001,
       y__h10060,
       y__h10193,
       y__h10252,
       y__h10385,
       y__h10444,
       y__h10577,
       y__h10636,
       y__h10769,
       y__h10828,
       y__h10961,
       y__h11020,
       y__h11153,
       y__h11212,
       y__h11345,
       y__h11404,
       y__h11537,
       y__h11596,
       y__h11729,
       y__h11788,
       y__h11921,
       y__h11980,
       y__h12113,
       y__h12172,
       y__h12305,
       y__h12364,
       y__h12497,
       y__h12556,
       y__h12689,
       y__h12748,
       y__h12881,
       y__h12940,
       y__h13073,
       y__h13132,
       y__h13265,
       y__h13324,
       y__h13457,
       y__h13516,
       y__h13649,
       y__h13708,
       y__h13841,
       y__h13900,
       y__h14033,
       y__h14092,
       y__h14225,
       y__h14284,
       y__h14417,
       y__h14476,
       y__h14609,
       y__h14668,
       y__h14801,
       y__h14860,
       y__h14993,
       y__h15052,
       y__h15185,
       y__h15244,
       y__h15377,
       y__h15436,
       y__h15569,
       y__h15628,
       y__h15761,
       y__h15820,
       y__h15953,
       y__h16012,
       y__h16145,
       y__h16204,
       y__h16337,
       y__h16396,
       y__h16529,
       y__h16588,
       y__h16721,
       y__h16780,
       y__h19562,
       y__h19664,
       y__h19748,
       y__h19934,
       y__h20120,
       y__h20306,
       y__h20492,
       y__h20678,
       y__h20864,
       y__h21050,
       y__h21236,
       y__h21422,
       y__h21608,
       y__h21794,
       y__h21980,
       y__h22166,
       y__h22352,
       y__h22538,
       y__h22724,
       y__h22910,
       y__h23096,
       y__h23282,
       y__h23468,
       y__h23654,
       y__h23840,
       y__h24026,
       y__h24212,
       y__h24398,
       y__h24584,
       y__h24770,
       y__h24956,
       y__h25142,
       y__h25328,
       y__h25514,
       y__h25700,
       y__h25886,
       y__h26072,
       y__h26258,
       y__h26444,
       y__h26630,
       y__h26816,
       y__h27002,
       y__h27188,
       y__h27374,
       y__h27560,
       y__h27746,
       y__h27932,
       y__h28118,
       y__h28304,
       y__h28514,
       y__h28516,
       y__h28642,
       y__h28644,
       y__h28700,
       y__h28831,
       y__h28833,
       y__h28889,
       y__h29020,
       y__h29022,
       y__h29078,
       y__h29209,
       y__h29211,
       y__h29267,
       y__h29398,
       y__h29400,
       y__h29456,
       y__h29587,
       y__h29589,
       y__h29645,
       y__h29776,
       y__h29778,
       y__h29834,
       y__h29965,
       y__h29967,
       y__h30023,
       y__h30154,
       y__h30156,
       y__h30212,
       y__h30343,
       y__h30345,
       y__h30401,
       y__h30532,
       y__h30534,
       y__h30590,
       y__h30721,
       y__h30723,
       y__h30779,
       y__h30910,
       y__h30912,
       y__h30968,
       y__h31099,
       y__h31101,
       y__h31157,
       y__h31288,
       y__h31290,
       y__h31346,
       y__h31477,
       y__h31479,
       y__h31535,
       y__h31666,
       y__h31668,
       y__h31724,
       y__h31855,
       y__h31857,
       y__h31913,
       y__h32044,
       y__h32046,
       y__h32102,
       y__h32233,
       y__h32235,
       y__h32291,
       y__h32422,
       y__h32424,
       y__h32480,
       y__h32611,
       y__h32613,
       y__h32669,
       y__h32800,
       y__h32802,
       y__h32858,
       y__h32989,
       y__h32991,
       y__h33047,
       y__h33178,
       y__h33180,
       y__h33236,
       y__h33367,
       y__h33369,
       y__h33425,
       y__h33556,
       y__h33558,
       y__h33614,
       y__h33745,
       y__h33747,
       y__h33803,
       y__h33934,
       y__h33936,
       y__h3396,
       y__h33992,
       y__h34123,
       y__h34125,
       y__h34181,
       y__h34312,
       y__h34314,
       y__h34370,
       y__h34501,
       y__h34503,
       y__h34559,
       y__h34690,
       y__h34692,
       y__h34748,
       y__h34879,
       y__h34881,
       y__h34937,
       y__h35068,
       y__h35070,
       y__h35126,
       y__h35257,
       y__h35259,
       y__h35315,
       y__h35446,
       y__h35448,
       y__h35504,
       y__h35635,
       y__h35637,
       y__h35693,
       y__h3582,
       y__h35824,
       y__h35826,
       y__h35882,
       y__h36013,
       y__h36015,
       y__h36071,
       y__h36202,
       y__h36204,
       y__h36260,
       y__h36391,
       y__h36393,
       y__h36449,
       y__h36580,
       y__h36582,
       y__h36638,
       y__h36769,
       y__h36771,
       y__h36827,
       y__h36958,
       y__h36960,
       y__h37016,
       y__h37147,
       y__h37149,
       y__h37205,
       y__h37336,
       y__h37338,
       y__h37394,
       y__h37525,
       y__h37527,
       y__h37583,
       y__h3768,
       y__h3954,
       y__h39906,
       y__h39965,
       y__h40097,
       y__h40156,
       y__h40288,
       y__h40347,
       y__h40479,
       y__h40538,
       y__h40670,
       y__h40729,
       y__h40861,
       y__h40920,
       y__h4140,
       y__h4326,
       y__h44196,
       y__h44382,
       y__h44568,
       y__h44754,
       y__h44940,
       y__h45126,
       y__h45312,
       y__h4537,
       y__h4539,
       y__h45498,
       y__h45684,
       y__h45870,
       y__h46056,
       y__h46242,
       y__h46428,
       y__h46614,
       y__h4665,
       y__h4667,
       y__h46800,
       y__h46986,
       y__h47172,
       y__h4723,
       y__h47358,
       y__h47544,
       y__h47730,
       y__h47916,
       y__h48102,
       y__h4854,
       y__h4856,
       y__h4912,
       y__h5043,
       y__h5045,
       y__h5101,
       y__h5232,
       y__h5234,
       y__h5290,
       y__h53434,
       y__h53620,
       y__h53806,
       y__h53992,
       y__h54178,
       y__h5421,
       y__h5423,
       y__h54364,
       y__h5479,
       y__h56030,
       y__h5610,
       y__h5612,
       y__h56216,
       y__h56402,
       y__h56588,
       y__h5668,
       y__h56774,
       y__h56960,
       y__h57146,
       y__h57332,
       y__h57518,
       y__h57704,
       y__h57890,
       y__h58076,
       y__h58262,
       y__h58448,
       y__h58634,
       y__h58820,
       y__h59006,
       y__h59192,
       y__h59378,
       y__h59564,
       y__h59750,
       y__h59936,
       y__h60122,
       y__h65273,
       y__h65462,
       y__h65651,
       y__h65840,
       y__h66029,
       y__h66218,
       y__h7697,
       y__h7756,
       y__h7803,
       y__h7889,
       y__h7948,
       y__h8081,
       y__h8140,
       y__h8273,
       y__h8332,
       y__h8465,
       y__h8524,
       y__h8657,
       y__h8716,
       y__h8849,
       y__h8908,
       y__h9041,
       y__h9100,
       y__h9233,
       y__h9292,
       y__h9425,
       y__h9484,
       y__h9617,
       y__h9676,
       y__h9809,
       y__h9868;

  // action method get_inp_s
  assign RDY_get_inp_s = !got_s && !add_done ;
  assign CAN_FIRE_get_inp_s = !got_s && !add_done ;
  assign WILL_FIRE_get_inp_s = EN_get_inp_s ;

  // action method get_inp_c
  assign RDY_get_inp_c = !got_c && !add_done ;
  assign CAN_FIRE_get_inp_c = !got_c && !add_done ;
  assign WILL_FIRE_get_inp_c = EN_get_inp_c ;

  // value method get_result
  assign get_result = end_result ;
  assign RDY_get_result = pack_done ;

  // rule RL_rl_swap
  assign CAN_FIRE_RL_rl_swap =
	     got_s && got_c && !swap_done && !handle_zero && !input_zero ;
  assign WILL_FIRE_RL_rl_swap = CAN_FIRE_RL_rl_swap ;

  // rule RL_rl_get_sign
  assign CAN_FIRE_RL_rl_get_sign =
	     got_s && got_c && swap_done && !add_done && !sign_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_get_sign = CAN_FIRE_RL_rl_get_sign ;

  // rule RL_rl_cmp_exp
  assign CAN_FIRE_RL_rl_cmp_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     !cmp_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_cmp_exp = CAN_FIRE_RL_rl_cmp_exp ;

  // rule RL_rl_align_exp
  assign CAN_FIRE_RL_rl_align_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     !align_man_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_align_exp = CAN_FIRE_RL_rl_align_exp ;

  // rule RL_rl_add_or_sub_exp
  assign CAN_FIRE_RL_rl_add_or_sub_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     align_man_done &&
	     !calc_fraction_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_add_or_sub_exp = CAN_FIRE_RL_rl_add_or_sub_exp ;

  // rule RL_rl_adj_exp
  assign CAN_FIRE_RL_rl_adj_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     !adj_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_exp = CAN_FIRE_RL_rl_adj_exp ;

  // rule RL_rl_adj_mantissa
  assign CAN_FIRE_RL_rl_adj_mantissa =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     adj_exp_done &&
	     !mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_mantissa = CAN_FIRE_RL_rl_adj_mantissa ;

  // rule RL_rl_assemble_result
  assign CAN_FIRE_RL_rl_assemble_result =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     adj_exp_done &&
	     mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_assemble_result = CAN_FIRE_RL_rl_assemble_result ;

  // rule RL_rl_handle_zero_val
  assign CAN_FIRE_RL_rl_handle_zero_val = handle_zero || input_zero ;
  assign WILL_FIRE_RL_rl_handle_zero_val =
	     CAN_FIRE_RL_rl_handle_zero_val && !EN_get_inp_c &&
	     !EN_get_inp_s ;

  // rule RL_rl_deassert_signals
  assign CAN_FIRE_RL_rl_deassert_signals = add_done ;
  assign WILL_FIRE_RL_rl_deassert_signals =
	     add_done && !WILL_FIRE_RL_rl_handle_zero_val ;

  // inputs to muxes for submodule ports
  assign MUX_add_or_sub_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;
  assign MUX_adj_exp_done_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ;
  assign MUX_c_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ;
  assign MUX_input_zero_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 ;
  assign MUX_pack_done_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;
  assign MUX_temp_man_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ;
  assign MUX_temp_man_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;
  assign MUX_add_or_sub_write_1__VAL_1 =
	     s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 ? 2'd1 : 2'd2 ;
  assign MUX_end_result_write_1__VAL_1 = { tmp_sign, exp_mantissa } ;
  assign MUX_end_result_write_1__VAL_2 =
	     handle_zero ? 32'd0 : (input_no ? s : c) ;
  assign MUX_temp_c_write_1__VAL_1 = temp_c >> exp_diff ;
  assign MUX_temp_c_write_1__VAL_2 = { 2'b01, c[22:0], 25'd0 } ;
  assign MUX_temp_man_write_1__VAL_1 =
	     (add_or_sub == 2'd1) ? x__h6317 : x__h16986 ;
  assign MUX_temp_man_write_1__VAL_2 = temp_man[49] ? x__h41044 : x__h41055 ;
  assign MUX_tmp_exp_write_1__VAL_1 =
	     { IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_7__ETC___d967,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_6__ETC___d970,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_5__ETC___d973,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_4__ETC___d976,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_3__ETC___d979,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_2__ETC___d982,
	       IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_1__ETC___d985,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;

  // register add_done
  assign add_done_D_IN = 1'd1 ;
  assign add_done_EN = MUX_pack_done_write_1__SEL_2 ;

  // register add_or_sub
  assign add_or_sub_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_add_or_sub_write_1__VAL_1 :
	       2'd0 ;
  assign add_or_sub_EN =
	     WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;

  // register addition_start
  assign addition_start_D_IN = 1'd0 ;
  assign addition_start_EN = WILL_FIRE_RL_rl_deassert_signals ;

  // register adj_exp_done
  assign adj_exp_done_D_IN = MUX_adj_exp_done_write_1__SEL_1 ;
  assign adj_exp_done_EN =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register align_man_done
  assign align_man_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign align_man_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_align_exp ;

  // register c
  assign c_D_IN = MUX_c_write_1__SEL_1 ? s : get_inp_c_inp_C ;
  assign c_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ||
	     EN_get_inp_c ;

  // register calc_fraction_done
  assign calc_fraction_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign calc_fraction_done_EN = MUX_add_or_sub_write_1__SEL_2 ;

  // register cmp_exp_done
  assign cmp_exp_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign cmp_exp_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_cmp_exp ;

  // register end_result
  assign end_result_D_IN =
	     WILL_FIRE_RL_rl_assemble_result ?
	       MUX_end_result_write_1__VAL_1 :
	       MUX_end_result_write_1__VAL_2 ;
  assign end_result_EN =
	     WILL_FIRE_RL_rl_assemble_result ||
	     WILL_FIRE_RL_rl_handle_zero_val ;

  // register exp_diff
  assign exp_diff_D_IN =
	     { x__h5609 ^ y__h5610,
	       x__h5420 ^ y__h5421,
	       tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155 } ;
  assign exp_diff_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register exp_mantissa
  assign exp_mantissa_D_IN =
	     temp_man[49] ?
	       IF_NOT_temp_man_36_BIT_25_005_006_OR_temp_man__ETC___d1133 :
	       IF_NOT_temp_man_36_BIT_24_134_135_OR_temp_man__ETC___d1217 ;
  assign exp_mantissa_EN = CAN_FIRE_RL_rl_adj_mantissa ;

  // register exp_res
  assign exp_res_D_IN = 8'h0 ;
  assign exp_res_EN = 1'b0 ;

  // register get_r
  assign get_r_D_IN = 1'b0 ;
  assign get_r_EN = 1'b0 ;

  // register got_c
  assign got_c_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign got_c_EN = WILL_FIRE_RL_rl_deassert_signals || EN_get_inp_c ;

  // register got_s
  assign got_s_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign got_s_EN = WILL_FIRE_RL_rl_deassert_signals || EN_get_inp_s ;

  // register handle_zero
  assign handle_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign handle_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register input_no
  assign input_no_D_IN = s[30:23] != 8'd0 || s[22:0] != 23'd0 ;
  assign input_no_EN = MUX_input_zero_write_1__SEL_2 ;

  // register input_zero
  assign input_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign input_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register mantissa_done
  assign mantissa_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign mantissa_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_adj_mantissa ;

  // register mantissa_res
  assign mantissa_res_D_IN = 23'h0 ;
  assign mantissa_res_EN = 1'b0 ;

  // register pack_done
  assign pack_done_D_IN = !EN_get_inp_s ;
  assign pack_done_EN =
	     EN_get_inp_s || WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register result_concatenated
  assign result_concatenated_D_IN = 1'b0 ;
  assign result_concatenated_EN = 1'b0 ;

  // register s
  assign s_D_IN = MUX_c_write_1__SEL_1 ? c : get_inp_s_inp_S ;
  assign s_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ||
	     EN_get_inp_s ;

  // register sign_done
  assign sign_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign sign_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_get_sign ;

  // register swap_done
  assign swap_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign swap_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_swap ;

  // register temp_c
  assign temp_c_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_temp_c_write_1__VAL_1 :
	       MUX_temp_c_write_1__VAL_2 ;
  assign temp_c_EN = WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_cmp_exp ;

  // register temp_man
  assign temp_man_D_IN =
	     MUX_temp_man_write_1__SEL_1 ?
	       MUX_temp_man_write_1__VAL_1 :
	       MUX_temp_man_write_1__VAL_2 ;
  assign temp_man_EN =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ||
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;

  // register temp_s
  assign temp_s_D_IN = { 2'b01, s[22:0], 25'd0 } ;
  assign temp_s_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register tmp_exp
  assign tmp_exp_D_IN =
	     MUX_temp_man_write_1__SEL_2 ?
	       MUX_tmp_exp_write_1__VAL_1 :
	       s[30:23] ;
  assign tmp_exp_EN =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ||
	     WILL_FIRE_RL_rl_get_sign ;

  // register tmp_res
  assign tmp_res_D_IN = 24'h0 ;
  assign tmp_res_EN = 1'b0 ;

  // register tmp_sign
  assign tmp_sign_D_IN = s[31] ;
  assign tmp_sign_EN = CAN_FIRE_RL_rl_get_sign ;

  // remaining internal signals
  assign IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10 =
	     (~IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2 =
	     (~IF_c_BIT_23_THEN_0_ELSE_1__q1[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6 =
	     (~temp_man[25]) ? 50'd1 : 50'd0 ;
  assign IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5 =
	     (~temp_man[26]) ? 50'd1 : 50'd0 ;
  assign IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4 =
	     (~tmp_exp[0]) ? 8'd1 : 8'd0 ;
  assign IF_NOT_temp_man_36_BIT_24_134_135_OR_temp_man__ETC___d1217 =
	     (!temp_man[24] || temp_man[23:0] == 24'd0 && !temp_man[25]) ?
	       { tmp_exp, temp_man[47:25] } :
	       IF_temp_man_36_BIT_49_39_XOR_temp_man_36_BIT_4_ETC___d1216 ;
  assign IF_NOT_temp_man_36_BIT_25_005_006_OR_temp_man__ETC___d1133 =
	     (!temp_man[25] || temp_man[24:0] == 25'd0 && !temp_man[26]) ?
	       { _theResult___fst__h64880, temp_man[48:26] } :
	       IF_temp_man_36_BIT_49_39_AND_temp_man_36_BIT_4_ETC___d1132 ;
  assign IF_c_BIT_23_THEN_0_ELSE_1__q1 = c[23] ? 8'd0 : 8'd1 ;
  assign IF_temp_c_BIT_0_THEN_1_ELSE_0__q3 = temp_c[0] ? 50'd1 : 50'd0 ;
  assign IF_temp_man_36_BIT_49_39_AND_temp_man_36_BIT_4_ETC___d1132 =
	     (temp_man[49] & y__h48102) ?
	       { tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d946 ^
		 y__h54364,
		 tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1081,
		 rounded_mantissa__h53042 } :
	       { _theResult___fst__h64880, rounded_mantissa__h66465 } ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_1__ETC___d985 =
	     temp_man[49] ? x__h53307 : x__h40010 ^ tmp_exp[0] ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_2__ETC___d982 =
	     temp_man[49] ? x__h53433 : x__h40201 ^ y__h39906 ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_3__ETC___d979 =
	     temp_man[49] ? x__h53619 : x__h40392 ^ y__h40097 ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_4__ETC___d976 =
	     temp_man[49] ? x__h53805 : x__h40583 ^ y__h40288 ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_5__ETC___d973 =
	     temp_man[49] ? x__h53991 : x__h40774 ^ y__h40479 ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_6__ETC___d970 =
	     temp_man[49] ? x__h54177 : x__h40965 ^ y__h40670 ;
  assign IF_temp_man_36_BIT_49_39_THEN_tmp_exp_5_BIT_7__ETC___d967 =
	     temp_man[49] ?
	       tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d946 :
	       x__h40860 ^ y__h40861 ;
  assign IF_temp_man_36_BIT_49_39_XOR_temp_man_36_BIT_4_ETC___d1216 =
	     (temp_man[49] ^ y__h60122) ?
	       { _theResult___fst__h64880, rounded_mantissa__h64879 } :
	       { tmp_exp, rounded_mantissa__h66555 } ;
  assign IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9 =
	     (temp_s[0] ^ IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0]) ?
	       50'd1 :
	       50'd0 ;
  assign IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8 =
	     (temp_s[0] ^ temp_c[0]) ? 50'd1 : 50'd0 ;
  assign IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7 =
	     (tmp_exp[0] ^
	      IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0]) ?
	       8'd1 :
	       8'd0 ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0 || c[30:23] != 8'd0 ||
	      c[22:0] != 23'd0) &&
	     (!s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 ||
	      !s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 ||
	      s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 =
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46 &&
	     (s[30:23] == 8'd0 && s[22:0] == 23'd0 ||
	      c[30:23] == 8'd0 && c[22:0] == 23'd0) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0) &&
	     (s[30:23] < c[30:23] ||
	      s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 &&
	      s[22:0] < c[22:0]) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 =
	     (!s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 ||
	      !s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 ||
	      s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31) &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56 ;
  assign _theResult___fst__h64880 =
	     { tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d946,
	       x__h54177,
	       x__h53991,
	       x__h53805,
	       x__h53619,
	       x__h53433,
	       x__h53307,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;
  assign got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 =
	     got_s && got_c && swap_done && sign_done ;
  assign got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     align_man_done &&
	     calc_fraction_done ;
  assign rounded_mantissa__h53042 =
	     { temp_man[49] ^ y__h48102,
	       temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1083,
	       temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1084,
	       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1085,
	       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1086,
	       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1087,
	       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1088,
	       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1089,
	       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1090,
	       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1091,
	       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1092,
	       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1093,
	       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1094,
	       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1095,
	       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1096,
	       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1097,
	       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1098,
	       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1099,
	       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1100,
	       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1101,
	       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1102,
	       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1103,
	       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26_009___d1104 } ;
  assign rounded_mantissa__h64879 =
	     { temp_man[48] ^ y__h59936,
	       temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1167,
	       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1168,
	       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1169,
	       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1170,
	       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1171,
	       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1172,
	       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1173,
	       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1174,
	       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1175,
	       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1176,
	       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1177,
	       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1178,
	       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1179,
	       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1180,
	       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1181,
	       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1182,
	       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1183,
	       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1184,
	       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1185,
	       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1186,
	       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26__ETC___d1187,
	       temp_man_36_BIT_26_009_XOR_temp_man_36_BIT_25_005___d1188 } ;
  assign rounded_mantissa__h66465 =
	     { temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1083,
	       temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1084,
	       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1085,
	       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1086,
	       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1087,
	       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1088,
	       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1089,
	       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1090,
	       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1091,
	       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1092,
	       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1093,
	       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1094,
	       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1095,
	       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1096,
	       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1097,
	       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1098,
	       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1099,
	       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1100,
	       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1121 } ;
  assign rounded_mantissa__h66555 =
	     { temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1167,
	       temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1168,
	       temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1169,
	       temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1170,
	       temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1171,
	       temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1172,
	       temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1173,
	       temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1174,
	       temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1175,
	       temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1176,
	       temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1177,
	       temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1178,
	       temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1179,
	       temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1180,
	       temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1181,
	       temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1182,
	       temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1183,
	       temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1184,
	       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1205 } ;
  assign s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 = s[22:0] == c[22:0] ;
  assign s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34 =
	     s[30:23] == 8'd0 && s[22:0] == 23'd0 && c[30:23] == 8'd0 &&
	     c[22:0] == 23'd0 ||
	     s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 &&
	     s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 &&
	     !s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 ;
  assign s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 =
	     s[30:23] == c[30:23] ;
  assign s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 = s[31] == c[31] ;
  assign temp_man_36_BIT_26_009_XOR_temp_man_36_BIT_25_005___d1188 =
	     temp_man[26] ^ temp_man[25] ;
  assign temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26_009___d1104 =
	     temp_man[27] ^ temp_man[26] ;
  assign temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26__ETC___d1187 =
	     temp_man[27] ^ y__h56030 ;
  assign temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1103 =
	     temp_man[28] ^ y__h44196 ;
  assign temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1186 =
	     temp_man[28] ^ y__h56216 ;
  assign temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1102 =
	     temp_man[29] ^ y__h44382 ;
  assign temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1185 =
	     temp_man[29] ^ y__h56402 ;
  assign temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1205 =
	     { temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1185,
	       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1186,
	       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26__ETC___d1187,
	       temp_man_36_BIT_26_009_XOR_temp_man_36_BIT_25_005___d1188,
	       IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6[0] } ;
  assign temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1101 =
	     temp_man[30] ^ y__h44568 ;
  assign temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1121 =
	     { temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1101,
	       temp_man_36_BIT_29_037_XOR_temp_man_36_BIT_28__ETC___d1102,
	       temp_man_36_BIT_28_038_XOR_temp_man_36_BIT_27__ETC___d1103,
	       temp_man_36_BIT_27_039_XOR_temp_man_36_BIT_26_009___d1104,
	       IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5[0] } ;
  assign temp_man_36_BIT_30_036_XOR_temp_man_36_BIT_29__ETC___d1184 =
	     temp_man[30] ^ y__h56588 ;
  assign temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1100 =
	     temp_man[31] ^ y__h44754 ;
  assign temp_man_36_BIT_31_035_XOR_temp_man_36_BIT_30__ETC___d1183 =
	     temp_man[31] ^ y__h56774 ;
  assign temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1099 =
	     temp_man[32] ^ y__h44940 ;
  assign temp_man_36_BIT_32_034_XOR_temp_man_36_BIT_31__ETC___d1182 =
	     temp_man[32] ^ y__h56960 ;
  assign temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1098 =
	     temp_man[33] ^ y__h45126 ;
  assign temp_man_36_BIT_33_033_XOR_temp_man_36_BIT_32__ETC___d1181 =
	     temp_man[33] ^ y__h57146 ;
  assign temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1097 =
	     temp_man[34] ^ y__h45312 ;
  assign temp_man_36_BIT_34_032_XOR_temp_man_36_BIT_33__ETC___d1180 =
	     temp_man[34] ^ y__h57332 ;
  assign temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1096 =
	     temp_man[35] ^ y__h45498 ;
  assign temp_man_36_BIT_35_031_XOR_temp_man_36_BIT_34__ETC___d1179 =
	     temp_man[35] ^ y__h57518 ;
  assign temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1095 =
	     temp_man[36] ^ y__h45684 ;
  assign temp_man_36_BIT_36_030_XOR_temp_man_36_BIT_35__ETC___d1178 =
	     temp_man[36] ^ y__h57704 ;
  assign temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1094 =
	     temp_man[37] ^ y__h45870 ;
  assign temp_man_36_BIT_37_029_XOR_temp_man_36_BIT_36__ETC___d1177 =
	     temp_man[37] ^ y__h57890 ;
  assign temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1093 =
	     temp_man[38] ^ y__h46056 ;
  assign temp_man_36_BIT_38_028_XOR_temp_man_36_BIT_37__ETC___d1176 =
	     temp_man[38] ^ y__h58076 ;
  assign temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1092 =
	     temp_man[39] ^ y__h46242 ;
  assign temp_man_36_BIT_39_027_XOR_temp_man_36_BIT_38__ETC___d1175 =
	     temp_man[39] ^ y__h58262 ;
  assign temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1091 =
	     temp_man[40] ^ y__h46428 ;
  assign temp_man_36_BIT_40_026_XOR_temp_man_36_BIT_39__ETC___d1174 =
	     temp_man[40] ^ y__h58448 ;
  assign temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1090 =
	     temp_man[41] ^ y__h46614 ;
  assign temp_man_36_BIT_41_025_XOR_temp_man_36_BIT_40__ETC___d1173 =
	     temp_man[41] ^ y__h58634 ;
  assign temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1089 =
	     temp_man[42] ^ y__h46800 ;
  assign temp_man_36_BIT_42_024_XOR_temp_man_36_BIT_41__ETC___d1172 =
	     temp_man[42] ^ y__h58820 ;
  assign temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1088 =
	     temp_man[43] ^ y__h46986 ;
  assign temp_man_36_BIT_43_023_XOR_temp_man_36_BIT_42__ETC___d1171 =
	     temp_man[43] ^ y__h59006 ;
  assign temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1087 =
	     temp_man[44] ^ y__h47172 ;
  assign temp_man_36_BIT_44_022_XOR_temp_man_36_BIT_43__ETC___d1170 =
	     temp_man[44] ^ y__h59192 ;
  assign temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1086 =
	     temp_man[45] ^ y__h47358 ;
  assign temp_man_36_BIT_45_021_XOR_temp_man_36_BIT_44__ETC___d1169 =
	     temp_man[45] ^ y__h59378 ;
  assign temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1085 =
	     temp_man[46] ^ y__h47544 ;
  assign temp_man_36_BIT_46_020_XOR_temp_man_36_BIT_45__ETC___d1168 =
	     temp_man[46] ^ y__h59564 ;
  assign temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1084 =
	     temp_man[47] ^ y__h47730 ;
  assign temp_man_36_BIT_47_019_XOR_temp_man_36_BIT_46__ETC___d1167 =
	     temp_man[47] ^ y__h59750 ;
  assign temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1083 =
	     temp_man[48] ^ y__h47916 ;
  assign temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535 =
	     { x__h9722 ^ y__h9425,
	       x__h9530 ^ y__h9233,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534 } ;
  assign temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906 =
	     { x__h30342 ^ y__h30343,
	       x__h30153 ^ y__h30154,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905 } ;
  assign temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536 =
	     { x__h10106 ^ y__h9809,
	       x__h9914 ^ y__h9617,
	       temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535 } ;
  assign temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907 =
	     { x__h30720 ^ y__h30721,
	       x__h30531 ^ y__h30532,
	       temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906 } ;
  assign temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537 =
	     { x__h10490 ^ y__h10193,
	       x__h10298 ^ y__h10001,
	       temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536 } ;
  assign temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908 =
	     { x__h31098 ^ y__h31099,
	       x__h30909 ^ y__h30910,
	       temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907 } ;
  assign temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538 =
	     { x__h10874 ^ y__h10577,
	       x__h10682 ^ y__h10385,
	       temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537 } ;
  assign temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909 =
	     { x__h31476 ^ y__h31477,
	       x__h31287 ^ y__h31288,
	       temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908 } ;
  assign temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539 =
	     { x__h11258 ^ y__h10961,
	       x__h11066 ^ y__h10769,
	       temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538 } ;
  assign temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910 =
	     { x__h31854 ^ y__h31855,
	       x__h31665 ^ y__h31666,
	       temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909 } ;
  assign temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530 =
	     { x__h7802 ^ y__h7803,
	       IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8[0] } ;
  assign temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901 =
	     { x__h28513 ^ y__h28514,
	       IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9[0] } ;
  assign temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540 =
	     { x__h11642 ^ y__h11345,
	       x__h11450 ^ y__h11153,
	       temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539 } ;
  assign temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911 =
	     { x__h32232 ^ y__h32233,
	       x__h32043 ^ y__h32044,
	       temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910 } ;
  assign temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541 =
	     { x__h12026 ^ y__h11729,
	       x__h11834 ^ y__h11537,
	       temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540 } ;
  assign temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912 =
	     { x__h32610 ^ y__h32611,
	       x__h32421 ^ y__h32422,
	       temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911 } ;
  assign temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542 =
	     { x__h12410 ^ y__h12113,
	       x__h12218 ^ y__h11921,
	       temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541 } ;
  assign temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913 =
	     { x__h32988 ^ y__h32989,
	       x__h32799 ^ y__h32800,
	       temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912 } ;
  assign temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543 =
	     { x__h12794 ^ y__h12497,
	       x__h12602 ^ y__h12305,
	       temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542 } ;
  assign temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914 =
	     { x__h33366 ^ y__h33367,
	       x__h33177 ^ y__h33178,
	       temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913 } ;
  assign temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544 =
	     { x__h13178 ^ y__h12881,
	       x__h12986 ^ y__h12689,
	       temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543 } ;
  assign temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915 =
	     { x__h33744 ^ y__h33745,
	       x__h33555 ^ y__h33556,
	       temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914 } ;
  assign temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545 =
	     { x__h13562 ^ y__h13265,
	       x__h13370 ^ y__h13073,
	       temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544 } ;
  assign temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916 =
	     { x__h34122 ^ y__h34123,
	       x__h33933 ^ y__h33934,
	       temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915 } ;
  assign temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546 =
	     { x__h13946 ^ y__h13649,
	       x__h13754 ^ y__h13457,
	       temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545 } ;
  assign temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917 =
	     { x__h34500 ^ y__h34501,
	       x__h34311 ^ y__h34312,
	       temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916 } ;
  assign temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547 =
	     { x__h14330 ^ y__h14033,
	       x__h14138 ^ y__h13841,
	       temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546 } ;
  assign temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918 =
	     { x__h34878 ^ y__h34879,
	       x__h34689 ^ y__h34690,
	       temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917 } ;
  assign temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548 =
	     { x__h14714 ^ y__h14417,
	       x__h14522 ^ y__h14225,
	       temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547 } ;
  assign temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919 =
	     { x__h35256 ^ y__h35257,
	       x__h35067 ^ y__h35068,
	       temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918 } ;
  assign temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549 =
	     { x__h15098 ^ y__h14801,
	       x__h14906 ^ y__h14609,
	       temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548 } ;
  assign temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920 =
	     { x__h35634 ^ y__h35635,
	       x__h35445 ^ y__h35446,
	       temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919 } ;
  assign temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531 =
	     { x__h8186 ^ y__h7889,
	       x__h7994 ^ y__h7697,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530 } ;
  assign temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902 =
	     { x__h28830 ^ y__h28831,
	       x__h28641 ^ y__h28642,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901 } ;
  assign temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550 =
	     { x__h15482 ^ y__h15185,
	       x__h15290 ^ y__h14993,
	       temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549 } ;
  assign temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921 =
	     { x__h36012 ^ y__h36013,
	       x__h35823 ^ y__h35824,
	       temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920 } ;
  assign temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551 =
	     { x__h15866 ^ y__h15569,
	       x__h15674 ^ y__h15377,
	       temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550 } ;
  assign temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922 =
	     { x__h36390 ^ y__h36391,
	       x__h36201 ^ y__h36202,
	       temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921 } ;
  assign temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552 =
	     { x__h16250 ^ y__h15953,
	       x__h16058 ^ y__h15761,
	       temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551 } ;
  assign temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923 =
	     { x__h36768 ^ y__h36769,
	       x__h36579 ^ y__h36580,
	       temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922 } ;
  assign temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553 =
	     { x__h16634 ^ y__h16337,
	       x__h16442 ^ y__h16145,
	       temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552 } ;
  assign temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924 =
	     { x__h37146 ^ y__h37147,
	       x__h36957 ^ y__h36958,
	       temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923 } ;
  assign temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532 =
	     { x__h8570 ^ y__h8273,
	       x__h8378 ^ y__h8081,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531 } ;
  assign temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903 =
	     { x__h29208 ^ y__h29209,
	       x__h29019 ^ y__h29020,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902 } ;
  assign temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533 =
	     { x__h8954 ^ y__h8657,
	       x__h8762 ^ y__h8465,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532 } ;
  assign temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904 =
	     { x__h29586 ^ y__h29587,
	       x__h29397 ^ y__h29398,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903 } ;
  assign temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534 =
	     { x__h9338 ^ y__h9041,
	       x__h9146 ^ y__h8849,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533 } ;
  assign temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905 =
	     { x__h29964 ^ y__h29965,
	       x__h29775 ^ y__h29776,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904 } ;
  assign tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153 =
	     { x__h4536 ^ y__h4537,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7[0] } ;
  assign tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1079 =
	     { x__h53433 ^ y__h53434,
	       x__h53307 ^ IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0],
	       IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10[0] } ;
  assign tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154 =
	     { x__h4853 ^ y__h4854,
	       x__h4664 ^ y__h4665,
	       tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153 } ;
  assign tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1080 =
	     { x__h53805 ^ y__h53806,
	       x__h53619 ^ y__h53620,
	       tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1079 } ;
  assign tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155 =
	     { x__h5231 ^ y__h5232,
	       x__h5042 ^ y__h5043,
	       tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154 } ;
  assign tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1081 =
	     { x__h54177 ^ y__h54178,
	       x__h53991 ^ y__h53992,
	       tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1080 } ;
  assign tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d946 =
	     tmp_exp[7] ^ y__h66218 ;
  assign x__h10059 = temp_s[13] & temp_c[13] ;
  assign x__h10106 = temp_s[13] ^ temp_c[13] ;
  assign x__h10251 = temp_s[14] & temp_c[14] ;
  assign x__h10298 = temp_s[14] ^ temp_c[14] ;
  assign x__h10443 = temp_s[15] & temp_c[15] ;
  assign x__h10490 = temp_s[15] ^ temp_c[15] ;
  assign x__h10635 = temp_s[16] & temp_c[16] ;
  assign x__h10682 = temp_s[16] ^ temp_c[16] ;
  assign x__h10827 = temp_s[17] & temp_c[17] ;
  assign x__h10874 = temp_s[17] ^ temp_c[17] ;
  assign x__h11019 = temp_s[18] & temp_c[18] ;
  assign x__h11066 = temp_s[18] ^ temp_c[18] ;
  assign x__h11211 = temp_s[19] & temp_c[19] ;
  assign x__h11258 = temp_s[19] ^ temp_c[19] ;
  assign x__h11403 = temp_s[20] & temp_c[20] ;
  assign x__h11450 = temp_s[20] ^ temp_c[20] ;
  assign x__h11595 = temp_s[21] & temp_c[21] ;
  assign x__h11642 = temp_s[21] ^ temp_c[21] ;
  assign x__h11787 = temp_s[22] & temp_c[22] ;
  assign x__h11834 = temp_s[22] ^ temp_c[22] ;
  assign x__h11979 = temp_s[23] & temp_c[23] ;
  assign x__h12026 = temp_s[23] ^ temp_c[23] ;
  assign x__h12171 = temp_s[24] & temp_c[24] ;
  assign x__h12218 = temp_s[24] ^ temp_c[24] ;
  assign x__h12363 = temp_s[25] & temp_c[25] ;
  assign x__h12410 = temp_s[25] ^ temp_c[25] ;
  assign x__h12555 = temp_s[26] & temp_c[26] ;
  assign x__h12602 = temp_s[26] ^ temp_c[26] ;
  assign x__h12747 = temp_s[27] & temp_c[27] ;
  assign x__h12794 = temp_s[27] ^ temp_c[27] ;
  assign x__h12939 = temp_s[28] & temp_c[28] ;
  assign x__h12986 = temp_s[28] ^ temp_c[28] ;
  assign x__h13131 = temp_s[29] & temp_c[29] ;
  assign x__h13178 = temp_s[29] ^ temp_c[29] ;
  assign x__h13323 = temp_s[30] & temp_c[30] ;
  assign x__h13370 = temp_s[30] ^ temp_c[30] ;
  assign x__h13515 = temp_s[31] & temp_c[31] ;
  assign x__h13562 = temp_s[31] ^ temp_c[31] ;
  assign x__h13707 = temp_s[32] & temp_c[32] ;
  assign x__h13754 = temp_s[32] ^ temp_c[32] ;
  assign x__h13899 = temp_s[33] & temp_c[33] ;
  assign x__h13946 = temp_s[33] ^ temp_c[33] ;
  assign x__h14091 = temp_s[34] & temp_c[34] ;
  assign x__h14138 = temp_s[34] ^ temp_c[34] ;
  assign x__h14283 = temp_s[35] & temp_c[35] ;
  assign x__h14330 = temp_s[35] ^ temp_c[35] ;
  assign x__h14475 = temp_s[36] & temp_c[36] ;
  assign x__h14522 = temp_s[36] ^ temp_c[36] ;
  assign x__h14667 = temp_s[37] & temp_c[37] ;
  assign x__h14714 = temp_s[37] ^ temp_c[37] ;
  assign x__h14859 = temp_s[38] & temp_c[38] ;
  assign x__h14906 = temp_s[38] ^ temp_c[38] ;
  assign x__h15051 = temp_s[39] & temp_c[39] ;
  assign x__h15098 = temp_s[39] ^ temp_c[39] ;
  assign x__h15243 = temp_s[40] & temp_c[40] ;
  assign x__h15290 = temp_s[40] ^ temp_c[40] ;
  assign x__h15435 = temp_s[41] & temp_c[41] ;
  assign x__h15482 = temp_s[41] ^ temp_c[41] ;
  assign x__h15627 = temp_s[42] & temp_c[42] ;
  assign x__h15674 = temp_s[42] ^ temp_c[42] ;
  assign x__h15819 = temp_s[43] & temp_c[43] ;
  assign x__h15866 = temp_s[43] ^ temp_c[43] ;
  assign x__h16011 = temp_s[44] & temp_c[44] ;
  assign x__h16058 = temp_s[44] ^ temp_c[44] ;
  assign x__h16203 = temp_s[45] & temp_c[45] ;
  assign x__h16250 = temp_s[45] ^ temp_c[45] ;
  assign x__h16395 = temp_s[46] & temp_c[46] ;
  assign x__h16442 = temp_s[46] ^ temp_c[46] ;
  assign x__h16587 = temp_s[47] & temp_c[47] ;
  assign x__h16634 = temp_s[47] ^ temp_c[47] ;
  assign x__h16720 = temp_s[49] ^ temp_c[49] ;
  assign x__h16779 = temp_s[48] & temp_c[48] ;
  assign x__h16826 = temp_s[48] ^ temp_c[48] ;
  assign x__h16986 =
	     { x__h37524 ^ y__h37525,
	       x__h37335 ^ y__h37336,
	       temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924 } ;
  assign x__h28513 = temp_s[1] ^ y__h28516 ;
  assign x__h28641 = temp_s[2] ^ y__h28644 ;
  assign x__h28699 = temp_s[1] & y__h28516 ;
  assign x__h28830 = temp_s[3] ^ y__h28833 ;
  assign x__h28888 = temp_s[2] & y__h28644 ;
  assign x__h29019 = temp_s[4] ^ y__h29022 ;
  assign x__h29077 = temp_s[3] & y__h28833 ;
  assign x__h29208 = temp_s[5] ^ y__h29211 ;
  assign x__h29266 = temp_s[4] & y__h29022 ;
  assign x__h29397 = temp_s[6] ^ y__h29400 ;
  assign x__h29455 = temp_s[5] & y__h29211 ;
  assign x__h29586 = temp_s[7] ^ y__h29589 ;
  assign x__h29644 = temp_s[6] & y__h29400 ;
  assign x__h29775 = temp_s[8] ^ y__h29778 ;
  assign x__h29833 = temp_s[7] & y__h29589 ;
  assign x__h29964 = temp_s[9] ^ y__h29967 ;
  assign x__h30022 = temp_s[8] & y__h29778 ;
  assign x__h30153 = temp_s[10] ^ y__h30156 ;
  assign x__h30211 = temp_s[9] & y__h29967 ;
  assign x__h30342 = temp_s[11] ^ y__h30345 ;
  assign x__h30400 = temp_s[10] & y__h30156 ;
  assign x__h30531 = temp_s[12] ^ y__h30534 ;
  assign x__h30589 = temp_s[11] & y__h30345 ;
  assign x__h30720 = temp_s[13] ^ y__h30723 ;
  assign x__h30778 = temp_s[12] & y__h30534 ;
  assign x__h30909 = temp_s[14] ^ y__h30912 ;
  assign x__h30967 = temp_s[13] & y__h30723 ;
  assign x__h31098 = temp_s[15] ^ y__h31101 ;
  assign x__h31156 = temp_s[14] & y__h30912 ;
  assign x__h31287 = temp_s[16] ^ y__h31290 ;
  assign x__h31345 = temp_s[15] & y__h31101 ;
  assign x__h31476 = temp_s[17] ^ y__h31479 ;
  assign x__h31534 = temp_s[16] & y__h31290 ;
  assign x__h31665 = temp_s[18] ^ y__h31668 ;
  assign x__h31723 = temp_s[17] & y__h31479 ;
  assign x__h31854 = temp_s[19] ^ y__h31857 ;
  assign x__h31912 = temp_s[18] & y__h31668 ;
  assign x__h32043 = temp_s[20] ^ y__h32046 ;
  assign x__h32101 = temp_s[19] & y__h31857 ;
  assign x__h32232 = temp_s[21] ^ y__h32235 ;
  assign x__h32290 = temp_s[20] & y__h32046 ;
  assign x__h32421 = temp_s[22] ^ y__h32424 ;
  assign x__h32479 = temp_s[21] & y__h32235 ;
  assign x__h32610 = temp_s[23] ^ y__h32613 ;
  assign x__h32668 = temp_s[22] & y__h32424 ;
  assign x__h32799 = temp_s[24] ^ y__h32802 ;
  assign x__h32857 = temp_s[23] & y__h32613 ;
  assign x__h32988 = temp_s[25] ^ y__h32991 ;
  assign x__h33046 = temp_s[24] & y__h32802 ;
  assign x__h33177 = temp_s[26] ^ y__h33180 ;
  assign x__h33235 = temp_s[25] & y__h32991 ;
  assign x__h33366 = temp_s[27] ^ y__h33369 ;
  assign x__h33424 = temp_s[26] & y__h33180 ;
  assign x__h33555 = temp_s[28] ^ y__h33558 ;
  assign x__h33613 = temp_s[27] & y__h33369 ;
  assign x__h33744 = temp_s[29] ^ y__h33747 ;
  assign x__h33802 = temp_s[28] & y__h33558 ;
  assign x__h33933 = temp_s[30] ^ y__h33936 ;
  assign x__h33991 = temp_s[29] & y__h33747 ;
  assign x__h34122 = temp_s[31] ^ y__h34125 ;
  assign x__h34180 = temp_s[30] & y__h33936 ;
  assign x__h34311 = temp_s[32] ^ y__h34314 ;
  assign x__h34369 = temp_s[31] & y__h34125 ;
  assign x__h34500 = temp_s[33] ^ y__h34503 ;
  assign x__h34558 = temp_s[32] & y__h34314 ;
  assign x__h34689 = temp_s[34] ^ y__h34692 ;
  assign x__h34747 = temp_s[33] & y__h34503 ;
  assign x__h34878 = temp_s[35] ^ y__h34881 ;
  assign x__h34936 = temp_s[34] & y__h34692 ;
  assign x__h35067 = temp_s[36] ^ y__h35070 ;
  assign x__h35125 = temp_s[35] & y__h34881 ;
  assign x__h35256 = temp_s[37] ^ y__h35259 ;
  assign x__h35314 = temp_s[36] & y__h35070 ;
  assign x__h35445 = temp_s[38] ^ y__h35448 ;
  assign x__h35503 = temp_s[37] & y__h35259 ;
  assign x__h35634 = temp_s[39] ^ y__h35637 ;
  assign x__h35692 = temp_s[38] & y__h35448 ;
  assign x__h35823 = temp_s[40] ^ y__h35826 ;
  assign x__h35881 = temp_s[39] & y__h35637 ;
  assign x__h36012 = temp_s[41] ^ y__h36015 ;
  assign x__h36070 = temp_s[40] & y__h35826 ;
  assign x__h36201 = temp_s[42] ^ y__h36204 ;
  assign x__h36259 = temp_s[41] & y__h36015 ;
  assign x__h36390 = temp_s[43] ^ y__h36393 ;
  assign x__h36448 = temp_s[42] & y__h36204 ;
  assign x__h36579 = temp_s[44] ^ y__h36582 ;
  assign x__h36637 = temp_s[43] & y__h36393 ;
  assign x__h36768 = temp_s[45] ^ y__h36771 ;
  assign x__h36826 = temp_s[44] & y__h36582 ;
  assign x__h36957 = temp_s[46] ^ y__h36960 ;
  assign x__h37015 = temp_s[45] & y__h36771 ;
  assign x__h37146 = temp_s[47] ^ y__h37149 ;
  assign x__h37204 = temp_s[46] & y__h36960 ;
  assign x__h37335 = temp_s[48] ^ y__h37338 ;
  assign x__h37393 = temp_s[47] & y__h37149 ;
  assign x__h37524 = temp_s[49] ^ y__h37527 ;
  assign x__h37582 = temp_s[48] & y__h37338 ;
  assign x__h40010 = ~tmp_exp[1] ;
  assign x__h40201 = ~tmp_exp[2] ;
  assign x__h40392 = ~tmp_exp[3] ;
  assign x__h40583 = ~tmp_exp[4] ;
  assign x__h40774 = ~tmp_exp[5] ;
  assign x__h40860 = ~tmp_exp[7] ;
  assign x__h40965 = ~tmp_exp[6] ;
  assign x__h41044 = { 1'd0, temp_man[49:1] } ;
  assign x__h41055 = { temp_man[48:0], 1'd0 } ;
  assign x__h4325 = !c[30] ;
  assign x__h4536 = tmp_exp[1] ^ y__h4539 ;
  assign x__h4664 = tmp_exp[2] ^ y__h4667 ;
  assign x__h4722 = tmp_exp[1] & y__h4539 ;
  assign x__h4853 = tmp_exp[3] ^ y__h4856 ;
  assign x__h4911 = tmp_exp[2] & y__h4667 ;
  assign x__h5042 = tmp_exp[4] ^ y__h5045 ;
  assign x__h5100 = tmp_exp[3] & y__h4856 ;
  assign x__h5231 = tmp_exp[5] ^ y__h5234 ;
  assign x__h5289 = tmp_exp[4] & y__h5045 ;
  assign x__h53307 = tmp_exp[1] ^ tmp_exp[0] ;
  assign x__h53433 = tmp_exp[2] ^ y__h65273 ;
  assign x__h53619 = tmp_exp[3] ^ y__h65462 ;
  assign x__h53805 = tmp_exp[4] ^ y__h65651 ;
  assign x__h53991 = tmp_exp[5] ^ y__h65840 ;
  assign x__h54177 = tmp_exp[6] ^ y__h66029 ;
  assign x__h5420 = tmp_exp[6] ^ y__h5423 ;
  assign x__h5478 = tmp_exp[5] & y__h5234 ;
  assign x__h5609 = tmp_exp[7] ^ y__h5612 ;
  assign x__h5667 = tmp_exp[6] & y__h5423 ;
  assign x__h6317 =
	     { x__h16720 ^ y__h16721,
	       x__h16826 ^ y__h16529,
	       temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553 } ;
  assign x__h7755 = temp_s[1] & temp_c[1] ;
  assign x__h7802 = temp_s[1] ^ temp_c[1] ;
  assign x__h7947 = temp_s[2] & temp_c[2] ;
  assign x__h7994 = temp_s[2] ^ temp_c[2] ;
  assign x__h8139 = temp_s[3] & temp_c[3] ;
  assign x__h8186 = temp_s[3] ^ temp_c[3] ;
  assign x__h8331 = temp_s[4] & temp_c[4] ;
  assign x__h8378 = temp_s[4] ^ temp_c[4] ;
  assign x__h8523 = temp_s[5] & temp_c[5] ;
  assign x__h8570 = temp_s[5] ^ temp_c[5] ;
  assign x__h8715 = temp_s[6] & temp_c[6] ;
  assign x__h8762 = temp_s[6] ^ temp_c[6] ;
  assign x__h8907 = temp_s[7] & temp_c[7] ;
  assign x__h8954 = temp_s[7] ^ temp_c[7] ;
  assign x__h9099 = temp_s[8] & temp_c[8] ;
  assign x__h9146 = temp_s[8] ^ temp_c[8] ;
  assign x__h9291 = temp_s[9] & temp_c[9] ;
  assign x__h9338 = temp_s[9] ^ temp_c[9] ;
  assign x__h9483 = temp_s[10] & temp_c[10] ;
  assign x__h9530 = temp_s[10] ^ temp_c[10] ;
  assign x__h9675 = temp_s[11] & temp_c[11] ;
  assign x__h9722 = temp_s[11] ^ temp_c[11] ;
  assign x__h9867 = temp_s[12] & temp_c[12] ;
  assign x__h9914 = temp_s[12] ^ temp_c[12] ;
  assign y__h10001 = x__h10059 | y__h10060 ;
  assign y__h10060 = x__h10106 & y__h9809 ;
  assign y__h10193 = x__h10251 | y__h10252 ;
  assign y__h10252 = x__h10298 & y__h10001 ;
  assign y__h10385 = x__h10443 | y__h10444 ;
  assign y__h10444 = x__h10490 & y__h10193 ;
  assign y__h10577 = x__h10635 | y__h10636 ;
  assign y__h10636 = x__h10682 & y__h10385 ;
  assign y__h10769 = x__h10827 | y__h10828 ;
  assign y__h10828 = x__h10874 & y__h10577 ;
  assign y__h10961 = x__h11019 | y__h11020 ;
  assign y__h11020 = x__h11066 & y__h10769 ;
  assign y__h11153 = x__h11211 | y__h11212 ;
  assign y__h11212 = x__h11258 & y__h10961 ;
  assign y__h11345 = x__h11403 | y__h11404 ;
  assign y__h11404 = x__h11450 & y__h11153 ;
  assign y__h11537 = x__h11595 | y__h11596 ;
  assign y__h11596 = x__h11642 & y__h11345 ;
  assign y__h11729 = x__h11787 | y__h11788 ;
  assign y__h11788 = x__h11834 & y__h11537 ;
  assign y__h11921 = x__h11979 | y__h11980 ;
  assign y__h11980 = x__h12026 & y__h11729 ;
  assign y__h12113 = x__h12171 | y__h12172 ;
  assign y__h12172 = x__h12218 & y__h11921 ;
  assign y__h12305 = x__h12363 | y__h12364 ;
  assign y__h12364 = x__h12410 & y__h12113 ;
  assign y__h12497 = x__h12555 | y__h12556 ;
  assign y__h12556 = x__h12602 & y__h12305 ;
  assign y__h12689 = x__h12747 | y__h12748 ;
  assign y__h12748 = x__h12794 & y__h12497 ;
  assign y__h12881 = x__h12939 | y__h12940 ;
  assign y__h12940 = x__h12986 & y__h12689 ;
  assign y__h13073 = x__h13131 | y__h13132 ;
  assign y__h13132 = x__h13178 & y__h12881 ;
  assign y__h13265 = x__h13323 | y__h13324 ;
  assign y__h13324 = x__h13370 & y__h13073 ;
  assign y__h13457 = x__h13515 | y__h13516 ;
  assign y__h13516 = x__h13562 & y__h13265 ;
  assign y__h13649 = x__h13707 | y__h13708 ;
  assign y__h13708 = x__h13754 & y__h13457 ;
  assign y__h13841 = x__h13899 | y__h13900 ;
  assign y__h13900 = x__h13946 & y__h13649 ;
  assign y__h14033 = x__h14091 | y__h14092 ;
  assign y__h14092 = x__h14138 & y__h13841 ;
  assign y__h14225 = x__h14283 | y__h14284 ;
  assign y__h14284 = x__h14330 & y__h14033 ;
  assign y__h14417 = x__h14475 | y__h14476 ;
  assign y__h14476 = x__h14522 & y__h14225 ;
  assign y__h14609 = x__h14667 | y__h14668 ;
  assign y__h14668 = x__h14714 & y__h14417 ;
  assign y__h14801 = x__h14859 | y__h14860 ;
  assign y__h14860 = x__h14906 & y__h14609 ;
  assign y__h14993 = x__h15051 | y__h15052 ;
  assign y__h15052 = x__h15098 & y__h14801 ;
  assign y__h15185 = x__h15243 | y__h15244 ;
  assign y__h15244 = x__h15290 & y__h14993 ;
  assign y__h15377 = x__h15435 | y__h15436 ;
  assign y__h15436 = x__h15482 & y__h15185 ;
  assign y__h15569 = x__h15627 | y__h15628 ;
  assign y__h15628 = x__h15674 & y__h15377 ;
  assign y__h15761 = x__h15819 | y__h15820 ;
  assign y__h15820 = x__h15866 & y__h15569 ;
  assign y__h15953 = x__h16011 | y__h16012 ;
  assign y__h16012 = x__h16058 & y__h15761 ;
  assign y__h16145 = x__h16203 | y__h16204 ;
  assign y__h16204 = x__h16250 & y__h15953 ;
  assign y__h16337 = x__h16395 | y__h16396 ;
  assign y__h16396 = x__h16442 & y__h16145 ;
  assign y__h16529 = x__h16587 | y__h16588 ;
  assign y__h16588 = x__h16634 & y__h16337 ;
  assign y__h16721 = x__h16779 | y__h16780 ;
  assign y__h16780 = x__h16826 & y__h16529 ;
  assign y__h19562 = temp_c[1] & y__h19664 ;
  assign y__h19664 = ~temp_c[0] ;
  assign y__h19748 = temp_c[2] & y__h19562 ;
  assign y__h19934 = temp_c[3] & y__h19748 ;
  assign y__h20120 = temp_c[4] & y__h19934 ;
  assign y__h20306 = temp_c[5] & y__h20120 ;
  assign y__h20492 = temp_c[6] & y__h20306 ;
  assign y__h20678 = temp_c[7] & y__h20492 ;
  assign y__h20864 = temp_c[8] & y__h20678 ;
  assign y__h21050 = temp_c[9] & y__h20864 ;
  assign y__h21236 = temp_c[10] & y__h21050 ;
  assign y__h21422 = temp_c[11] & y__h21236 ;
  assign y__h21608 = temp_c[12] & y__h21422 ;
  assign y__h21794 = temp_c[13] & y__h21608 ;
  assign y__h21980 = temp_c[14] & y__h21794 ;
  assign y__h22166 = temp_c[15] & y__h21980 ;
  assign y__h22352 = temp_c[16] & y__h22166 ;
  assign y__h22538 = temp_c[17] & y__h22352 ;
  assign y__h22724 = temp_c[18] & y__h22538 ;
  assign y__h22910 = temp_c[19] & y__h22724 ;
  assign y__h23096 = temp_c[20] & y__h22910 ;
  assign y__h23282 = temp_c[21] & y__h23096 ;
  assign y__h23468 = temp_c[22] & y__h23282 ;
  assign y__h23654 = temp_c[23] & y__h23468 ;
  assign y__h23840 = temp_c[24] & y__h23654 ;
  assign y__h24026 = temp_c[25] & y__h23840 ;
  assign y__h24212 = temp_c[26] & y__h24026 ;
  assign y__h24398 = temp_c[27] & y__h24212 ;
  assign y__h24584 = temp_c[28] & y__h24398 ;
  assign y__h24770 = temp_c[29] & y__h24584 ;
  assign y__h24956 = temp_c[30] & y__h24770 ;
  assign y__h25142 = temp_c[31] & y__h24956 ;
  assign y__h25328 = temp_c[32] & y__h25142 ;
  assign y__h25514 = temp_c[33] & y__h25328 ;
  assign y__h25700 = temp_c[34] & y__h25514 ;
  assign y__h25886 = temp_c[35] & y__h25700 ;
  assign y__h26072 = temp_c[36] & y__h25886 ;
  assign y__h26258 = temp_c[37] & y__h26072 ;
  assign y__h26444 = temp_c[38] & y__h26258 ;
  assign y__h26630 = temp_c[39] & y__h26444 ;
  assign y__h26816 = temp_c[40] & y__h26630 ;
  assign y__h27002 = temp_c[41] & y__h26816 ;
  assign y__h27188 = temp_c[42] & y__h27002 ;
  assign y__h27374 = temp_c[43] & y__h27188 ;
  assign y__h27560 = temp_c[44] & y__h27374 ;
  assign y__h27746 = temp_c[45] & y__h27560 ;
  assign y__h27932 = temp_c[46] & y__h27746 ;
  assign y__h28118 = temp_c[47] & y__h27932 ;
  assign y__h28304 = temp_c[48] & y__h28118 ;
  assign y__h28514 = temp_s[0] & IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0] ;
  assign y__h28516 = temp_c[1] ^ y__h19664 ;
  assign y__h28642 = x__h28699 | y__h28700 ;
  assign y__h28644 = temp_c[2] ^ y__h19562 ;
  assign y__h28700 = x__h28513 & y__h28514 ;
  assign y__h28831 = x__h28888 | y__h28889 ;
  assign y__h28833 = temp_c[3] ^ y__h19748 ;
  assign y__h28889 = x__h28641 & y__h28642 ;
  assign y__h29020 = x__h29077 | y__h29078 ;
  assign y__h29022 = temp_c[4] ^ y__h19934 ;
  assign y__h29078 = x__h28830 & y__h28831 ;
  assign y__h29209 = x__h29266 | y__h29267 ;
  assign y__h29211 = temp_c[5] ^ y__h20120 ;
  assign y__h29267 = x__h29019 & y__h29020 ;
  assign y__h29398 = x__h29455 | y__h29456 ;
  assign y__h29400 = temp_c[6] ^ y__h20306 ;
  assign y__h29456 = x__h29208 & y__h29209 ;
  assign y__h29587 = x__h29644 | y__h29645 ;
  assign y__h29589 = temp_c[7] ^ y__h20492 ;
  assign y__h29645 = x__h29397 & y__h29398 ;
  assign y__h29776 = x__h29833 | y__h29834 ;
  assign y__h29778 = temp_c[8] ^ y__h20678 ;
  assign y__h29834 = x__h29586 & y__h29587 ;
  assign y__h29965 = x__h30022 | y__h30023 ;
  assign y__h29967 = temp_c[9] ^ y__h20864 ;
  assign y__h30023 = x__h29775 & y__h29776 ;
  assign y__h30154 = x__h30211 | y__h30212 ;
  assign y__h30156 = temp_c[10] ^ y__h21050 ;
  assign y__h30212 = x__h29964 & y__h29965 ;
  assign y__h30343 = x__h30400 | y__h30401 ;
  assign y__h30345 = temp_c[11] ^ y__h21236 ;
  assign y__h30401 = x__h30153 & y__h30154 ;
  assign y__h30532 = x__h30589 | y__h30590 ;
  assign y__h30534 = temp_c[12] ^ y__h21422 ;
  assign y__h30590 = x__h30342 & y__h30343 ;
  assign y__h30721 = x__h30778 | y__h30779 ;
  assign y__h30723 = temp_c[13] ^ y__h21608 ;
  assign y__h30779 = x__h30531 & y__h30532 ;
  assign y__h30910 = x__h30967 | y__h30968 ;
  assign y__h30912 = temp_c[14] ^ y__h21794 ;
  assign y__h30968 = x__h30720 & y__h30721 ;
  assign y__h31099 = x__h31156 | y__h31157 ;
  assign y__h31101 = temp_c[15] ^ y__h21980 ;
  assign y__h31157 = x__h30909 & y__h30910 ;
  assign y__h31288 = x__h31345 | y__h31346 ;
  assign y__h31290 = temp_c[16] ^ y__h22166 ;
  assign y__h31346 = x__h31098 & y__h31099 ;
  assign y__h31477 = x__h31534 | y__h31535 ;
  assign y__h31479 = temp_c[17] ^ y__h22352 ;
  assign y__h31535 = x__h31287 & y__h31288 ;
  assign y__h31666 = x__h31723 | y__h31724 ;
  assign y__h31668 = temp_c[18] ^ y__h22538 ;
  assign y__h31724 = x__h31476 & y__h31477 ;
  assign y__h31855 = x__h31912 | y__h31913 ;
  assign y__h31857 = temp_c[19] ^ y__h22724 ;
  assign y__h31913 = x__h31665 & y__h31666 ;
  assign y__h32044 = x__h32101 | y__h32102 ;
  assign y__h32046 = temp_c[20] ^ y__h22910 ;
  assign y__h32102 = x__h31854 & y__h31855 ;
  assign y__h32233 = x__h32290 | y__h32291 ;
  assign y__h32235 = temp_c[21] ^ y__h23096 ;
  assign y__h32291 = x__h32043 & y__h32044 ;
  assign y__h32422 = x__h32479 | y__h32480 ;
  assign y__h32424 = temp_c[22] ^ y__h23282 ;
  assign y__h32480 = x__h32232 & y__h32233 ;
  assign y__h32611 = x__h32668 | y__h32669 ;
  assign y__h32613 = temp_c[23] ^ y__h23468 ;
  assign y__h32669 = x__h32421 & y__h32422 ;
  assign y__h32800 = x__h32857 | y__h32858 ;
  assign y__h32802 = temp_c[24] ^ y__h23654 ;
  assign y__h32858 = x__h32610 & y__h32611 ;
  assign y__h32989 = x__h33046 | y__h33047 ;
  assign y__h32991 = temp_c[25] ^ y__h23840 ;
  assign y__h33047 = x__h32799 & y__h32800 ;
  assign y__h33178 = x__h33235 | y__h33236 ;
  assign y__h33180 = temp_c[26] ^ y__h24026 ;
  assign y__h33236 = x__h32988 & y__h32989 ;
  assign y__h33367 = x__h33424 | y__h33425 ;
  assign y__h33369 = temp_c[27] ^ y__h24212 ;
  assign y__h33425 = x__h33177 & y__h33178 ;
  assign y__h33556 = x__h33613 | y__h33614 ;
  assign y__h33558 = temp_c[28] ^ y__h24398 ;
  assign y__h33614 = x__h33366 & y__h33367 ;
  assign y__h33745 = x__h33802 | y__h33803 ;
  assign y__h33747 = temp_c[29] ^ y__h24584 ;
  assign y__h33803 = x__h33555 & y__h33556 ;
  assign y__h33934 = x__h33991 | y__h33992 ;
  assign y__h33936 = temp_c[30] ^ y__h24770 ;
  assign y__h3396 = !c[24] & IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h33992 = x__h33744 & y__h33745 ;
  assign y__h34123 = x__h34180 | y__h34181 ;
  assign y__h34125 = temp_c[31] ^ y__h24956 ;
  assign y__h34181 = x__h33933 & y__h33934 ;
  assign y__h34312 = x__h34369 | y__h34370 ;
  assign y__h34314 = temp_c[32] ^ y__h25142 ;
  assign y__h34370 = x__h34122 & y__h34123 ;
  assign y__h34501 = x__h34558 | y__h34559 ;
  assign y__h34503 = temp_c[33] ^ y__h25328 ;
  assign y__h34559 = x__h34311 & y__h34312 ;
  assign y__h34690 = x__h34747 | y__h34748 ;
  assign y__h34692 = temp_c[34] ^ y__h25514 ;
  assign y__h34748 = x__h34500 & y__h34501 ;
  assign y__h34879 = x__h34936 | y__h34937 ;
  assign y__h34881 = temp_c[35] ^ y__h25700 ;
  assign y__h34937 = x__h34689 & y__h34690 ;
  assign y__h35068 = x__h35125 | y__h35126 ;
  assign y__h35070 = temp_c[36] ^ y__h25886 ;
  assign y__h35126 = x__h34878 & y__h34879 ;
  assign y__h35257 = x__h35314 | y__h35315 ;
  assign y__h35259 = temp_c[37] ^ y__h26072 ;
  assign y__h35315 = x__h35067 & y__h35068 ;
  assign y__h35446 = x__h35503 | y__h35504 ;
  assign y__h35448 = temp_c[38] ^ y__h26258 ;
  assign y__h35504 = x__h35256 & y__h35257 ;
  assign y__h35635 = x__h35692 | y__h35693 ;
  assign y__h35637 = temp_c[39] ^ y__h26444 ;
  assign y__h35693 = x__h35445 & y__h35446 ;
  assign y__h3582 = !c[25] & y__h3396 ;
  assign y__h35824 = x__h35881 | y__h35882 ;
  assign y__h35826 = temp_c[40] ^ y__h26630 ;
  assign y__h35882 = x__h35634 & y__h35635 ;
  assign y__h36013 = x__h36070 | y__h36071 ;
  assign y__h36015 = temp_c[41] ^ y__h26816 ;
  assign y__h36071 = x__h35823 & y__h35824 ;
  assign y__h36202 = x__h36259 | y__h36260 ;
  assign y__h36204 = temp_c[42] ^ y__h27002 ;
  assign y__h36260 = x__h36012 & y__h36013 ;
  assign y__h36391 = x__h36448 | y__h36449 ;
  assign y__h36393 = temp_c[43] ^ y__h27188 ;
  assign y__h36449 = x__h36201 & y__h36202 ;
  assign y__h36580 = x__h36637 | y__h36638 ;
  assign y__h36582 = temp_c[44] ^ y__h27374 ;
  assign y__h36638 = x__h36390 & y__h36391 ;
  assign y__h36769 = x__h36826 | y__h36827 ;
  assign y__h36771 = temp_c[45] ^ y__h27560 ;
  assign y__h36827 = x__h36579 & y__h36580 ;
  assign y__h36958 = x__h37015 | y__h37016 ;
  assign y__h36960 = temp_c[46] ^ y__h27746 ;
  assign y__h37016 = x__h36768 & y__h36769 ;
  assign y__h37147 = x__h37204 | y__h37205 ;
  assign y__h37149 = temp_c[47] ^ y__h27932 ;
  assign y__h37205 = x__h36957 & y__h36958 ;
  assign y__h37336 = x__h37393 | y__h37394 ;
  assign y__h37338 = temp_c[48] ^ y__h28118 ;
  assign y__h37394 = x__h37146 & y__h37147 ;
  assign y__h37525 = x__h37582 | y__h37583 ;
  assign y__h37527 = temp_c[49] ^ y__h28304 ;
  assign y__h37583 = x__h37335 & y__h37336 ;
  assign y__h3768 = !c[26] & y__h3582 ;
  assign y__h3954 = !c[27] & y__h3768 ;
  assign y__h39906 = tmp_exp[1] | y__h39965 ;
  assign y__h39965 = x__h40010 & tmp_exp[0] ;
  assign y__h40097 = tmp_exp[2] | y__h40156 ;
  assign y__h40156 = x__h40201 & y__h39906 ;
  assign y__h40288 = tmp_exp[3] | y__h40347 ;
  assign y__h40347 = x__h40392 & y__h40097 ;
  assign y__h40479 = tmp_exp[4] | y__h40538 ;
  assign y__h40538 = x__h40583 & y__h40288 ;
  assign y__h40670 = tmp_exp[5] | y__h40729 ;
  assign y__h40729 = x__h40774 & y__h40479 ;
  assign y__h40861 = tmp_exp[6] | y__h40920 ;
  assign y__h40920 = x__h40965 & y__h40670 ;
  assign y__h4140 = !c[28] & y__h3954 ;
  assign y__h4326 = !c[29] & y__h4140 ;
  assign y__h44196 = temp_man[27] & temp_man[26] ;
  assign y__h44382 = temp_man[28] & y__h44196 ;
  assign y__h44568 = temp_man[29] & y__h44382 ;
  assign y__h44754 = temp_man[30] & y__h44568 ;
  assign y__h44940 = temp_man[31] & y__h44754 ;
  assign y__h45126 = temp_man[32] & y__h44940 ;
  assign y__h45312 = temp_man[33] & y__h45126 ;
  assign y__h4537 =
	     tmp_exp[0] &
	     IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0] ;
  assign y__h4539 = !c[24] ^ IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h45498 = temp_man[34] & y__h45312 ;
  assign y__h45684 = temp_man[35] & y__h45498 ;
  assign y__h45870 = temp_man[36] & y__h45684 ;
  assign y__h46056 = temp_man[37] & y__h45870 ;
  assign y__h46242 = temp_man[38] & y__h46056 ;
  assign y__h46428 = temp_man[39] & y__h46242 ;
  assign y__h46614 = temp_man[40] & y__h46428 ;
  assign y__h4665 = x__h4722 | y__h4723 ;
  assign y__h4667 = !c[25] ^ y__h3396 ;
  assign y__h46800 = temp_man[41] & y__h46614 ;
  assign y__h46986 = temp_man[42] & y__h46800 ;
  assign y__h47172 = temp_man[43] & y__h46986 ;
  assign y__h4723 = x__h4536 & y__h4537 ;
  assign y__h47358 = temp_man[44] & y__h47172 ;
  assign y__h47544 = temp_man[45] & y__h47358 ;
  assign y__h47730 = temp_man[46] & y__h47544 ;
  assign y__h47916 = temp_man[47] & y__h47730 ;
  assign y__h48102 = temp_man[48] & y__h47916 ;
  assign y__h4854 = x__h4911 | y__h4912 ;
  assign y__h4856 = !c[26] ^ y__h3582 ;
  assign y__h4912 = x__h4664 & y__h4665 ;
  assign y__h5043 = x__h5100 | y__h5101 ;
  assign y__h5045 = !c[27] ^ y__h3768 ;
  assign y__h5101 = x__h4853 & y__h4854 ;
  assign y__h5232 = x__h5289 | y__h5290 ;
  assign y__h5234 = !c[28] ^ y__h3954 ;
  assign y__h5290 = x__h5042 & y__h5043 ;
  assign y__h53434 = x__h53307 & IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] ;
  assign y__h53620 = x__h53433 & y__h53434 ;
  assign y__h53806 = x__h53619 & y__h53620 ;
  assign y__h53992 = x__h53805 & y__h53806 ;
  assign y__h54178 = x__h53991 & y__h53992 ;
  assign y__h5421 = x__h5478 | y__h5479 ;
  assign y__h5423 = !c[29] ^ y__h4140 ;
  assign y__h54364 = x__h54177 & y__h54178 ;
  assign y__h5479 = x__h5231 & y__h5232 ;
  assign y__h56030 = temp_man[26] & temp_man[25] ;
  assign y__h5610 = x__h5667 | y__h5668 ;
  assign y__h5612 = x__h4325 ^ y__h4326 ;
  assign y__h56216 = temp_man[27] & y__h56030 ;
  assign y__h56402 = temp_man[28] & y__h56216 ;
  assign y__h56588 = temp_man[29] & y__h56402 ;
  assign y__h5668 = x__h5420 & y__h5421 ;
  assign y__h56774 = temp_man[30] & y__h56588 ;
  assign y__h56960 = temp_man[31] & y__h56774 ;
  assign y__h57146 = temp_man[32] & y__h56960 ;
  assign y__h57332 = temp_man[33] & y__h57146 ;
  assign y__h57518 = temp_man[34] & y__h57332 ;
  assign y__h57704 = temp_man[35] & y__h57518 ;
  assign y__h57890 = temp_man[36] & y__h57704 ;
  assign y__h58076 = temp_man[37] & y__h57890 ;
  assign y__h58262 = temp_man[38] & y__h58076 ;
  assign y__h58448 = temp_man[39] & y__h58262 ;
  assign y__h58634 = temp_man[40] & y__h58448 ;
  assign y__h58820 = temp_man[41] & y__h58634 ;
  assign y__h59006 = temp_man[42] & y__h58820 ;
  assign y__h59192 = temp_man[43] & y__h59006 ;
  assign y__h59378 = temp_man[44] & y__h59192 ;
  assign y__h59564 = temp_man[45] & y__h59378 ;
  assign y__h59750 = temp_man[46] & y__h59564 ;
  assign y__h59936 = temp_man[47] & y__h59750 ;
  assign y__h60122 = temp_man[48] & y__h59936 ;
  assign y__h65273 = tmp_exp[1] & tmp_exp[0] ;
  assign y__h65462 = tmp_exp[2] & y__h65273 ;
  assign y__h65651 = tmp_exp[3] & y__h65462 ;
  assign y__h65840 = tmp_exp[4] & y__h65651 ;
  assign y__h66029 = tmp_exp[5] & y__h65840 ;
  assign y__h66218 = tmp_exp[6] & y__h66029 ;
  assign y__h7697 = x__h7755 | y__h7756 ;
  assign y__h7756 = x__h7802 & y__h7803 ;
  assign y__h7803 = temp_s[0] & temp_c[0] ;
  assign y__h7889 = x__h7947 | y__h7948 ;
  assign y__h7948 = x__h7994 & y__h7697 ;
  assign y__h8081 = x__h8139 | y__h8140 ;
  assign y__h8140 = x__h8186 & y__h7889 ;
  assign y__h8273 = x__h8331 | y__h8332 ;
  assign y__h8332 = x__h8378 & y__h8081 ;
  assign y__h8465 = x__h8523 | y__h8524 ;
  assign y__h8524 = x__h8570 & y__h8273 ;
  assign y__h8657 = x__h8715 | y__h8716 ;
  assign y__h8716 = x__h8762 & y__h8465 ;
  assign y__h8849 = x__h8907 | y__h8908 ;
  assign y__h8908 = x__h8954 & y__h8657 ;
  assign y__h9041 = x__h9099 | y__h9100 ;
  assign y__h9100 = x__h9146 & y__h8849 ;
  assign y__h9233 = x__h9291 | y__h9292 ;
  assign y__h9292 = x__h9338 & y__h9041 ;
  assign y__h9425 = x__h9483 | y__h9484 ;
  assign y__h9484 = x__h9530 & y__h9233 ;
  assign y__h9617 = x__h9675 | y__h9676 ;
  assign y__h9676 = x__h9722 & y__h9425 ;
  assign y__h9809 = x__h9867 | y__h9868 ;
  assign y__h9868 = x__h9914 & y__h9617 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        add_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	add_or_sub <= `BSV_ASSIGNMENT_DELAY 2'b0;
	addition_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	adj_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	align_man_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c <= `BSV_ASSIGNMENT_DELAY 32'd0;
	calc_fraction_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cmp_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	end_result <= `BSV_ASSIGNMENT_DELAY 32'd0;
	exp_diff <= `BSV_ASSIGNMENT_DELAY 8'd0;
	exp_mantissa <= `BSV_ASSIGNMENT_DELAY 31'd0;
	exp_res <= `BSV_ASSIGNMENT_DELAY 8'd0;
	get_r <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_c <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_s <= `BSV_ASSIGNMENT_DELAY 1'd0;
	handle_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	input_no <= `BSV_ASSIGNMENT_DELAY 1'b0;
	input_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_res <= `BSV_ASSIGNMENT_DELAY 23'd0;
	pack_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	result_concatenated <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sign_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	swap_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	temp_c <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_man <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_s <= `BSV_ASSIGNMENT_DELAY 50'd0;
	tmp_exp <= `BSV_ASSIGNMENT_DELAY 8'd0;
	tmp_res <= `BSV_ASSIGNMENT_DELAY 24'd0;
	tmp_sign <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (add_done_EN) add_done <= `BSV_ASSIGNMENT_DELAY add_done_D_IN;
	if (add_or_sub_EN)
	  add_or_sub <= `BSV_ASSIGNMENT_DELAY add_or_sub_D_IN;
	if (addition_start_EN)
	  addition_start <= `BSV_ASSIGNMENT_DELAY addition_start_D_IN;
	if (adj_exp_done_EN)
	  adj_exp_done <= `BSV_ASSIGNMENT_DELAY adj_exp_done_D_IN;
	if (align_man_done_EN)
	  align_man_done <= `BSV_ASSIGNMENT_DELAY align_man_done_D_IN;
	if (c_EN) c <= `BSV_ASSIGNMENT_DELAY c_D_IN;
	if (calc_fraction_done_EN)
	  calc_fraction_done <= `BSV_ASSIGNMENT_DELAY calc_fraction_done_D_IN;
	if (cmp_exp_done_EN)
	  cmp_exp_done <= `BSV_ASSIGNMENT_DELAY cmp_exp_done_D_IN;
	if (end_result_EN)
	  end_result <= `BSV_ASSIGNMENT_DELAY end_result_D_IN;
	if (exp_diff_EN) exp_diff <= `BSV_ASSIGNMENT_DELAY exp_diff_D_IN;
	if (exp_mantissa_EN)
	  exp_mantissa <= `BSV_ASSIGNMENT_DELAY exp_mantissa_D_IN;
	if (exp_res_EN) exp_res <= `BSV_ASSIGNMENT_DELAY exp_res_D_IN;
	if (get_r_EN) get_r <= `BSV_ASSIGNMENT_DELAY get_r_D_IN;
	if (got_c_EN) got_c <= `BSV_ASSIGNMENT_DELAY got_c_D_IN;
	if (got_s_EN) got_s <= `BSV_ASSIGNMENT_DELAY got_s_D_IN;
	if (handle_zero_EN)
	  handle_zero <= `BSV_ASSIGNMENT_DELAY handle_zero_D_IN;
	if (input_no_EN) input_no <= `BSV_ASSIGNMENT_DELAY input_no_D_IN;
	if (input_zero_EN)
	  input_zero <= `BSV_ASSIGNMENT_DELAY input_zero_D_IN;
	if (mantissa_done_EN)
	  mantissa_done <= `BSV_ASSIGNMENT_DELAY mantissa_done_D_IN;
	if (mantissa_res_EN)
	  mantissa_res <= `BSV_ASSIGNMENT_DELAY mantissa_res_D_IN;
	if (pack_done_EN) pack_done <= `BSV_ASSIGNMENT_DELAY pack_done_D_IN;
	if (result_concatenated_EN)
	  result_concatenated <= `BSV_ASSIGNMENT_DELAY
	      result_concatenated_D_IN;
	if (s_EN) s <= `BSV_ASSIGNMENT_DELAY s_D_IN;
	if (sign_done_EN) sign_done <= `BSV_ASSIGNMENT_DELAY sign_done_D_IN;
	if (swap_done_EN) swap_done <= `BSV_ASSIGNMENT_DELAY swap_done_D_IN;
	if (temp_c_EN) temp_c <= `BSV_ASSIGNMENT_DELAY temp_c_D_IN;
	if (temp_man_EN) temp_man <= `BSV_ASSIGNMENT_DELAY temp_man_D_IN;
	if (temp_s_EN) temp_s <= `BSV_ASSIGNMENT_DELAY temp_s_D_IN;
	if (tmp_exp_EN) tmp_exp <= `BSV_ASSIGNMENT_DELAY tmp_exp_D_IN;
	if (tmp_res_EN) tmp_res <= `BSV_ASSIGNMENT_DELAY tmp_res_D_IN;
	if (tmp_sign_EN) tmp_sign <= `BSV_ASSIGNMENT_DELAY tmp_sign_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    add_done = 1'h0;
    add_or_sub = 2'h2;
    addition_start = 1'h0;
    adj_exp_done = 1'h0;
    align_man_done = 1'h0;
    c = 32'hAAAAAAAA;
    calc_fraction_done = 1'h0;
    cmp_exp_done = 1'h0;
    end_result = 32'hAAAAAAAA;
    exp_diff = 8'hAA;
    exp_mantissa = 31'h2AAAAAAA;
    exp_res = 8'hAA;
    get_r = 1'h0;
    got_c = 1'h0;
    got_s = 1'h0;
    handle_zero = 1'h0;
    input_no = 1'h0;
    input_zero = 1'h0;
    mantissa_done = 1'h0;
    mantissa_res = 23'h2AAAAA;
    pack_done = 1'h0;
    result_concatenated = 1'h0;
    s = 32'hAAAAAAAA;
    sign_done = 1'h0;
    swap_done = 1'h0;
    temp_c = 50'h2AAAAAAAAAAAA;
    temp_man = 50'h2AAAAAAAAAAAA;
    temp_s = 50'h2AAAAAAAAAAAA;
    tmp_exp = 8'hAA;
    tmp_res = 24'hAAAAAA;
    tmp_sign = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	begin
	  v__h1693 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	$display(v__h1693, " After Swapping s: %b c: %b", s, c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5888 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5888, "i s_mantissa new %b", temp_s);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5936 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5936, "i c_mantissa new %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5986 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5986, "i Exponent difference %d", exp_diff);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	begin
	  v__h6240 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	$display(v__h6240, " shifted mantissa of c %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	begin
	  v__h16915 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	$display(v__h16915, " Adding the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	begin
	  v__h37716 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	$display(v__h37716, " Subtracting the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	begin
	  v__h37841 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	$display(v__h37841, " calculated mantissa c %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	begin
	  v__h41098 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	$display(v__h41098, " mantissa: %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	begin
	  v__h66615 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	$display(v__h66615,
		 " End Result sign:%b exp: %b mantissa: %b ",
		 tmp_sign,
		 exp_mantissa[30:23],
		 exp_mantissa[22:0]);
  end
  // synopsys translate_on
endmodule  // mkUnpipelined_float_add

