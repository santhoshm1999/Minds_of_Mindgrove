//
// Generated by Bluespec Compiler, version untagged-g2930c314 (build 2930c314)
//
// On Sun Nov 24 10:24:31 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inp_s                  O     1
// RDY_get_inp_c                  O     1
// get_result                     O    32 reg
// RDY_get_result                 O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inp_s_inp_S                I    32
// get_inp_c_inp_C                I    32
// EN_get_inp_s                   I     1
// EN_get_inp_c                   I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkUnpipelined_float_add(CLK,
			       RST_N,

			       get_inp_s_inp_S,
			       EN_get_inp_s,
			       RDY_get_inp_s,

			       get_inp_c_inp_C,
			       EN_get_inp_c,
			       RDY_get_inp_c,

			       get_result,
			       RDY_get_result);
  input  CLK;
  input  RST_N;

  // action method get_inp_s
  input  [31 : 0] get_inp_s_inp_S;
  input  EN_get_inp_s;
  output RDY_get_inp_s;

  // action method get_inp_c
  input  [31 : 0] get_inp_c_inp_C;
  input  EN_get_inp_c;
  output RDY_get_inp_c;

  // value method get_result
  output [31 : 0] get_result;
  output RDY_get_result;

  // signals for module outputs
  wire [31 : 0] get_result;
  wire RDY_get_inp_c, RDY_get_inp_s, RDY_get_result;

  // register add_done
  reg add_done;
  wire add_done_D_IN, add_done_EN;

  // register add_or_sub
  reg [1 : 0] add_or_sub;
  wire [1 : 0] add_or_sub_D_IN;
  wire add_or_sub_EN;

  // register addition_start
  reg addition_start;
  wire addition_start_D_IN, addition_start_EN;

  // register adj_exp_done
  reg adj_exp_done;
  wire adj_exp_done_D_IN, adj_exp_done_EN;

  // register align_man_done
  reg align_man_done;
  wire align_man_done_D_IN, align_man_done_EN;

  // register c
  reg [31 : 0] c;
  wire [31 : 0] c_D_IN;
  wire c_EN;

  // register calc_fraction_done
  reg calc_fraction_done;
  wire calc_fraction_done_D_IN, calc_fraction_done_EN;

  // register cmp_exp_done
  reg cmp_exp_done;
  wire cmp_exp_done_D_IN, cmp_exp_done_EN;

  // register end_result
  reg [31 : 0] end_result;
  wire [31 : 0] end_result_D_IN;
  wire end_result_EN;

  // register exp_diff
  reg [7 : 0] exp_diff;
  wire [7 : 0] exp_diff_D_IN;
  wire exp_diff_EN;

  // register exp_mantissa
  reg [30 : 0] exp_mantissa;
  wire [30 : 0] exp_mantissa_D_IN;
  wire exp_mantissa_EN;

  // register exp_res
  reg [7 : 0] exp_res;
  wire [7 : 0] exp_res_D_IN;
  wire exp_res_EN;

  // register get_r
  reg get_r;
  wire get_r_D_IN, get_r_EN;

  // register got_c
  reg got_c;
  wire got_c_D_IN, got_c_EN;

  // register got_s
  reg got_s;
  wire got_s_D_IN, got_s_EN;

  // register handle_zero
  reg handle_zero;
  wire handle_zero_D_IN, handle_zero_EN;

  // register input_no
  reg input_no;
  wire input_no_D_IN, input_no_EN;

  // register input_zero
  reg input_zero;
  wire input_zero_D_IN, input_zero_EN;

  // register mantissa_done
  reg mantissa_done;
  wire mantissa_done_D_IN, mantissa_done_EN;

  // register mantissa_res
  reg [22 : 0] mantissa_res;
  wire [22 : 0] mantissa_res_D_IN;
  wire mantissa_res_EN;

  // register pack_done
  reg pack_done;
  wire pack_done_D_IN, pack_done_EN;

  // register result_concatenated
  reg result_concatenated;
  wire result_concatenated_D_IN, result_concatenated_EN;

  // register s
  reg [31 : 0] s;
  wire [31 : 0] s_D_IN;
  wire s_EN;

  // register sign_done
  reg sign_done;
  wire sign_done_D_IN, sign_done_EN;

  // register swap_done
  reg swap_done;
  wire swap_done_D_IN, swap_done_EN;

  // register temp_c
  reg [49 : 0] temp_c;
  wire [49 : 0] temp_c_D_IN;
  wire temp_c_EN;

  // register temp_man
  reg [49 : 0] temp_man;
  wire [49 : 0] temp_man_D_IN;
  wire temp_man_EN;

  // register temp_s
  reg [49 : 0] temp_s;
  wire [49 : 0] temp_s_D_IN;
  wire temp_s_EN;

  // register tmp_exp
  reg [7 : 0] tmp_exp;
  wire [7 : 0] tmp_exp_D_IN;
  wire tmp_exp_EN;

  // register tmp_res
  reg [23 : 0] tmp_res;
  wire [23 : 0] tmp_res_D_IN;
  wire tmp_res_EN;

  // register tmp_sign
  reg tmp_sign;
  wire tmp_sign_D_IN, tmp_sign_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_add_or_sub_exp,
       CAN_FIRE_RL_rl_adj_exp,
       CAN_FIRE_RL_rl_adj_mantissa,
       CAN_FIRE_RL_rl_align_exp,
       CAN_FIRE_RL_rl_assemble_result,
       CAN_FIRE_RL_rl_cmp_exp,
       CAN_FIRE_RL_rl_deassert_signals,
       CAN_FIRE_RL_rl_get_sign,
       CAN_FIRE_RL_rl_handle_zero_val,
       CAN_FIRE_RL_rl_swap,
       CAN_FIRE_get_inp_c,
       CAN_FIRE_get_inp_s,
       WILL_FIRE_RL_rl_add_or_sub_exp,
       WILL_FIRE_RL_rl_adj_exp,
       WILL_FIRE_RL_rl_adj_mantissa,
       WILL_FIRE_RL_rl_align_exp,
       WILL_FIRE_RL_rl_assemble_result,
       WILL_FIRE_RL_rl_cmp_exp,
       WILL_FIRE_RL_rl_deassert_signals,
       WILL_FIRE_RL_rl_get_sign,
       WILL_FIRE_RL_rl_handle_zero_val,
       WILL_FIRE_RL_rl_swap,
       WILL_FIRE_get_inp_c,
       WILL_FIRE_get_inp_s;

  // inputs to muxes for submodule ports
  wire [49 : 0] MUX_temp_c_write_1__VAL_1,
		MUX_temp_c_write_1__VAL_2,
		MUX_temp_man_write_1__VAL_1,
		MUX_temp_man_write_1__VAL_2;
  wire [31 : 0] MUX_end_result_write_1__VAL_1, MUX_end_result_write_1__VAL_2;
  wire [7 : 0] MUX_tmp_exp_write_1__VAL_1;
  wire [1 : 0] MUX_add_or_sub_write_1__VAL_1;
  wire MUX_add_or_sub_write_1__SEL_2,
       MUX_adj_exp_done_write_1__SEL_1,
       MUX_c_write_1__SEL_1,
       MUX_input_zero_write_1__SEL_2,
       MUX_pack_done_write_1__SEL_2,
       MUX_temp_man_write_1__SEL_1,
       MUX_temp_man_write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h1692;
  reg [31 : 0] v__h5887;
  reg [31 : 0] v__h5935;
  reg [31 : 0] v__h5985;
  reg [31 : 0] v__h6239;
  reg [31 : 0] v__h16914;
  reg [31 : 0] v__h37715;
  reg [31 : 0] v__h37840;
  reg [31 : 0] v__h39512;
  reg [31 : 0] v__h65029;
  // synopsys translate_on

  // remaining internal signals
  wire [49 : 0] IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6,
		IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5,
		IF_temp_c_BIT_0_THEN_1_ELSE_0__q3,
		IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9,
		IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8,
		x__h16985,
		x__h6316;
  wire [47 : 0] temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553,
		temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924;
  wire [45 : 0] temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552,
		temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923;
  wire [43 : 0] temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551,
		temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922;
  wire [41 : 0] temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550,
		temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921;
  wire [39 : 0] temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549,
		temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920;
  wire [37 : 0] temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548,
		temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919;
  wire [35 : 0] temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547,
		temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918;
  wire [33 : 0] temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546,
		temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917;
  wire [31 : 0] temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545,
		temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916;
  wire [30 : 0] IF_NOT_temp_man_36_BIT_24_124_125_OR_temp_man__ETC___d1207,
		IF_NOT_temp_man_36_BIT_25_82_83_OR_temp_man_36_ETC___d1123,
		IF_temp_man_36_BIT_49_81_AND_temp_man_36_BIT_4_ETC___d1122,
		IF_temp_man_36_BIT_49_81_XOR_temp_man_36_BIT_4_ETC___d1206;
  wire [29 : 0] temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544,
		temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915;
  wire [27 : 0] temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543,
		temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914;
  wire [25 : 0] temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542,
		temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913;
  wire [23 : 0] temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541,
		temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912;
  wire [22 : 0] rounded_mantissa__h51456,
		rounded_mantissa__h63293,
		rounded_mantissa__h64879,
		rounded_mantissa__h64969;
  wire [21 : 0] temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540,
		temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911;
  wire [19 : 0] temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539,
		temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910;
  wire [17 : 0] temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538,
		temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909;
  wire [15 : 0] temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537,
		temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908;
  wire [13 : 0] temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536,
		temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907;
  wire [11 : 0] temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535,
		temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906;
  wire [9 : 0] temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905;
  wire [7 : 0] IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10,
	       IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4,
	       IF_c_BIT_23_THEN_0_ELSE_1__q1,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7,
	       _theResult___fst__h63294,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904;
  wire [6 : 0] tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1071;
  wire [5 : 0] INV_tmp_exp_5_BIT_5_06_41_XOR_tmp_exp_5_BIT_4__ETC___d970,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903,
	       tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155;
  wire [4 : 0] temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1195,
	       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1111,
	       tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1070;
  wire [3 : 0] INV_tmp_exp_5_BIT_3_14_43_XOR_tmp_exp_5_BIT_2__ETC___d969,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902,
	       tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154;
  wire [2 : 0] tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1069;
  wire [1 : 0] temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901,
	       tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153;
  wire NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46,
       NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49,
       NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56,
       NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57,
       got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68,
       got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929,
       s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27,
       s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34,
       s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26,
       s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31,
       temp_man_36_BIT_26_86_XOR_temp_man_36_BIT_25_82___d1178,
       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26_86___d1094,
       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26__ETC___d1177,
       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1093,
       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1176,
       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1092,
       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1175,
       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1091,
       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1174,
       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1090,
       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1173,
       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1089,
       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1172,
       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1088,
       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1171,
       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1087,
       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1170,
       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1086,
       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1169,
       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1085,
       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1168,
       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1084,
       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1167,
       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1083,
       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1166,
       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1082,
       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1165,
       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1081,
       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1164,
       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1080,
       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1163,
       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1079,
       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1162,
       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1078,
       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1161,
       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1077,
       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1160,
       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1076,
       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1159,
       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1075,
       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1158,
       temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1074,
       temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1157,
       temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1073,
       tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d996,
       x__h10058,
       x__h10105,
       x__h10250,
       x__h10297,
       x__h10442,
       x__h10489,
       x__h10634,
       x__h10681,
       x__h10826,
       x__h10873,
       x__h11018,
       x__h11065,
       x__h11210,
       x__h11257,
       x__h11402,
       x__h11449,
       x__h11594,
       x__h11641,
       x__h11786,
       x__h11833,
       x__h11978,
       x__h12025,
       x__h12170,
       x__h12217,
       x__h12362,
       x__h12409,
       x__h12554,
       x__h12601,
       x__h12746,
       x__h12793,
       x__h12938,
       x__h12985,
       x__h13130,
       x__h13177,
       x__h13322,
       x__h13369,
       x__h13514,
       x__h13561,
       x__h13706,
       x__h13753,
       x__h13898,
       x__h13945,
       x__h14090,
       x__h14137,
       x__h14282,
       x__h14329,
       x__h14474,
       x__h14521,
       x__h14666,
       x__h14713,
       x__h14858,
       x__h14905,
       x__h15050,
       x__h15097,
       x__h15242,
       x__h15289,
       x__h15434,
       x__h15481,
       x__h15626,
       x__h15673,
       x__h15818,
       x__h15865,
       x__h16010,
       x__h16057,
       x__h16202,
       x__h16249,
       x__h16394,
       x__h16441,
       x__h16586,
       x__h16633,
       x__h16719,
       x__h16778,
       x__h16825,
       x__h28512,
       x__h28640,
       x__h28698,
       x__h28829,
       x__h28887,
       x__h29018,
       x__h29076,
       x__h29207,
       x__h29265,
       x__h29396,
       x__h29454,
       x__h29585,
       x__h29643,
       x__h29774,
       x__h29832,
       x__h29963,
       x__h30021,
       x__h30152,
       x__h30210,
       x__h30341,
       x__h30399,
       x__h30530,
       x__h30588,
       x__h30719,
       x__h30777,
       x__h30908,
       x__h30966,
       x__h31097,
       x__h31155,
       x__h31286,
       x__h31344,
       x__h31475,
       x__h31533,
       x__h31664,
       x__h31722,
       x__h31853,
       x__h31911,
       x__h32042,
       x__h32100,
       x__h32231,
       x__h32289,
       x__h32420,
       x__h32478,
       x__h32609,
       x__h32667,
       x__h32798,
       x__h32856,
       x__h32987,
       x__h33045,
       x__h33176,
       x__h33234,
       x__h33365,
       x__h33423,
       x__h33554,
       x__h33612,
       x__h33743,
       x__h33801,
       x__h33932,
       x__h33990,
       x__h34121,
       x__h34179,
       x__h34310,
       x__h34368,
       x__h34499,
       x__h34557,
       x__h34688,
       x__h34746,
       x__h34877,
       x__h34935,
       x__h35066,
       x__h35124,
       x__h35255,
       x__h35313,
       x__h35444,
       x__h35502,
       x__h35633,
       x__h35691,
       x__h35822,
       x__h35880,
       x__h36011,
       x__h36069,
       x__h36200,
       x__h36258,
       x__h36389,
       x__h36447,
       x__h36578,
       x__h36636,
       x__h36767,
       x__h36825,
       x__h36956,
       x__h37014,
       x__h37145,
       x__h37203,
       x__h37334,
       x__h37392,
       x__h37523,
       x__h37581,
       x__h38436,
       x__h38627,
       x__h38818,
       x__h39009,
       x__h39200,
       x__h39286,
       x__h39391,
       x__h4324,
       x__h4535,
       x__h4663,
       x__h4721,
       x__h4852,
       x__h4910,
       x__h5041,
       x__h5099,
       x__h51721,
       x__h51847,
       x__h52033,
       x__h52219,
       x__h5230,
       x__h52405,
       x__h52591,
       x__h5288,
       x__h5419,
       x__h5477,
       x__h5608,
       x__h5666,
       x__h7754,
       x__h7801,
       x__h7946,
       x__h7993,
       x__h8138,
       x__h8185,
       x__h8330,
       x__h8377,
       x__h8522,
       x__h8569,
       x__h8714,
       x__h8761,
       x__h8906,
       x__h8953,
       x__h9098,
       x__h9145,
       x__h9290,
       x__h9337,
       x__h9482,
       x__h9529,
       x__h9674,
       x__h9721,
       x__h9866,
       x__h9913,
       y__h10000,
       y__h10059,
       y__h10192,
       y__h10251,
       y__h10384,
       y__h10443,
       y__h10576,
       y__h10635,
       y__h10768,
       y__h10827,
       y__h10960,
       y__h11019,
       y__h11152,
       y__h11211,
       y__h11344,
       y__h11403,
       y__h11536,
       y__h11595,
       y__h11728,
       y__h11787,
       y__h11920,
       y__h11979,
       y__h12112,
       y__h12171,
       y__h12304,
       y__h12363,
       y__h12496,
       y__h12555,
       y__h12688,
       y__h12747,
       y__h12880,
       y__h12939,
       y__h13072,
       y__h13131,
       y__h13264,
       y__h13323,
       y__h13456,
       y__h13515,
       y__h13648,
       y__h13707,
       y__h13840,
       y__h13899,
       y__h14032,
       y__h14091,
       y__h14224,
       y__h14283,
       y__h14416,
       y__h14475,
       y__h14608,
       y__h14667,
       y__h14800,
       y__h14859,
       y__h14992,
       y__h15051,
       y__h15184,
       y__h15243,
       y__h15376,
       y__h15435,
       y__h15568,
       y__h15627,
       y__h15760,
       y__h15819,
       y__h15952,
       y__h16011,
       y__h16144,
       y__h16203,
       y__h16336,
       y__h16395,
       y__h16528,
       y__h16587,
       y__h16720,
       y__h16779,
       y__h19561,
       y__h19663,
       y__h19747,
       y__h19933,
       y__h20119,
       y__h20305,
       y__h20491,
       y__h20677,
       y__h20863,
       y__h21049,
       y__h21235,
       y__h21421,
       y__h21607,
       y__h21793,
       y__h21979,
       y__h22165,
       y__h22351,
       y__h22537,
       y__h22723,
       y__h22909,
       y__h23095,
       y__h23281,
       y__h23467,
       y__h23653,
       y__h23839,
       y__h24025,
       y__h24211,
       y__h24397,
       y__h24583,
       y__h24769,
       y__h24955,
       y__h25141,
       y__h25327,
       y__h25513,
       y__h25699,
       y__h25885,
       y__h26071,
       y__h26257,
       y__h26443,
       y__h26629,
       y__h26815,
       y__h27001,
       y__h27187,
       y__h27373,
       y__h27559,
       y__h27745,
       y__h27931,
       y__h28117,
       y__h28303,
       y__h28513,
       y__h28515,
       y__h28641,
       y__h28643,
       y__h28699,
       y__h28830,
       y__h28832,
       y__h28888,
       y__h29019,
       y__h29021,
       y__h29077,
       y__h29208,
       y__h29210,
       y__h29266,
       y__h29397,
       y__h29399,
       y__h29455,
       y__h29586,
       y__h29588,
       y__h29644,
       y__h29775,
       y__h29777,
       y__h29833,
       y__h29964,
       y__h29966,
       y__h30022,
       y__h30153,
       y__h30155,
       y__h30211,
       y__h30342,
       y__h30344,
       y__h30400,
       y__h30531,
       y__h30533,
       y__h30589,
       y__h30720,
       y__h30722,
       y__h30778,
       y__h30909,
       y__h30911,
       y__h30967,
       y__h31098,
       y__h31100,
       y__h31156,
       y__h31287,
       y__h31289,
       y__h31345,
       y__h31476,
       y__h31478,
       y__h31534,
       y__h31665,
       y__h31667,
       y__h31723,
       y__h31854,
       y__h31856,
       y__h31912,
       y__h32043,
       y__h32045,
       y__h32101,
       y__h32232,
       y__h32234,
       y__h32290,
       y__h32421,
       y__h32423,
       y__h32479,
       y__h32610,
       y__h32612,
       y__h32668,
       y__h32799,
       y__h32801,
       y__h32857,
       y__h32988,
       y__h32990,
       y__h33046,
       y__h33177,
       y__h33179,
       y__h33235,
       y__h33366,
       y__h33368,
       y__h33424,
       y__h33555,
       y__h33557,
       y__h33613,
       y__h33744,
       y__h33746,
       y__h33802,
       y__h33933,
       y__h33935,
       y__h3395,
       y__h33991,
       y__h34122,
       y__h34124,
       y__h34180,
       y__h34311,
       y__h34313,
       y__h34369,
       y__h34500,
       y__h34502,
       y__h34558,
       y__h34689,
       y__h34691,
       y__h34747,
       y__h34878,
       y__h34880,
       y__h34936,
       y__h35067,
       y__h35069,
       y__h35125,
       y__h35256,
       y__h35258,
       y__h35314,
       y__h35445,
       y__h35447,
       y__h35503,
       y__h35634,
       y__h35636,
       y__h35692,
       y__h3581,
       y__h35823,
       y__h35825,
       y__h35881,
       y__h36012,
       y__h36014,
       y__h36070,
       y__h36201,
       y__h36203,
       y__h36259,
       y__h36390,
       y__h36392,
       y__h36448,
       y__h36579,
       y__h36581,
       y__h36637,
       y__h36768,
       y__h36770,
       y__h36826,
       y__h36957,
       y__h36959,
       y__h37015,
       y__h37146,
       y__h37148,
       y__h37204,
       y__h37335,
       y__h37337,
       y__h37393,
       y__h37524,
       y__h37526,
       y__h37582,
       y__h3767,
       y__h38332,
       y__h38391,
       y__h38523,
       y__h38582,
       y__h38714,
       y__h38773,
       y__h38905,
       y__h38964,
       y__h39096,
       y__h39155,
       y__h39287,
       y__h39346,
       y__h3953,
       y__h4139,
       y__h42610,
       y__h42796,
       y__h42982,
       y__h43168,
       y__h4325,
       y__h43354,
       y__h43540,
       y__h43726,
       y__h43912,
       y__h44098,
       y__h44284,
       y__h44470,
       y__h44656,
       y__h44842,
       y__h45028,
       y__h45214,
       y__h4536,
       y__h4538,
       y__h45400,
       y__h45586,
       y__h45772,
       y__h45958,
       y__h46144,
       y__h46330,
       y__h46516,
       y__h4664,
       y__h4666,
       y__h4722,
       y__h4853,
       y__h4855,
       y__h4911,
       y__h5042,
       y__h5044,
       y__h5100,
       y__h51848,
       y__h52034,
       y__h52220,
       y__h5231,
       y__h5233,
       y__h52406,
       y__h52592,
       y__h52778,
       y__h5289,
       y__h5420,
       y__h5422,
       y__h54444,
       y__h54630,
       y__h5478,
       y__h54816,
       y__h55002,
       y__h55188,
       y__h55374,
       y__h55560,
       y__h55746,
       y__h55932,
       y__h5609,
       y__h5611,
       y__h56118,
       y__h56304,
       y__h56490,
       y__h5667,
       y__h56676,
       y__h56862,
       y__h57048,
       y__h57234,
       y__h57420,
       y__h57606,
       y__h57792,
       y__h57978,
       y__h58164,
       y__h58350,
       y__h58536,
       y__h63687,
       y__h63876,
       y__h64065,
       y__h64254,
       y__h64443,
       y__h64632,
       y__h7696,
       y__h7755,
       y__h7802,
       y__h7888,
       y__h7947,
       y__h8080,
       y__h8139,
       y__h8272,
       y__h8331,
       y__h8464,
       y__h8523,
       y__h8656,
       y__h8715,
       y__h8848,
       y__h8907,
       y__h9040,
       y__h9099,
       y__h9232,
       y__h9291,
       y__h9424,
       y__h9483,
       y__h9616,
       y__h9675,
       y__h9808,
       y__h9867;

  // action method get_inp_s
  assign RDY_get_inp_s = !got_s && !add_done ;
  assign CAN_FIRE_get_inp_s = !got_s && !add_done ;
  assign WILL_FIRE_get_inp_s = EN_get_inp_s ;

  // action method get_inp_c
  assign RDY_get_inp_c = !got_c && !add_done ;
  assign CAN_FIRE_get_inp_c = !got_c && !add_done ;
  assign WILL_FIRE_get_inp_c = EN_get_inp_c ;

  // value method get_result
  assign get_result = end_result ;
  assign RDY_get_result = pack_done ;

  // rule RL_rl_swap
  assign CAN_FIRE_RL_rl_swap =
	     got_s && got_c && !swap_done && !handle_zero && !input_zero ;
  assign WILL_FIRE_RL_rl_swap = CAN_FIRE_RL_rl_swap ;

  // rule RL_rl_get_sign
  assign CAN_FIRE_RL_rl_get_sign =
	     got_s && got_c && swap_done && !add_done && !sign_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_get_sign = CAN_FIRE_RL_rl_get_sign ;

  // rule RL_rl_cmp_exp
  assign CAN_FIRE_RL_rl_cmp_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     !cmp_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_cmp_exp = CAN_FIRE_RL_rl_cmp_exp ;

  // rule RL_rl_align_exp
  assign CAN_FIRE_RL_rl_align_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     !align_man_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_align_exp = CAN_FIRE_RL_rl_align_exp ;

  // rule RL_rl_add_or_sub_exp
  assign CAN_FIRE_RL_rl_add_or_sub_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     align_man_done &&
	     !calc_fraction_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_add_or_sub_exp = CAN_FIRE_RL_rl_add_or_sub_exp ;

  // rule RL_rl_adj_exp
  assign CAN_FIRE_RL_rl_adj_exp =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     !adj_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_exp = CAN_FIRE_RL_rl_adj_exp ;

  // rule RL_rl_adj_mantissa
  assign CAN_FIRE_RL_rl_adj_mantissa =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     adj_exp_done &&
	     !mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_mantissa = CAN_FIRE_RL_rl_adj_mantissa ;

  // rule RL_rl_assemble_result
  assign CAN_FIRE_RL_rl_assemble_result =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 &&
	     adj_exp_done &&
	     mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_assemble_result = CAN_FIRE_RL_rl_assemble_result ;

  // rule RL_rl_handle_zero_val
  assign CAN_FIRE_RL_rl_handle_zero_val = handle_zero || input_zero ;
  assign WILL_FIRE_RL_rl_handle_zero_val =
	     CAN_FIRE_RL_rl_handle_zero_val && !EN_get_inp_c &&
	     !EN_get_inp_s ;

  // rule RL_rl_deassert_signals
  assign CAN_FIRE_RL_rl_deassert_signals = add_done ;
  assign WILL_FIRE_RL_rl_deassert_signals =
	     add_done && !WILL_FIRE_RL_rl_handle_zero_val ;

  // inputs to muxes for submodule ports
  assign MUX_add_or_sub_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;
  assign MUX_adj_exp_done_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ;
  assign MUX_c_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ;
  assign MUX_input_zero_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 ;
  assign MUX_pack_done_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;
  assign MUX_temp_man_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ;
  assign MUX_temp_man_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;
  assign MUX_add_or_sub_write_1__VAL_1 =
	     s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 ? 2'd1 : 2'd2 ;
  assign MUX_end_result_write_1__VAL_1 = { tmp_sign, exp_mantissa } ;
  assign MUX_end_result_write_1__VAL_2 =
	     handle_zero ? 32'd0 : (input_no ? s : c) ;
  assign MUX_temp_c_write_1__VAL_1 = temp_c >> exp_diff ;
  assign MUX_temp_c_write_1__VAL_2 = { 2'b01, c[22:0], 25'd0 } ;
  assign MUX_temp_man_write_1__VAL_1 =
	     (add_or_sub == 2'd1) ? x__h6316 : x__h16985 ;
  assign MUX_temp_man_write_1__VAL_2 = { temp_man[48:0], 1'd0 } ;
  assign MUX_tmp_exp_write_1__VAL_1 =
	     { x__h39286 ^ y__h39287,
	       x__h39391 ^ y__h39096,
	       INV_tmp_exp_5_BIT_5_06_41_XOR_tmp_exp_5_BIT_4__ETC___d970 } ;

  // register add_done
  assign add_done_D_IN = 1'd1 ;
  assign add_done_EN = MUX_pack_done_write_1__SEL_2 ;

  // register add_or_sub
  assign add_or_sub_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_add_or_sub_write_1__VAL_1 :
	       2'd0 ;
  assign add_or_sub_EN =
	     WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;

  // register addition_start
  assign addition_start_D_IN = 1'd0 ;
  assign addition_start_EN = WILL_FIRE_RL_rl_deassert_signals ;

  // register adj_exp_done
  assign adj_exp_done_D_IN = MUX_adj_exp_done_write_1__SEL_1 ;
  assign adj_exp_done_EN =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register align_man_done
  assign align_man_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign align_man_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_align_exp ;

  // register c
  assign c_D_IN = MUX_c_write_1__SEL_1 ? s : get_inp_c_inp_C ;
  assign c_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ||
	     EN_get_inp_c ;

  // register calc_fraction_done
  assign calc_fraction_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign calc_fraction_done_EN = MUX_add_or_sub_write_1__SEL_2 ;

  // register cmp_exp_done
  assign cmp_exp_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign cmp_exp_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_cmp_exp ;

  // register end_result
  assign end_result_D_IN =
	     WILL_FIRE_RL_rl_assemble_result ?
	       MUX_end_result_write_1__VAL_1 :
	       MUX_end_result_write_1__VAL_2 ;
  assign end_result_EN =
	     WILL_FIRE_RL_rl_assemble_result ||
	     WILL_FIRE_RL_rl_handle_zero_val ;

  // register exp_diff
  assign exp_diff_D_IN =
	     { x__h5608 ^ y__h5609,
	       x__h5419 ^ y__h5420,
	       tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155 } ;
  assign exp_diff_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register exp_mantissa
  assign exp_mantissa_D_IN =
	     temp_man[49] ?
	       IF_NOT_temp_man_36_BIT_25_82_83_OR_temp_man_36_ETC___d1123 :
	       IF_NOT_temp_man_36_BIT_24_124_125_OR_temp_man__ETC___d1207 ;
  assign exp_mantissa_EN = CAN_FIRE_RL_rl_adj_mantissa ;

  // register exp_res
  assign exp_res_D_IN = 8'h0 ;
  assign exp_res_EN = 1'b0 ;

  // register get_r
  assign get_r_D_IN = 1'b0 ;
  assign get_r_EN = 1'b0 ;

  // register got_c
  assign got_c_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign got_c_EN = WILL_FIRE_RL_rl_deassert_signals || EN_get_inp_c ;

  // register got_s
  assign got_s_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign got_s_EN = WILL_FIRE_RL_rl_deassert_signals || EN_get_inp_s ;

  // register handle_zero
  assign handle_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign handle_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register input_no
  assign input_no_D_IN = s[30:23] != 8'd0 || s[22:0] != 23'd0 ;
  assign input_no_EN = MUX_input_zero_write_1__SEL_2 ;

  // register input_zero
  assign input_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign input_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register mantissa_done
  assign mantissa_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign mantissa_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_adj_mantissa ;

  // register mantissa_res
  assign mantissa_res_D_IN = 23'h0 ;
  assign mantissa_res_EN = 1'b0 ;

  // register pack_done
  assign pack_done_D_IN = !EN_get_inp_s ;
  assign pack_done_EN =
	     EN_get_inp_s || WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register result_concatenated
  assign result_concatenated_D_IN = 1'b0 ;
  assign result_concatenated_EN = 1'b0 ;

  // register s
  assign s_D_IN = MUX_c_write_1__SEL_1 ? c : get_inp_s_inp_S ;
  assign s_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 ||
	     EN_get_inp_s ;

  // register sign_done
  assign sign_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign sign_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_get_sign ;

  // register swap_done
  assign swap_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign swap_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_swap ;

  // register temp_c
  assign temp_c_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_temp_c_write_1__VAL_1 :
	       MUX_temp_c_write_1__VAL_2 ;
  assign temp_c_EN = WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_cmp_exp ;

  // register temp_man
  assign temp_man_D_IN =
	     MUX_temp_man_write_1__SEL_1 ?
	       MUX_temp_man_write_1__VAL_1 :
	       MUX_temp_man_write_1__VAL_2 ;
  assign temp_man_EN =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ||
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;

  // register temp_s
  assign temp_s_D_IN = { 2'b01, s[22:0], 25'd0 } ;
  assign temp_s_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register tmp_exp
  assign tmp_exp_D_IN =
	     MUX_temp_man_write_1__SEL_2 ?
	       MUX_tmp_exp_write_1__VAL_1 :
	       s[30:23] ;
  assign tmp_exp_EN =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ||
	     WILL_FIRE_RL_rl_get_sign ;

  // register tmp_res
  assign tmp_res_D_IN = 24'h0 ;
  assign tmp_res_EN = 1'b0 ;

  // register tmp_sign
  assign tmp_sign_D_IN = s[31] ;
  assign tmp_sign_EN = CAN_FIRE_RL_rl_get_sign ;

  // remaining internal signals
  assign IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10 =
	     (~IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2 =
	     (~IF_c_BIT_23_THEN_0_ELSE_1__q1[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6 =
	     (~temp_man[25]) ? 50'd1 : 50'd0 ;
  assign IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5 =
	     (~temp_man[26]) ? 50'd1 : 50'd0 ;
  assign IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4 =
	     (~tmp_exp[0]) ? 8'd1 : 8'd0 ;
  assign IF_NOT_temp_man_36_BIT_24_124_125_OR_temp_man__ETC___d1207 =
	     (!temp_man[24] || temp_man[23:0] == 24'd0 && !temp_man[25]) ?
	       { tmp_exp, temp_man[47:25] } :
	       IF_temp_man_36_BIT_49_81_XOR_temp_man_36_BIT_4_ETC___d1206 ;
  assign IF_NOT_temp_man_36_BIT_25_82_83_OR_temp_man_36_ETC___d1123 =
	     (!temp_man[25] || temp_man[24:0] == 25'd0 && !temp_man[26]) ?
	       { _theResult___fst__h63294, temp_man[48:26] } :
	       IF_temp_man_36_BIT_49_81_AND_temp_man_36_BIT_4_ETC___d1122 ;
  assign IF_c_BIT_23_THEN_0_ELSE_1__q1 = c[23] ? 8'd0 : 8'd1 ;
  assign IF_temp_c_BIT_0_THEN_1_ELSE_0__q3 = temp_c[0] ? 50'd1 : 50'd0 ;
  assign IF_temp_man_36_BIT_49_81_AND_temp_man_36_BIT_4_ETC___d1122 =
	     (temp_man[49] & y__h46516) ?
	       { tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d996 ^
		 y__h52778,
		 tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1071,
		 rounded_mantissa__h51456 } :
	       { _theResult___fst__h63294, rounded_mantissa__h64879 } ;
  assign IF_temp_man_36_BIT_49_81_XOR_temp_man_36_BIT_4_ETC___d1206 =
	     (temp_man[49] ^ y__h58536) ?
	       { _theResult___fst__h63294, rounded_mantissa__h63293 } :
	       { tmp_exp, rounded_mantissa__h64969 } ;
  assign IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9 =
	     (temp_s[0] ^ IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0]) ?
	       50'd1 :
	       50'd0 ;
  assign IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8 =
	     (temp_s[0] ^ temp_c[0]) ? 50'd1 : 50'd0 ;
  assign IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7 =
	     (tmp_exp[0] ^
	      IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0]) ?
	       8'd1 :
	       8'd0 ;
  assign INV_tmp_exp_5_BIT_3_14_43_XOR_tmp_exp_5_BIT_2__ETC___d969 =
	     { x__h38818 ^ y__h38523,
	       x__h38627 ^ y__h38332,
	       x__h38436 ^ tmp_exp[0],
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;
  assign INV_tmp_exp_5_BIT_5_06_41_XOR_tmp_exp_5_BIT_4__ETC___d970 =
	     { x__h39200 ^ y__h38905,
	       x__h39009 ^ y__h38714,
	       INV_tmp_exp_5_BIT_3_14_43_XOR_tmp_exp_5_BIT_2__ETC___d969 } ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0 || c[30:23] != 8'd0 ||
	      c[22:0] != 23'd0) &&
	     (!s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 ||
	      !s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 ||
	      s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d49 =
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d46 &&
	     (s[30:23] == 8'd0 && s[22:0] == 23'd0 ||
	      c[30:23] == 8'd0 && c[22:0] == 23'd0) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0) &&
	     (s[30:23] < c[30:23] ||
	      s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 &&
	      s[22:0] < c[22:0]) ;
  assign NOT_s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0_ETC___d57 =
	     (!s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 ||
	      !s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 ||
	      s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31) &&
	     NOT_s_3_BITS_30_TO_23_4_EQ_0_5_5_OR_NOT_s_3_BI_ETC___d56 ;
  assign _theResult___fst__h63294 =
	     { tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d996,
	       x__h52591,
	       x__h52405,
	       x__h52219,
	       x__h52033,
	       x__h51847,
	       x__h51721,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;
  assign got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 =
	     got_s && got_c && swap_done && sign_done ;
  assign got_s_AND_got_c_AND_swap_done_8_AND_sign_done__ETC___d929 =
	     got_s_AND_got_c_AND_swap_done_8_AND_sign_done_2___d68 &&
	     cmp_exp_done &&
	     align_man_done &&
	     calc_fraction_done ;
  assign rounded_mantissa__h51456 =
	     { temp_man[49] ^ y__h46516,
	       temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1073,
	       temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1074,
	       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1075,
	       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1076,
	       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1077,
	       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1078,
	       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1079,
	       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1080,
	       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1081,
	       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1082,
	       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1083,
	       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1084,
	       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1085,
	       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1086,
	       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1087,
	       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1088,
	       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1089,
	       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1090,
	       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1091,
	       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1092,
	       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1093,
	       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26_86___d1094 } ;
  assign rounded_mantissa__h63293 =
	     { temp_man[48] ^ y__h58350,
	       temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1157,
	       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1158,
	       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1159,
	       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1160,
	       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1161,
	       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1162,
	       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1163,
	       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1164,
	       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1165,
	       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1166,
	       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1167,
	       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1168,
	       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1169,
	       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1170,
	       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1171,
	       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1172,
	       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1173,
	       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1174,
	       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1175,
	       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1176,
	       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26__ETC___d1177,
	       temp_man_36_BIT_26_86_XOR_temp_man_36_BIT_25_82___d1178 } ;
  assign rounded_mantissa__h64879 =
	     { temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1073,
	       temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1074,
	       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1075,
	       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1076,
	       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1077,
	       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1078,
	       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1079,
	       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1080,
	       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1081,
	       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1082,
	       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1083,
	       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1084,
	       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1085,
	       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1086,
	       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1087,
	       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1088,
	       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1089,
	       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1090,
	       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1111 } ;
  assign rounded_mantissa__h64969 =
	     { temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1157,
	       temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1158,
	       temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1159,
	       temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1160,
	       temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1161,
	       temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1162,
	       temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1163,
	       temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1164,
	       temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1165,
	       temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1166,
	       temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1167,
	       temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1168,
	       temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1169,
	       temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1170,
	       temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1171,
	       temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1172,
	       temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1173,
	       temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1174,
	       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1195 } ;
  assign s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 = s[22:0] == c[22:0] ;
  assign s_3_BITS_30_TO_23_4_EQ_0_5_AND_s_3_BITS_22_TO__ETC___d34 =
	     s[30:23] == 8'd0 && s[22:0] == 23'd0 && c[30:23] == 8'd0 &&
	     c[22:0] == 23'd0 ||
	     s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 &&
	     s_3_BITS_22_TO_0_6_EQ_c_9_BITS_22_TO_0_3___d27 &&
	     !s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 ;
  assign s_3_BITS_30_TO_23_4_EQ_c_9_BITS_30_TO_23_0___d26 =
	     s[30:23] == c[30:23] ;
  assign s_3_BIT_31_9_EQ_c_9_BIT_31_0___d31 = s[31] == c[31] ;
  assign temp_man_36_BIT_26_86_XOR_temp_man_36_BIT_25_82___d1178 =
	     temp_man[26] ^ temp_man[25] ;
  assign temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26_86___d1094 =
	     temp_man[27] ^ temp_man[26] ;
  assign temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26__ETC___d1177 =
	     temp_man[27] ^ y__h54444 ;
  assign temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1093 =
	     temp_man[28] ^ y__h42610 ;
  assign temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1176 =
	     temp_man[28] ^ y__h54630 ;
  assign temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1092 =
	     temp_man[29] ^ y__h42796 ;
  assign temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1175 =
	     temp_man[29] ^ y__h54816 ;
  assign temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1195 =
	     { temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1175,
	       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1176,
	       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26__ETC___d1177,
	       temp_man_36_BIT_26_86_XOR_temp_man_36_BIT_25_82___d1178,
	       IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6[0] } ;
  assign temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1091 =
	     temp_man[30] ^ y__h42982 ;
  assign temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1111 =
	     { temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1091,
	       temp_man_36_BIT_29_027_XOR_temp_man_36_BIT_28__ETC___d1092,
	       temp_man_36_BIT_28_028_XOR_temp_man_36_BIT_27__ETC___d1093,
	       temp_man_36_BIT_27_029_XOR_temp_man_36_BIT_26_86___d1094,
	       IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5[0] } ;
  assign temp_man_36_BIT_30_026_XOR_temp_man_36_BIT_29__ETC___d1174 =
	     temp_man[30] ^ y__h55002 ;
  assign temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1090 =
	     temp_man[31] ^ y__h43168 ;
  assign temp_man_36_BIT_31_025_XOR_temp_man_36_BIT_30__ETC___d1173 =
	     temp_man[31] ^ y__h55188 ;
  assign temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1089 =
	     temp_man[32] ^ y__h43354 ;
  assign temp_man_36_BIT_32_024_XOR_temp_man_36_BIT_31__ETC___d1172 =
	     temp_man[32] ^ y__h55374 ;
  assign temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1088 =
	     temp_man[33] ^ y__h43540 ;
  assign temp_man_36_BIT_33_023_XOR_temp_man_36_BIT_32__ETC___d1171 =
	     temp_man[33] ^ y__h55560 ;
  assign temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1087 =
	     temp_man[34] ^ y__h43726 ;
  assign temp_man_36_BIT_34_022_XOR_temp_man_36_BIT_33__ETC___d1170 =
	     temp_man[34] ^ y__h55746 ;
  assign temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1086 =
	     temp_man[35] ^ y__h43912 ;
  assign temp_man_36_BIT_35_021_XOR_temp_man_36_BIT_34__ETC___d1169 =
	     temp_man[35] ^ y__h55932 ;
  assign temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1085 =
	     temp_man[36] ^ y__h44098 ;
  assign temp_man_36_BIT_36_020_XOR_temp_man_36_BIT_35__ETC___d1168 =
	     temp_man[36] ^ y__h56118 ;
  assign temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1084 =
	     temp_man[37] ^ y__h44284 ;
  assign temp_man_36_BIT_37_019_XOR_temp_man_36_BIT_36__ETC___d1167 =
	     temp_man[37] ^ y__h56304 ;
  assign temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1083 =
	     temp_man[38] ^ y__h44470 ;
  assign temp_man_36_BIT_38_018_XOR_temp_man_36_BIT_37__ETC___d1166 =
	     temp_man[38] ^ y__h56490 ;
  assign temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1082 =
	     temp_man[39] ^ y__h44656 ;
  assign temp_man_36_BIT_39_017_XOR_temp_man_36_BIT_38__ETC___d1165 =
	     temp_man[39] ^ y__h56676 ;
  assign temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1081 =
	     temp_man[40] ^ y__h44842 ;
  assign temp_man_36_BIT_40_016_XOR_temp_man_36_BIT_39__ETC___d1164 =
	     temp_man[40] ^ y__h56862 ;
  assign temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1080 =
	     temp_man[41] ^ y__h45028 ;
  assign temp_man_36_BIT_41_015_XOR_temp_man_36_BIT_40__ETC___d1163 =
	     temp_man[41] ^ y__h57048 ;
  assign temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1079 =
	     temp_man[42] ^ y__h45214 ;
  assign temp_man_36_BIT_42_014_XOR_temp_man_36_BIT_41__ETC___d1162 =
	     temp_man[42] ^ y__h57234 ;
  assign temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1078 =
	     temp_man[43] ^ y__h45400 ;
  assign temp_man_36_BIT_43_013_XOR_temp_man_36_BIT_42__ETC___d1161 =
	     temp_man[43] ^ y__h57420 ;
  assign temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1077 =
	     temp_man[44] ^ y__h45586 ;
  assign temp_man_36_BIT_44_012_XOR_temp_man_36_BIT_43__ETC___d1160 =
	     temp_man[44] ^ y__h57606 ;
  assign temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1076 =
	     temp_man[45] ^ y__h45772 ;
  assign temp_man_36_BIT_45_011_XOR_temp_man_36_BIT_44__ETC___d1159 =
	     temp_man[45] ^ y__h57792 ;
  assign temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1075 =
	     temp_man[46] ^ y__h45958 ;
  assign temp_man_36_BIT_46_010_XOR_temp_man_36_BIT_45__ETC___d1158 =
	     temp_man[46] ^ y__h57978 ;
  assign temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1074 =
	     temp_man[47] ^ y__h46144 ;
  assign temp_man_36_BIT_47_009_XOR_temp_man_36_BIT_46__ETC___d1157 =
	     temp_man[47] ^ y__h58164 ;
  assign temp_man_36_BIT_48_37_XOR_temp_man_36_BIT_47_0_ETC___d1073 =
	     temp_man[48] ^ y__h46330 ;
  assign temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535 =
	     { x__h9721 ^ y__h9424,
	       x__h9529 ^ y__h9232,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534 } ;
  assign temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906 =
	     { x__h30341 ^ y__h30342,
	       x__h30152 ^ y__h30153,
	       temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905 } ;
  assign temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536 =
	     { x__h10105 ^ y__h9808,
	       x__h9913 ^ y__h9616,
	       temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_38_ETC___d535 } ;
  assign temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907 =
	     { x__h30719 ^ y__h30720,
	       x__h30530 ^ y__h30531,
	       temp_s_66_BIT_11_35_XOR_temp_c_68_BIT_11_36_XO_ETC___d906 } ;
  assign temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537 =
	     { x__h10489 ^ y__h10192,
	       x__h10297 ^ y__h10000,
	       temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_30_ETC___d536 } ;
  assign temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908 =
	     { x__h31097 ^ y__h31098,
	       x__h30908 ^ y__h30909,
	       temp_s_66_BIT_13_27_XOR_temp_c_68_BIT_13_28_XO_ETC___d907 } ;
  assign temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538 =
	     { x__h10873 ^ y__h10576,
	       x__h10681 ^ y__h10384,
	       temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_22_ETC___d537 } ;
  assign temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909 =
	     { x__h31475 ^ y__h31476,
	       x__h31286 ^ y__h31287,
	       temp_s_66_BIT_15_19_XOR_temp_c_68_BIT_15_20_XO_ETC___d908 } ;
  assign temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539 =
	     { x__h11257 ^ y__h10960,
	       x__h11065 ^ y__h10768,
	       temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_14_ETC___d538 } ;
  assign temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910 =
	     { x__h31853 ^ y__h31854,
	       x__h31664 ^ y__h31665,
	       temp_s_66_BIT_17_11_XOR_temp_c_68_BIT_17_12_XO_ETC___d909 } ;
  assign temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530 =
	     { x__h7801 ^ y__h7802,
	       IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8[0] } ;
  assign temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901 =
	     { x__h28512 ^ y__h28513,
	       IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9[0] } ;
  assign temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540 =
	     { x__h11641 ^ y__h11344,
	       x__h11449 ^ y__h11152,
	       temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_06_ETC___d539 } ;
  assign temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911 =
	     { x__h32231 ^ y__h32232,
	       x__h32042 ^ y__h32043,
	       temp_s_66_BIT_19_03_XOR_temp_c_68_BIT_19_04_XO_ETC___d910 } ;
  assign temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541 =
	     { x__h12025 ^ y__h11728,
	       x__h11833 ^ y__h11536,
	       temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_98_ETC___d540 } ;
  assign temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912 =
	     { x__h32609 ^ y__h32610,
	       x__h32420 ^ y__h32421,
	       temp_s_66_BIT_21_95_XOR_temp_c_68_BIT_21_96_XO_ETC___d911 } ;
  assign temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542 =
	     { x__h12409 ^ y__h12112,
	       x__h12217 ^ y__h11920,
	       temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_90_ETC___d541 } ;
  assign temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913 =
	     { x__h32987 ^ y__h32988,
	       x__h32798 ^ y__h32799,
	       temp_s_66_BIT_23_87_XOR_temp_c_68_BIT_23_88_XO_ETC___d912 } ;
  assign temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543 =
	     { x__h12793 ^ y__h12496,
	       x__h12601 ^ y__h12304,
	       temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_82_ETC___d542 } ;
  assign temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914 =
	     { x__h33365 ^ y__h33366,
	       x__h33176 ^ y__h33177,
	       temp_s_66_BIT_25_79_XOR_temp_c_68_BIT_25_80_XO_ETC___d913 } ;
  assign temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544 =
	     { x__h13177 ^ y__h12880,
	       x__h12985 ^ y__h12688,
	       temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_74_ETC___d543 } ;
  assign temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915 =
	     { x__h33743 ^ y__h33744,
	       x__h33554 ^ y__h33555,
	       temp_s_66_BIT_27_71_XOR_temp_c_68_BIT_27_72_XO_ETC___d914 } ;
  assign temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545 =
	     { x__h13561 ^ y__h13264,
	       x__h13369 ^ y__h13072,
	       temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_66_ETC___d544 } ;
  assign temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916 =
	     { x__h34121 ^ y__h34122,
	       x__h33932 ^ y__h33933,
	       temp_s_66_BIT_29_63_XOR_temp_c_68_BIT_29_64_XO_ETC___d915 } ;
  assign temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546 =
	     { x__h13945 ^ y__h13648,
	       x__h13753 ^ y__h13456,
	       temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_58_ETC___d545 } ;
  assign temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917 =
	     { x__h34499 ^ y__h34500,
	       x__h34310 ^ y__h34311,
	       temp_s_66_BIT_31_55_XOR_temp_c_68_BIT_31_56_XO_ETC___d916 } ;
  assign temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547 =
	     { x__h14329 ^ y__h14032,
	       x__h14137 ^ y__h13840,
	       temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_50_ETC___d546 } ;
  assign temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918 =
	     { x__h34877 ^ y__h34878,
	       x__h34688 ^ y__h34689,
	       temp_s_66_BIT_33_47_XOR_temp_c_68_BIT_33_48_XO_ETC___d917 } ;
  assign temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548 =
	     { x__h14713 ^ y__h14416,
	       x__h14521 ^ y__h14224,
	       temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_42_ETC___d547 } ;
  assign temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919 =
	     { x__h35255 ^ y__h35256,
	       x__h35066 ^ y__h35067,
	       temp_s_66_BIT_35_39_XOR_temp_c_68_BIT_35_40_XO_ETC___d918 } ;
  assign temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549 =
	     { x__h15097 ^ y__h14800,
	       x__h14905 ^ y__h14608,
	       temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_34_ETC___d548 } ;
  assign temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920 =
	     { x__h35633 ^ y__h35634,
	       x__h35444 ^ y__h35445,
	       temp_s_66_BIT_37_31_XOR_temp_c_68_BIT_37_32_XO_ETC___d919 } ;
  assign temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531 =
	     { x__h8185 ^ y__h7888,
	       x__h7993 ^ y__h7696,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_78_X_ETC___d530 } ;
  assign temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902 =
	     { x__h28829 ^ y__h28830,
	       x__h28640 ^ y__h28641,
	       temp_s_66_BIT_1_75_XOR_temp_c_68_BIT_1_76_XOR__ETC___d901 } ;
  assign temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550 =
	     { x__h15481 ^ y__h15184,
	       x__h15289 ^ y__h14992,
	       temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_26_ETC___d549 } ;
  assign temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921 =
	     { x__h36011 ^ y__h36012,
	       x__h35822 ^ y__h35823,
	       temp_s_66_BIT_39_23_XOR_temp_c_68_BIT_39_24_XO_ETC___d920 } ;
  assign temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551 =
	     { x__h15865 ^ y__h15568,
	       x__h15673 ^ y__h15376,
	       temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_18_ETC___d550 } ;
  assign temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922 =
	     { x__h36389 ^ y__h36390,
	       x__h36200 ^ y__h36201,
	       temp_s_66_BIT_41_15_XOR_temp_c_68_BIT_41_16_XO_ETC___d921 } ;
  assign temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552 =
	     { x__h16249 ^ y__h15952,
	       x__h16057 ^ y__h15760,
	       temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_10_ETC___d551 } ;
  assign temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923 =
	     { x__h36767 ^ y__h36768,
	       x__h36578 ^ y__h36579,
	       temp_s_66_BIT_43_07_XOR_temp_c_68_BIT_43_08_XO_ETC___d922 } ;
  assign temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553 =
	     { x__h16633 ^ y__h16336,
	       x__h16441 ^ y__h16144,
	       temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_02_ETC___d552 } ;
  assign temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924 =
	     { x__h37145 ^ y__h37146,
	       x__h36956 ^ y__h36957,
	       temp_s_66_BIT_45_99_XOR_temp_c_68_BIT_45_00_XO_ETC___d923 } ;
  assign temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532 =
	     { x__h8569 ^ y__h8272,
	       x__h8377 ^ y__h8080,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_70_X_ETC___d531 } ;
  assign temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903 =
	     { x__h29207 ^ y__h29208,
	       x__h29018 ^ y__h29019,
	       temp_s_66_BIT_3_67_XOR_temp_c_68_BIT_3_68_XOR__ETC___d902 } ;
  assign temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533 =
	     { x__h8953 ^ y__h8656,
	       x__h8761 ^ y__h8464,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_62_X_ETC___d532 } ;
  assign temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904 =
	     { x__h29585 ^ y__h29586,
	       x__h29396 ^ y__h29397,
	       temp_s_66_BIT_5_59_XOR_temp_c_68_BIT_5_60_XOR__ETC___d903 } ;
  assign temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_46_X_ETC___d534 =
	     { x__h9337 ^ y__h9040,
	       x__h9145 ^ y__h8848,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_54_X_ETC___d533 } ;
  assign temp_s_66_BIT_9_43_XOR_temp_c_68_BIT_9_44_XOR__ETC___d905 =
	     { x__h29963 ^ y__h29964,
	       x__h29774 ^ y__h29775,
	       temp_s_66_BIT_7_51_XOR_temp_c_68_BIT_7_52_XOR__ETC___d904 } ;
  assign tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153 =
	     { x__h4535 ^ y__h4536,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7[0] } ;
  assign tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1069 =
	     { x__h51847 ^ y__h51848,
	       x__h51721 ^ IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0],
	       IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10[0] } ;
  assign tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154 =
	     { x__h4852 ^ y__h4853,
	       x__h4663 ^ y__h4664,
	       tmp_exp_5_BIT_1_22_XOR_NOT_c_9_BIT_24_9_0_XOR__ETC___d153 } ;
  assign tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1070 =
	     { x__h52219 ^ y__h52220,
	       x__h52033 ^ y__h52034,
	       tmp_exp_5_BIT_2_18_XOR_tmp_exp_5_BIT_1_22_AND__ETC___d1069 } ;
  assign tmp_exp_5_BIT_5_06_XOR_NOT_c_9_BIT_28_1_2_XOR__ETC___d155 =
	     { x__h5230 ^ y__h5231,
	       x__h5041 ^ y__h5042,
	       tmp_exp_5_BIT_3_14_XOR_NOT_c_9_BIT_26_5_6_XOR__ETC___d154 } ;
  assign tmp_exp_5_BIT_6_02_XOR_tmp_exp_5_BIT_5_06_AND__ETC___d1071 =
	     { x__h52591 ^ y__h52592,
	       x__h52405 ^ y__h52406,
	       tmp_exp_5_BIT_4_10_XOR_tmp_exp_5_BIT_3_14_AND__ETC___d1070 } ;
  assign tmp_exp_5_BIT_7_6_XOR_tmp_exp_5_BIT_6_02_AND_t_ETC___d996 =
	     tmp_exp[7] ^ y__h64632 ;
  assign x__h10058 = temp_s[13] & temp_c[13] ;
  assign x__h10105 = temp_s[13] ^ temp_c[13] ;
  assign x__h10250 = temp_s[14] & temp_c[14] ;
  assign x__h10297 = temp_s[14] ^ temp_c[14] ;
  assign x__h10442 = temp_s[15] & temp_c[15] ;
  assign x__h10489 = temp_s[15] ^ temp_c[15] ;
  assign x__h10634 = temp_s[16] & temp_c[16] ;
  assign x__h10681 = temp_s[16] ^ temp_c[16] ;
  assign x__h10826 = temp_s[17] & temp_c[17] ;
  assign x__h10873 = temp_s[17] ^ temp_c[17] ;
  assign x__h11018 = temp_s[18] & temp_c[18] ;
  assign x__h11065 = temp_s[18] ^ temp_c[18] ;
  assign x__h11210 = temp_s[19] & temp_c[19] ;
  assign x__h11257 = temp_s[19] ^ temp_c[19] ;
  assign x__h11402 = temp_s[20] & temp_c[20] ;
  assign x__h11449 = temp_s[20] ^ temp_c[20] ;
  assign x__h11594 = temp_s[21] & temp_c[21] ;
  assign x__h11641 = temp_s[21] ^ temp_c[21] ;
  assign x__h11786 = temp_s[22] & temp_c[22] ;
  assign x__h11833 = temp_s[22] ^ temp_c[22] ;
  assign x__h11978 = temp_s[23] & temp_c[23] ;
  assign x__h12025 = temp_s[23] ^ temp_c[23] ;
  assign x__h12170 = temp_s[24] & temp_c[24] ;
  assign x__h12217 = temp_s[24] ^ temp_c[24] ;
  assign x__h12362 = temp_s[25] & temp_c[25] ;
  assign x__h12409 = temp_s[25] ^ temp_c[25] ;
  assign x__h12554 = temp_s[26] & temp_c[26] ;
  assign x__h12601 = temp_s[26] ^ temp_c[26] ;
  assign x__h12746 = temp_s[27] & temp_c[27] ;
  assign x__h12793 = temp_s[27] ^ temp_c[27] ;
  assign x__h12938 = temp_s[28] & temp_c[28] ;
  assign x__h12985 = temp_s[28] ^ temp_c[28] ;
  assign x__h13130 = temp_s[29] & temp_c[29] ;
  assign x__h13177 = temp_s[29] ^ temp_c[29] ;
  assign x__h13322 = temp_s[30] & temp_c[30] ;
  assign x__h13369 = temp_s[30] ^ temp_c[30] ;
  assign x__h13514 = temp_s[31] & temp_c[31] ;
  assign x__h13561 = temp_s[31] ^ temp_c[31] ;
  assign x__h13706 = temp_s[32] & temp_c[32] ;
  assign x__h13753 = temp_s[32] ^ temp_c[32] ;
  assign x__h13898 = temp_s[33] & temp_c[33] ;
  assign x__h13945 = temp_s[33] ^ temp_c[33] ;
  assign x__h14090 = temp_s[34] & temp_c[34] ;
  assign x__h14137 = temp_s[34] ^ temp_c[34] ;
  assign x__h14282 = temp_s[35] & temp_c[35] ;
  assign x__h14329 = temp_s[35] ^ temp_c[35] ;
  assign x__h14474 = temp_s[36] & temp_c[36] ;
  assign x__h14521 = temp_s[36] ^ temp_c[36] ;
  assign x__h14666 = temp_s[37] & temp_c[37] ;
  assign x__h14713 = temp_s[37] ^ temp_c[37] ;
  assign x__h14858 = temp_s[38] & temp_c[38] ;
  assign x__h14905 = temp_s[38] ^ temp_c[38] ;
  assign x__h15050 = temp_s[39] & temp_c[39] ;
  assign x__h15097 = temp_s[39] ^ temp_c[39] ;
  assign x__h15242 = temp_s[40] & temp_c[40] ;
  assign x__h15289 = temp_s[40] ^ temp_c[40] ;
  assign x__h15434 = temp_s[41] & temp_c[41] ;
  assign x__h15481 = temp_s[41] ^ temp_c[41] ;
  assign x__h15626 = temp_s[42] & temp_c[42] ;
  assign x__h15673 = temp_s[42] ^ temp_c[42] ;
  assign x__h15818 = temp_s[43] & temp_c[43] ;
  assign x__h15865 = temp_s[43] ^ temp_c[43] ;
  assign x__h16010 = temp_s[44] & temp_c[44] ;
  assign x__h16057 = temp_s[44] ^ temp_c[44] ;
  assign x__h16202 = temp_s[45] & temp_c[45] ;
  assign x__h16249 = temp_s[45] ^ temp_c[45] ;
  assign x__h16394 = temp_s[46] & temp_c[46] ;
  assign x__h16441 = temp_s[46] ^ temp_c[46] ;
  assign x__h16586 = temp_s[47] & temp_c[47] ;
  assign x__h16633 = temp_s[47] ^ temp_c[47] ;
  assign x__h16719 = temp_s[49] ^ temp_c[49] ;
  assign x__h16778 = temp_s[48] & temp_c[48] ;
  assign x__h16825 = temp_s[48] ^ temp_c[48] ;
  assign x__h16985 =
	     { x__h37523 ^ y__h37524,
	       x__h37334 ^ y__h37335,
	       temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_XO_ETC___d924 } ;
  assign x__h28512 = temp_s[1] ^ y__h28515 ;
  assign x__h28640 = temp_s[2] ^ y__h28643 ;
  assign x__h28698 = temp_s[1] & y__h28515 ;
  assign x__h28829 = temp_s[3] ^ y__h28832 ;
  assign x__h28887 = temp_s[2] & y__h28643 ;
  assign x__h29018 = temp_s[4] ^ y__h29021 ;
  assign x__h29076 = temp_s[3] & y__h28832 ;
  assign x__h29207 = temp_s[5] ^ y__h29210 ;
  assign x__h29265 = temp_s[4] & y__h29021 ;
  assign x__h29396 = temp_s[6] ^ y__h29399 ;
  assign x__h29454 = temp_s[5] & y__h29210 ;
  assign x__h29585 = temp_s[7] ^ y__h29588 ;
  assign x__h29643 = temp_s[6] & y__h29399 ;
  assign x__h29774 = temp_s[8] ^ y__h29777 ;
  assign x__h29832 = temp_s[7] & y__h29588 ;
  assign x__h29963 = temp_s[9] ^ y__h29966 ;
  assign x__h30021 = temp_s[8] & y__h29777 ;
  assign x__h30152 = temp_s[10] ^ y__h30155 ;
  assign x__h30210 = temp_s[9] & y__h29966 ;
  assign x__h30341 = temp_s[11] ^ y__h30344 ;
  assign x__h30399 = temp_s[10] & y__h30155 ;
  assign x__h30530 = temp_s[12] ^ y__h30533 ;
  assign x__h30588 = temp_s[11] & y__h30344 ;
  assign x__h30719 = temp_s[13] ^ y__h30722 ;
  assign x__h30777 = temp_s[12] & y__h30533 ;
  assign x__h30908 = temp_s[14] ^ y__h30911 ;
  assign x__h30966 = temp_s[13] & y__h30722 ;
  assign x__h31097 = temp_s[15] ^ y__h31100 ;
  assign x__h31155 = temp_s[14] & y__h30911 ;
  assign x__h31286 = temp_s[16] ^ y__h31289 ;
  assign x__h31344 = temp_s[15] & y__h31100 ;
  assign x__h31475 = temp_s[17] ^ y__h31478 ;
  assign x__h31533 = temp_s[16] & y__h31289 ;
  assign x__h31664 = temp_s[18] ^ y__h31667 ;
  assign x__h31722 = temp_s[17] & y__h31478 ;
  assign x__h31853 = temp_s[19] ^ y__h31856 ;
  assign x__h31911 = temp_s[18] & y__h31667 ;
  assign x__h32042 = temp_s[20] ^ y__h32045 ;
  assign x__h32100 = temp_s[19] & y__h31856 ;
  assign x__h32231 = temp_s[21] ^ y__h32234 ;
  assign x__h32289 = temp_s[20] & y__h32045 ;
  assign x__h32420 = temp_s[22] ^ y__h32423 ;
  assign x__h32478 = temp_s[21] & y__h32234 ;
  assign x__h32609 = temp_s[23] ^ y__h32612 ;
  assign x__h32667 = temp_s[22] & y__h32423 ;
  assign x__h32798 = temp_s[24] ^ y__h32801 ;
  assign x__h32856 = temp_s[23] & y__h32612 ;
  assign x__h32987 = temp_s[25] ^ y__h32990 ;
  assign x__h33045 = temp_s[24] & y__h32801 ;
  assign x__h33176 = temp_s[26] ^ y__h33179 ;
  assign x__h33234 = temp_s[25] & y__h32990 ;
  assign x__h33365 = temp_s[27] ^ y__h33368 ;
  assign x__h33423 = temp_s[26] & y__h33179 ;
  assign x__h33554 = temp_s[28] ^ y__h33557 ;
  assign x__h33612 = temp_s[27] & y__h33368 ;
  assign x__h33743 = temp_s[29] ^ y__h33746 ;
  assign x__h33801 = temp_s[28] & y__h33557 ;
  assign x__h33932 = temp_s[30] ^ y__h33935 ;
  assign x__h33990 = temp_s[29] & y__h33746 ;
  assign x__h34121 = temp_s[31] ^ y__h34124 ;
  assign x__h34179 = temp_s[30] & y__h33935 ;
  assign x__h34310 = temp_s[32] ^ y__h34313 ;
  assign x__h34368 = temp_s[31] & y__h34124 ;
  assign x__h34499 = temp_s[33] ^ y__h34502 ;
  assign x__h34557 = temp_s[32] & y__h34313 ;
  assign x__h34688 = temp_s[34] ^ y__h34691 ;
  assign x__h34746 = temp_s[33] & y__h34502 ;
  assign x__h34877 = temp_s[35] ^ y__h34880 ;
  assign x__h34935 = temp_s[34] & y__h34691 ;
  assign x__h35066 = temp_s[36] ^ y__h35069 ;
  assign x__h35124 = temp_s[35] & y__h34880 ;
  assign x__h35255 = temp_s[37] ^ y__h35258 ;
  assign x__h35313 = temp_s[36] & y__h35069 ;
  assign x__h35444 = temp_s[38] ^ y__h35447 ;
  assign x__h35502 = temp_s[37] & y__h35258 ;
  assign x__h35633 = temp_s[39] ^ y__h35636 ;
  assign x__h35691 = temp_s[38] & y__h35447 ;
  assign x__h35822 = temp_s[40] ^ y__h35825 ;
  assign x__h35880 = temp_s[39] & y__h35636 ;
  assign x__h36011 = temp_s[41] ^ y__h36014 ;
  assign x__h36069 = temp_s[40] & y__h35825 ;
  assign x__h36200 = temp_s[42] ^ y__h36203 ;
  assign x__h36258 = temp_s[41] & y__h36014 ;
  assign x__h36389 = temp_s[43] ^ y__h36392 ;
  assign x__h36447 = temp_s[42] & y__h36203 ;
  assign x__h36578 = temp_s[44] ^ y__h36581 ;
  assign x__h36636 = temp_s[43] & y__h36392 ;
  assign x__h36767 = temp_s[45] ^ y__h36770 ;
  assign x__h36825 = temp_s[44] & y__h36581 ;
  assign x__h36956 = temp_s[46] ^ y__h36959 ;
  assign x__h37014 = temp_s[45] & y__h36770 ;
  assign x__h37145 = temp_s[47] ^ y__h37148 ;
  assign x__h37203 = temp_s[46] & y__h36959 ;
  assign x__h37334 = temp_s[48] ^ y__h37337 ;
  assign x__h37392 = temp_s[47] & y__h37148 ;
  assign x__h37523 = temp_s[49] ^ y__h37526 ;
  assign x__h37581 = temp_s[48] & y__h37337 ;
  assign x__h38436 = ~tmp_exp[1] ;
  assign x__h38627 = ~tmp_exp[2] ;
  assign x__h38818 = ~tmp_exp[3] ;
  assign x__h39009 = ~tmp_exp[4] ;
  assign x__h39200 = ~tmp_exp[5] ;
  assign x__h39286 = ~tmp_exp[7] ;
  assign x__h39391 = ~tmp_exp[6] ;
  assign x__h4324 = !c[30] ;
  assign x__h4535 = tmp_exp[1] ^ y__h4538 ;
  assign x__h4663 = tmp_exp[2] ^ y__h4666 ;
  assign x__h4721 = tmp_exp[1] & y__h4538 ;
  assign x__h4852 = tmp_exp[3] ^ y__h4855 ;
  assign x__h4910 = tmp_exp[2] & y__h4666 ;
  assign x__h5041 = tmp_exp[4] ^ y__h5044 ;
  assign x__h5099 = tmp_exp[3] & y__h4855 ;
  assign x__h51721 = tmp_exp[1] ^ tmp_exp[0] ;
  assign x__h51847 = tmp_exp[2] ^ y__h63687 ;
  assign x__h52033 = tmp_exp[3] ^ y__h63876 ;
  assign x__h52219 = tmp_exp[4] ^ y__h64065 ;
  assign x__h5230 = tmp_exp[5] ^ y__h5233 ;
  assign x__h52405 = tmp_exp[5] ^ y__h64254 ;
  assign x__h52591 = tmp_exp[6] ^ y__h64443 ;
  assign x__h5288 = tmp_exp[4] & y__h5044 ;
  assign x__h5419 = tmp_exp[6] ^ y__h5422 ;
  assign x__h5477 = tmp_exp[5] & y__h5233 ;
  assign x__h5608 = tmp_exp[7] ^ y__h5611 ;
  assign x__h5666 = tmp_exp[6] & y__h5422 ;
  assign x__h6316 =
	     { x__h16719 ^ y__h16720,
	       x__h16825 ^ y__h16528,
	       temp_s_66_BIT_47_91_XOR_temp_c_68_BIT_47_92_94_ETC___d553 } ;
  assign x__h7754 = temp_s[1] & temp_c[1] ;
  assign x__h7801 = temp_s[1] ^ temp_c[1] ;
  assign x__h7946 = temp_s[2] & temp_c[2] ;
  assign x__h7993 = temp_s[2] ^ temp_c[2] ;
  assign x__h8138 = temp_s[3] & temp_c[3] ;
  assign x__h8185 = temp_s[3] ^ temp_c[3] ;
  assign x__h8330 = temp_s[4] & temp_c[4] ;
  assign x__h8377 = temp_s[4] ^ temp_c[4] ;
  assign x__h8522 = temp_s[5] & temp_c[5] ;
  assign x__h8569 = temp_s[5] ^ temp_c[5] ;
  assign x__h8714 = temp_s[6] & temp_c[6] ;
  assign x__h8761 = temp_s[6] ^ temp_c[6] ;
  assign x__h8906 = temp_s[7] & temp_c[7] ;
  assign x__h8953 = temp_s[7] ^ temp_c[7] ;
  assign x__h9098 = temp_s[8] & temp_c[8] ;
  assign x__h9145 = temp_s[8] ^ temp_c[8] ;
  assign x__h9290 = temp_s[9] & temp_c[9] ;
  assign x__h9337 = temp_s[9] ^ temp_c[9] ;
  assign x__h9482 = temp_s[10] & temp_c[10] ;
  assign x__h9529 = temp_s[10] ^ temp_c[10] ;
  assign x__h9674 = temp_s[11] & temp_c[11] ;
  assign x__h9721 = temp_s[11] ^ temp_c[11] ;
  assign x__h9866 = temp_s[12] & temp_c[12] ;
  assign x__h9913 = temp_s[12] ^ temp_c[12] ;
  assign y__h10000 = x__h10058 | y__h10059 ;
  assign y__h10059 = x__h10105 & y__h9808 ;
  assign y__h10192 = x__h10250 | y__h10251 ;
  assign y__h10251 = x__h10297 & y__h10000 ;
  assign y__h10384 = x__h10442 | y__h10443 ;
  assign y__h10443 = x__h10489 & y__h10192 ;
  assign y__h10576 = x__h10634 | y__h10635 ;
  assign y__h10635 = x__h10681 & y__h10384 ;
  assign y__h10768 = x__h10826 | y__h10827 ;
  assign y__h10827 = x__h10873 & y__h10576 ;
  assign y__h10960 = x__h11018 | y__h11019 ;
  assign y__h11019 = x__h11065 & y__h10768 ;
  assign y__h11152 = x__h11210 | y__h11211 ;
  assign y__h11211 = x__h11257 & y__h10960 ;
  assign y__h11344 = x__h11402 | y__h11403 ;
  assign y__h11403 = x__h11449 & y__h11152 ;
  assign y__h11536 = x__h11594 | y__h11595 ;
  assign y__h11595 = x__h11641 & y__h11344 ;
  assign y__h11728 = x__h11786 | y__h11787 ;
  assign y__h11787 = x__h11833 & y__h11536 ;
  assign y__h11920 = x__h11978 | y__h11979 ;
  assign y__h11979 = x__h12025 & y__h11728 ;
  assign y__h12112 = x__h12170 | y__h12171 ;
  assign y__h12171 = x__h12217 & y__h11920 ;
  assign y__h12304 = x__h12362 | y__h12363 ;
  assign y__h12363 = x__h12409 & y__h12112 ;
  assign y__h12496 = x__h12554 | y__h12555 ;
  assign y__h12555 = x__h12601 & y__h12304 ;
  assign y__h12688 = x__h12746 | y__h12747 ;
  assign y__h12747 = x__h12793 & y__h12496 ;
  assign y__h12880 = x__h12938 | y__h12939 ;
  assign y__h12939 = x__h12985 & y__h12688 ;
  assign y__h13072 = x__h13130 | y__h13131 ;
  assign y__h13131 = x__h13177 & y__h12880 ;
  assign y__h13264 = x__h13322 | y__h13323 ;
  assign y__h13323 = x__h13369 & y__h13072 ;
  assign y__h13456 = x__h13514 | y__h13515 ;
  assign y__h13515 = x__h13561 & y__h13264 ;
  assign y__h13648 = x__h13706 | y__h13707 ;
  assign y__h13707 = x__h13753 & y__h13456 ;
  assign y__h13840 = x__h13898 | y__h13899 ;
  assign y__h13899 = x__h13945 & y__h13648 ;
  assign y__h14032 = x__h14090 | y__h14091 ;
  assign y__h14091 = x__h14137 & y__h13840 ;
  assign y__h14224 = x__h14282 | y__h14283 ;
  assign y__h14283 = x__h14329 & y__h14032 ;
  assign y__h14416 = x__h14474 | y__h14475 ;
  assign y__h14475 = x__h14521 & y__h14224 ;
  assign y__h14608 = x__h14666 | y__h14667 ;
  assign y__h14667 = x__h14713 & y__h14416 ;
  assign y__h14800 = x__h14858 | y__h14859 ;
  assign y__h14859 = x__h14905 & y__h14608 ;
  assign y__h14992 = x__h15050 | y__h15051 ;
  assign y__h15051 = x__h15097 & y__h14800 ;
  assign y__h15184 = x__h15242 | y__h15243 ;
  assign y__h15243 = x__h15289 & y__h14992 ;
  assign y__h15376 = x__h15434 | y__h15435 ;
  assign y__h15435 = x__h15481 & y__h15184 ;
  assign y__h15568 = x__h15626 | y__h15627 ;
  assign y__h15627 = x__h15673 & y__h15376 ;
  assign y__h15760 = x__h15818 | y__h15819 ;
  assign y__h15819 = x__h15865 & y__h15568 ;
  assign y__h15952 = x__h16010 | y__h16011 ;
  assign y__h16011 = x__h16057 & y__h15760 ;
  assign y__h16144 = x__h16202 | y__h16203 ;
  assign y__h16203 = x__h16249 & y__h15952 ;
  assign y__h16336 = x__h16394 | y__h16395 ;
  assign y__h16395 = x__h16441 & y__h16144 ;
  assign y__h16528 = x__h16586 | y__h16587 ;
  assign y__h16587 = x__h16633 & y__h16336 ;
  assign y__h16720 = x__h16778 | y__h16779 ;
  assign y__h16779 = x__h16825 & y__h16528 ;
  assign y__h19561 = temp_c[1] & y__h19663 ;
  assign y__h19663 = ~temp_c[0] ;
  assign y__h19747 = temp_c[2] & y__h19561 ;
  assign y__h19933 = temp_c[3] & y__h19747 ;
  assign y__h20119 = temp_c[4] & y__h19933 ;
  assign y__h20305 = temp_c[5] & y__h20119 ;
  assign y__h20491 = temp_c[6] & y__h20305 ;
  assign y__h20677 = temp_c[7] & y__h20491 ;
  assign y__h20863 = temp_c[8] & y__h20677 ;
  assign y__h21049 = temp_c[9] & y__h20863 ;
  assign y__h21235 = temp_c[10] & y__h21049 ;
  assign y__h21421 = temp_c[11] & y__h21235 ;
  assign y__h21607 = temp_c[12] & y__h21421 ;
  assign y__h21793 = temp_c[13] & y__h21607 ;
  assign y__h21979 = temp_c[14] & y__h21793 ;
  assign y__h22165 = temp_c[15] & y__h21979 ;
  assign y__h22351 = temp_c[16] & y__h22165 ;
  assign y__h22537 = temp_c[17] & y__h22351 ;
  assign y__h22723 = temp_c[18] & y__h22537 ;
  assign y__h22909 = temp_c[19] & y__h22723 ;
  assign y__h23095 = temp_c[20] & y__h22909 ;
  assign y__h23281 = temp_c[21] & y__h23095 ;
  assign y__h23467 = temp_c[22] & y__h23281 ;
  assign y__h23653 = temp_c[23] & y__h23467 ;
  assign y__h23839 = temp_c[24] & y__h23653 ;
  assign y__h24025 = temp_c[25] & y__h23839 ;
  assign y__h24211 = temp_c[26] & y__h24025 ;
  assign y__h24397 = temp_c[27] & y__h24211 ;
  assign y__h24583 = temp_c[28] & y__h24397 ;
  assign y__h24769 = temp_c[29] & y__h24583 ;
  assign y__h24955 = temp_c[30] & y__h24769 ;
  assign y__h25141 = temp_c[31] & y__h24955 ;
  assign y__h25327 = temp_c[32] & y__h25141 ;
  assign y__h25513 = temp_c[33] & y__h25327 ;
  assign y__h25699 = temp_c[34] & y__h25513 ;
  assign y__h25885 = temp_c[35] & y__h25699 ;
  assign y__h26071 = temp_c[36] & y__h25885 ;
  assign y__h26257 = temp_c[37] & y__h26071 ;
  assign y__h26443 = temp_c[38] & y__h26257 ;
  assign y__h26629 = temp_c[39] & y__h26443 ;
  assign y__h26815 = temp_c[40] & y__h26629 ;
  assign y__h27001 = temp_c[41] & y__h26815 ;
  assign y__h27187 = temp_c[42] & y__h27001 ;
  assign y__h27373 = temp_c[43] & y__h27187 ;
  assign y__h27559 = temp_c[44] & y__h27373 ;
  assign y__h27745 = temp_c[45] & y__h27559 ;
  assign y__h27931 = temp_c[46] & y__h27745 ;
  assign y__h28117 = temp_c[47] & y__h27931 ;
  assign y__h28303 = temp_c[48] & y__h28117 ;
  assign y__h28513 = temp_s[0] & IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0] ;
  assign y__h28515 = temp_c[1] ^ y__h19663 ;
  assign y__h28641 = x__h28698 | y__h28699 ;
  assign y__h28643 = temp_c[2] ^ y__h19561 ;
  assign y__h28699 = x__h28512 & y__h28513 ;
  assign y__h28830 = x__h28887 | y__h28888 ;
  assign y__h28832 = temp_c[3] ^ y__h19747 ;
  assign y__h28888 = x__h28640 & y__h28641 ;
  assign y__h29019 = x__h29076 | y__h29077 ;
  assign y__h29021 = temp_c[4] ^ y__h19933 ;
  assign y__h29077 = x__h28829 & y__h28830 ;
  assign y__h29208 = x__h29265 | y__h29266 ;
  assign y__h29210 = temp_c[5] ^ y__h20119 ;
  assign y__h29266 = x__h29018 & y__h29019 ;
  assign y__h29397 = x__h29454 | y__h29455 ;
  assign y__h29399 = temp_c[6] ^ y__h20305 ;
  assign y__h29455 = x__h29207 & y__h29208 ;
  assign y__h29586 = x__h29643 | y__h29644 ;
  assign y__h29588 = temp_c[7] ^ y__h20491 ;
  assign y__h29644 = x__h29396 & y__h29397 ;
  assign y__h29775 = x__h29832 | y__h29833 ;
  assign y__h29777 = temp_c[8] ^ y__h20677 ;
  assign y__h29833 = x__h29585 & y__h29586 ;
  assign y__h29964 = x__h30021 | y__h30022 ;
  assign y__h29966 = temp_c[9] ^ y__h20863 ;
  assign y__h30022 = x__h29774 & y__h29775 ;
  assign y__h30153 = x__h30210 | y__h30211 ;
  assign y__h30155 = temp_c[10] ^ y__h21049 ;
  assign y__h30211 = x__h29963 & y__h29964 ;
  assign y__h30342 = x__h30399 | y__h30400 ;
  assign y__h30344 = temp_c[11] ^ y__h21235 ;
  assign y__h30400 = x__h30152 & y__h30153 ;
  assign y__h30531 = x__h30588 | y__h30589 ;
  assign y__h30533 = temp_c[12] ^ y__h21421 ;
  assign y__h30589 = x__h30341 & y__h30342 ;
  assign y__h30720 = x__h30777 | y__h30778 ;
  assign y__h30722 = temp_c[13] ^ y__h21607 ;
  assign y__h30778 = x__h30530 & y__h30531 ;
  assign y__h30909 = x__h30966 | y__h30967 ;
  assign y__h30911 = temp_c[14] ^ y__h21793 ;
  assign y__h30967 = x__h30719 & y__h30720 ;
  assign y__h31098 = x__h31155 | y__h31156 ;
  assign y__h31100 = temp_c[15] ^ y__h21979 ;
  assign y__h31156 = x__h30908 & y__h30909 ;
  assign y__h31287 = x__h31344 | y__h31345 ;
  assign y__h31289 = temp_c[16] ^ y__h22165 ;
  assign y__h31345 = x__h31097 & y__h31098 ;
  assign y__h31476 = x__h31533 | y__h31534 ;
  assign y__h31478 = temp_c[17] ^ y__h22351 ;
  assign y__h31534 = x__h31286 & y__h31287 ;
  assign y__h31665 = x__h31722 | y__h31723 ;
  assign y__h31667 = temp_c[18] ^ y__h22537 ;
  assign y__h31723 = x__h31475 & y__h31476 ;
  assign y__h31854 = x__h31911 | y__h31912 ;
  assign y__h31856 = temp_c[19] ^ y__h22723 ;
  assign y__h31912 = x__h31664 & y__h31665 ;
  assign y__h32043 = x__h32100 | y__h32101 ;
  assign y__h32045 = temp_c[20] ^ y__h22909 ;
  assign y__h32101 = x__h31853 & y__h31854 ;
  assign y__h32232 = x__h32289 | y__h32290 ;
  assign y__h32234 = temp_c[21] ^ y__h23095 ;
  assign y__h32290 = x__h32042 & y__h32043 ;
  assign y__h32421 = x__h32478 | y__h32479 ;
  assign y__h32423 = temp_c[22] ^ y__h23281 ;
  assign y__h32479 = x__h32231 & y__h32232 ;
  assign y__h32610 = x__h32667 | y__h32668 ;
  assign y__h32612 = temp_c[23] ^ y__h23467 ;
  assign y__h32668 = x__h32420 & y__h32421 ;
  assign y__h32799 = x__h32856 | y__h32857 ;
  assign y__h32801 = temp_c[24] ^ y__h23653 ;
  assign y__h32857 = x__h32609 & y__h32610 ;
  assign y__h32988 = x__h33045 | y__h33046 ;
  assign y__h32990 = temp_c[25] ^ y__h23839 ;
  assign y__h33046 = x__h32798 & y__h32799 ;
  assign y__h33177 = x__h33234 | y__h33235 ;
  assign y__h33179 = temp_c[26] ^ y__h24025 ;
  assign y__h33235 = x__h32987 & y__h32988 ;
  assign y__h33366 = x__h33423 | y__h33424 ;
  assign y__h33368 = temp_c[27] ^ y__h24211 ;
  assign y__h33424 = x__h33176 & y__h33177 ;
  assign y__h33555 = x__h33612 | y__h33613 ;
  assign y__h33557 = temp_c[28] ^ y__h24397 ;
  assign y__h33613 = x__h33365 & y__h33366 ;
  assign y__h33744 = x__h33801 | y__h33802 ;
  assign y__h33746 = temp_c[29] ^ y__h24583 ;
  assign y__h33802 = x__h33554 & y__h33555 ;
  assign y__h33933 = x__h33990 | y__h33991 ;
  assign y__h33935 = temp_c[30] ^ y__h24769 ;
  assign y__h3395 = !c[24] & IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h33991 = x__h33743 & y__h33744 ;
  assign y__h34122 = x__h34179 | y__h34180 ;
  assign y__h34124 = temp_c[31] ^ y__h24955 ;
  assign y__h34180 = x__h33932 & y__h33933 ;
  assign y__h34311 = x__h34368 | y__h34369 ;
  assign y__h34313 = temp_c[32] ^ y__h25141 ;
  assign y__h34369 = x__h34121 & y__h34122 ;
  assign y__h34500 = x__h34557 | y__h34558 ;
  assign y__h34502 = temp_c[33] ^ y__h25327 ;
  assign y__h34558 = x__h34310 & y__h34311 ;
  assign y__h34689 = x__h34746 | y__h34747 ;
  assign y__h34691 = temp_c[34] ^ y__h25513 ;
  assign y__h34747 = x__h34499 & y__h34500 ;
  assign y__h34878 = x__h34935 | y__h34936 ;
  assign y__h34880 = temp_c[35] ^ y__h25699 ;
  assign y__h34936 = x__h34688 & y__h34689 ;
  assign y__h35067 = x__h35124 | y__h35125 ;
  assign y__h35069 = temp_c[36] ^ y__h25885 ;
  assign y__h35125 = x__h34877 & y__h34878 ;
  assign y__h35256 = x__h35313 | y__h35314 ;
  assign y__h35258 = temp_c[37] ^ y__h26071 ;
  assign y__h35314 = x__h35066 & y__h35067 ;
  assign y__h35445 = x__h35502 | y__h35503 ;
  assign y__h35447 = temp_c[38] ^ y__h26257 ;
  assign y__h35503 = x__h35255 & y__h35256 ;
  assign y__h35634 = x__h35691 | y__h35692 ;
  assign y__h35636 = temp_c[39] ^ y__h26443 ;
  assign y__h35692 = x__h35444 & y__h35445 ;
  assign y__h3581 = !c[25] & y__h3395 ;
  assign y__h35823 = x__h35880 | y__h35881 ;
  assign y__h35825 = temp_c[40] ^ y__h26629 ;
  assign y__h35881 = x__h35633 & y__h35634 ;
  assign y__h36012 = x__h36069 | y__h36070 ;
  assign y__h36014 = temp_c[41] ^ y__h26815 ;
  assign y__h36070 = x__h35822 & y__h35823 ;
  assign y__h36201 = x__h36258 | y__h36259 ;
  assign y__h36203 = temp_c[42] ^ y__h27001 ;
  assign y__h36259 = x__h36011 & y__h36012 ;
  assign y__h36390 = x__h36447 | y__h36448 ;
  assign y__h36392 = temp_c[43] ^ y__h27187 ;
  assign y__h36448 = x__h36200 & y__h36201 ;
  assign y__h36579 = x__h36636 | y__h36637 ;
  assign y__h36581 = temp_c[44] ^ y__h27373 ;
  assign y__h36637 = x__h36389 & y__h36390 ;
  assign y__h36768 = x__h36825 | y__h36826 ;
  assign y__h36770 = temp_c[45] ^ y__h27559 ;
  assign y__h36826 = x__h36578 & y__h36579 ;
  assign y__h36957 = x__h37014 | y__h37015 ;
  assign y__h36959 = temp_c[46] ^ y__h27745 ;
  assign y__h37015 = x__h36767 & y__h36768 ;
  assign y__h37146 = x__h37203 | y__h37204 ;
  assign y__h37148 = temp_c[47] ^ y__h27931 ;
  assign y__h37204 = x__h36956 & y__h36957 ;
  assign y__h37335 = x__h37392 | y__h37393 ;
  assign y__h37337 = temp_c[48] ^ y__h28117 ;
  assign y__h37393 = x__h37145 & y__h37146 ;
  assign y__h37524 = x__h37581 | y__h37582 ;
  assign y__h37526 = temp_c[49] ^ y__h28303 ;
  assign y__h37582 = x__h37334 & y__h37335 ;
  assign y__h3767 = !c[26] & y__h3581 ;
  assign y__h38332 = tmp_exp[1] | y__h38391 ;
  assign y__h38391 = x__h38436 & tmp_exp[0] ;
  assign y__h38523 = tmp_exp[2] | y__h38582 ;
  assign y__h38582 = x__h38627 & y__h38332 ;
  assign y__h38714 = tmp_exp[3] | y__h38773 ;
  assign y__h38773 = x__h38818 & y__h38523 ;
  assign y__h38905 = tmp_exp[4] | y__h38964 ;
  assign y__h38964 = x__h39009 & y__h38714 ;
  assign y__h39096 = tmp_exp[5] | y__h39155 ;
  assign y__h39155 = x__h39200 & y__h38905 ;
  assign y__h39287 = tmp_exp[6] | y__h39346 ;
  assign y__h39346 = x__h39391 & y__h39096 ;
  assign y__h3953 = !c[27] & y__h3767 ;
  assign y__h4139 = !c[28] & y__h3953 ;
  assign y__h42610 = temp_man[27] & temp_man[26] ;
  assign y__h42796 = temp_man[28] & y__h42610 ;
  assign y__h42982 = temp_man[29] & y__h42796 ;
  assign y__h43168 = temp_man[30] & y__h42982 ;
  assign y__h4325 = !c[29] & y__h4139 ;
  assign y__h43354 = temp_man[31] & y__h43168 ;
  assign y__h43540 = temp_man[32] & y__h43354 ;
  assign y__h43726 = temp_man[33] & y__h43540 ;
  assign y__h43912 = temp_man[34] & y__h43726 ;
  assign y__h44098 = temp_man[35] & y__h43912 ;
  assign y__h44284 = temp_man[36] & y__h44098 ;
  assign y__h44470 = temp_man[37] & y__h44284 ;
  assign y__h44656 = temp_man[38] & y__h44470 ;
  assign y__h44842 = temp_man[39] & y__h44656 ;
  assign y__h45028 = temp_man[40] & y__h44842 ;
  assign y__h45214 = temp_man[41] & y__h45028 ;
  assign y__h4536 =
	     tmp_exp[0] &
	     IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0] ;
  assign y__h4538 = !c[24] ^ IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h45400 = temp_man[42] & y__h45214 ;
  assign y__h45586 = temp_man[43] & y__h45400 ;
  assign y__h45772 = temp_man[44] & y__h45586 ;
  assign y__h45958 = temp_man[45] & y__h45772 ;
  assign y__h46144 = temp_man[46] & y__h45958 ;
  assign y__h46330 = temp_man[47] & y__h46144 ;
  assign y__h46516 = temp_man[48] & y__h46330 ;
  assign y__h4664 = x__h4721 | y__h4722 ;
  assign y__h4666 = !c[25] ^ y__h3395 ;
  assign y__h4722 = x__h4535 & y__h4536 ;
  assign y__h4853 = x__h4910 | y__h4911 ;
  assign y__h4855 = !c[26] ^ y__h3581 ;
  assign y__h4911 = x__h4663 & y__h4664 ;
  assign y__h5042 = x__h5099 | y__h5100 ;
  assign y__h5044 = !c[27] ^ y__h3767 ;
  assign y__h5100 = x__h4852 & y__h4853 ;
  assign y__h51848 = x__h51721 & IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] ;
  assign y__h52034 = x__h51847 & y__h51848 ;
  assign y__h52220 = x__h52033 & y__h52034 ;
  assign y__h5231 = x__h5288 | y__h5289 ;
  assign y__h5233 = !c[28] ^ y__h3953 ;
  assign y__h52406 = x__h52219 & y__h52220 ;
  assign y__h52592 = x__h52405 & y__h52406 ;
  assign y__h52778 = x__h52591 & y__h52592 ;
  assign y__h5289 = x__h5041 & y__h5042 ;
  assign y__h5420 = x__h5477 | y__h5478 ;
  assign y__h5422 = !c[29] ^ y__h4139 ;
  assign y__h54444 = temp_man[26] & temp_man[25] ;
  assign y__h54630 = temp_man[27] & y__h54444 ;
  assign y__h5478 = x__h5230 & y__h5231 ;
  assign y__h54816 = temp_man[28] & y__h54630 ;
  assign y__h55002 = temp_man[29] & y__h54816 ;
  assign y__h55188 = temp_man[30] & y__h55002 ;
  assign y__h55374 = temp_man[31] & y__h55188 ;
  assign y__h55560 = temp_man[32] & y__h55374 ;
  assign y__h55746 = temp_man[33] & y__h55560 ;
  assign y__h55932 = temp_man[34] & y__h55746 ;
  assign y__h5609 = x__h5666 | y__h5667 ;
  assign y__h5611 = x__h4324 ^ y__h4325 ;
  assign y__h56118 = temp_man[35] & y__h55932 ;
  assign y__h56304 = temp_man[36] & y__h56118 ;
  assign y__h56490 = temp_man[37] & y__h56304 ;
  assign y__h5667 = x__h5419 & y__h5420 ;
  assign y__h56676 = temp_man[38] & y__h56490 ;
  assign y__h56862 = temp_man[39] & y__h56676 ;
  assign y__h57048 = temp_man[40] & y__h56862 ;
  assign y__h57234 = temp_man[41] & y__h57048 ;
  assign y__h57420 = temp_man[42] & y__h57234 ;
  assign y__h57606 = temp_man[43] & y__h57420 ;
  assign y__h57792 = temp_man[44] & y__h57606 ;
  assign y__h57978 = temp_man[45] & y__h57792 ;
  assign y__h58164 = temp_man[46] & y__h57978 ;
  assign y__h58350 = temp_man[47] & y__h58164 ;
  assign y__h58536 = temp_man[48] & y__h58350 ;
  assign y__h63687 = tmp_exp[1] & tmp_exp[0] ;
  assign y__h63876 = tmp_exp[2] & y__h63687 ;
  assign y__h64065 = tmp_exp[3] & y__h63876 ;
  assign y__h64254 = tmp_exp[4] & y__h64065 ;
  assign y__h64443 = tmp_exp[5] & y__h64254 ;
  assign y__h64632 = tmp_exp[6] & y__h64443 ;
  assign y__h7696 = x__h7754 | y__h7755 ;
  assign y__h7755 = x__h7801 & y__h7802 ;
  assign y__h7802 = temp_s[0] & temp_c[0] ;
  assign y__h7888 = x__h7946 | y__h7947 ;
  assign y__h7947 = x__h7993 & y__h7696 ;
  assign y__h8080 = x__h8138 | y__h8139 ;
  assign y__h8139 = x__h8185 & y__h7888 ;
  assign y__h8272 = x__h8330 | y__h8331 ;
  assign y__h8331 = x__h8377 & y__h8080 ;
  assign y__h8464 = x__h8522 | y__h8523 ;
  assign y__h8523 = x__h8569 & y__h8272 ;
  assign y__h8656 = x__h8714 | y__h8715 ;
  assign y__h8715 = x__h8761 & y__h8464 ;
  assign y__h8848 = x__h8906 | y__h8907 ;
  assign y__h8907 = x__h8953 & y__h8656 ;
  assign y__h9040 = x__h9098 | y__h9099 ;
  assign y__h9099 = x__h9145 & y__h8848 ;
  assign y__h9232 = x__h9290 | y__h9291 ;
  assign y__h9291 = x__h9337 & y__h9040 ;
  assign y__h9424 = x__h9482 | y__h9483 ;
  assign y__h9483 = x__h9529 & y__h9232 ;
  assign y__h9616 = x__h9674 | y__h9675 ;
  assign y__h9675 = x__h9721 & y__h9424 ;
  assign y__h9808 = x__h9866 | y__h9867 ;
  assign y__h9867 = x__h9913 & y__h9616 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        add_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	add_or_sub <= `BSV_ASSIGNMENT_DELAY 2'b0;
	addition_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	adj_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	align_man_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c <= `BSV_ASSIGNMENT_DELAY 32'd0;
	calc_fraction_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cmp_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	end_result <= `BSV_ASSIGNMENT_DELAY 32'd0;
	exp_diff <= `BSV_ASSIGNMENT_DELAY 8'd0;
	exp_mantissa <= `BSV_ASSIGNMENT_DELAY 31'd0;
	exp_res <= `BSV_ASSIGNMENT_DELAY 8'd0;
	get_r <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_c <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_s <= `BSV_ASSIGNMENT_DELAY 1'd0;
	handle_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	input_no <= `BSV_ASSIGNMENT_DELAY 1'b0;
	input_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_res <= `BSV_ASSIGNMENT_DELAY 23'd0;
	pack_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	result_concatenated <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sign_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	swap_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	temp_c <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_man <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_s <= `BSV_ASSIGNMENT_DELAY 50'd0;
	tmp_exp <= `BSV_ASSIGNMENT_DELAY 8'd0;
	tmp_res <= `BSV_ASSIGNMENT_DELAY 24'd0;
	tmp_sign <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (add_done_EN) add_done <= `BSV_ASSIGNMENT_DELAY add_done_D_IN;
	if (add_or_sub_EN)
	  add_or_sub <= `BSV_ASSIGNMENT_DELAY add_or_sub_D_IN;
	if (addition_start_EN)
	  addition_start <= `BSV_ASSIGNMENT_DELAY addition_start_D_IN;
	if (adj_exp_done_EN)
	  adj_exp_done <= `BSV_ASSIGNMENT_DELAY adj_exp_done_D_IN;
	if (align_man_done_EN)
	  align_man_done <= `BSV_ASSIGNMENT_DELAY align_man_done_D_IN;
	if (c_EN) c <= `BSV_ASSIGNMENT_DELAY c_D_IN;
	if (calc_fraction_done_EN)
	  calc_fraction_done <= `BSV_ASSIGNMENT_DELAY calc_fraction_done_D_IN;
	if (cmp_exp_done_EN)
	  cmp_exp_done <= `BSV_ASSIGNMENT_DELAY cmp_exp_done_D_IN;
	if (end_result_EN)
	  end_result <= `BSV_ASSIGNMENT_DELAY end_result_D_IN;
	if (exp_diff_EN) exp_diff <= `BSV_ASSIGNMENT_DELAY exp_diff_D_IN;
	if (exp_mantissa_EN)
	  exp_mantissa <= `BSV_ASSIGNMENT_DELAY exp_mantissa_D_IN;
	if (exp_res_EN) exp_res <= `BSV_ASSIGNMENT_DELAY exp_res_D_IN;
	if (get_r_EN) get_r <= `BSV_ASSIGNMENT_DELAY get_r_D_IN;
	if (got_c_EN) got_c <= `BSV_ASSIGNMENT_DELAY got_c_D_IN;
	if (got_s_EN) got_s <= `BSV_ASSIGNMENT_DELAY got_s_D_IN;
	if (handle_zero_EN)
	  handle_zero <= `BSV_ASSIGNMENT_DELAY handle_zero_D_IN;
	if (input_no_EN) input_no <= `BSV_ASSIGNMENT_DELAY input_no_D_IN;
	if (input_zero_EN)
	  input_zero <= `BSV_ASSIGNMENT_DELAY input_zero_D_IN;
	if (mantissa_done_EN)
	  mantissa_done <= `BSV_ASSIGNMENT_DELAY mantissa_done_D_IN;
	if (mantissa_res_EN)
	  mantissa_res <= `BSV_ASSIGNMENT_DELAY mantissa_res_D_IN;
	if (pack_done_EN) pack_done <= `BSV_ASSIGNMENT_DELAY pack_done_D_IN;
	if (result_concatenated_EN)
	  result_concatenated <= `BSV_ASSIGNMENT_DELAY
	      result_concatenated_D_IN;
	if (s_EN) s <= `BSV_ASSIGNMENT_DELAY s_D_IN;
	if (sign_done_EN) sign_done <= `BSV_ASSIGNMENT_DELAY sign_done_D_IN;
	if (swap_done_EN) swap_done <= `BSV_ASSIGNMENT_DELAY swap_done_D_IN;
	if (temp_c_EN) temp_c <= `BSV_ASSIGNMENT_DELAY temp_c_D_IN;
	if (temp_man_EN) temp_man <= `BSV_ASSIGNMENT_DELAY temp_man_D_IN;
	if (temp_s_EN) temp_s <= `BSV_ASSIGNMENT_DELAY temp_s_D_IN;
	if (tmp_exp_EN) tmp_exp <= `BSV_ASSIGNMENT_DELAY tmp_exp_D_IN;
	if (tmp_res_EN) tmp_res <= `BSV_ASSIGNMENT_DELAY tmp_res_D_IN;
	if (tmp_sign_EN) tmp_sign <= `BSV_ASSIGNMENT_DELAY tmp_sign_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    add_done = 1'h0;
    add_or_sub = 2'h2;
    addition_start = 1'h0;
    adj_exp_done = 1'h0;
    align_man_done = 1'h0;
    c = 32'hAAAAAAAA;
    calc_fraction_done = 1'h0;
    cmp_exp_done = 1'h0;
    end_result = 32'hAAAAAAAA;
    exp_diff = 8'hAA;
    exp_mantissa = 31'h2AAAAAAA;
    exp_res = 8'hAA;
    get_r = 1'h0;
    got_c = 1'h0;
    got_s = 1'h0;
    handle_zero = 1'h0;
    input_no = 1'h0;
    input_zero = 1'h0;
    mantissa_done = 1'h0;
    mantissa_res = 23'h2AAAAA;
    pack_done = 1'h0;
    result_concatenated = 1'h0;
    s = 32'hAAAAAAAA;
    sign_done = 1'h0;
    swap_done = 1'h0;
    temp_c = 50'h2AAAAAAAAAAAA;
    temp_man = 50'h2AAAAAAAAAAAA;
    temp_s = 50'h2AAAAAAAAAAAA;
    tmp_exp = 8'hAA;
    tmp_res = 24'hAAAAAA;
    tmp_sign = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	begin
	  v__h1692 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	$display(v__h1692, " After Swapping s: %b c: %b", s, c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5887 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5887, "i s_mantissa new %b", temp_s);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5935 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5935, "i c_mantissa new %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h5985 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h5985, "i Exponent difference %d", exp_diff);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	begin
	  v__h6239 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	$display(v__h6239, " shifted mantissa of c %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	begin
	  v__h16914 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	$display(v__h16914, " Adding the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	begin
	  v__h37715 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	$display(v__h37715, " Subtracting the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	begin
	  v__h37840 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	$display(v__h37840, " calculated mantissa c %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	begin
	  v__h39512 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	$display(v__h39512, " mantissa: %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	begin
	  v__h65029 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	$display(v__h65029,
		 " End Result sign:%b exp: %b mantissa: %b ",
		 tmp_sign,
		 exp_mantissa[30:23],
		 exp_mantissa[22:0]);
  end
  // synopsys translate_on
endmodule  // mkUnpipelined_float_add

