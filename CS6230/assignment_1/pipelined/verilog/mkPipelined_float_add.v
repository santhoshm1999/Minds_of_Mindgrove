//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Tue Nov 26 01:07:28 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inp_s                  O     1
// RDY_get_inp_c                  O     1
// get_result                     O    32
// RDY_get_result                 O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inp_s_inp_S                I    32
// get_inp_c_inp_C                I    32
// EN_get_inp_s                   I     1
// EN_get_inp_c                   I     1
// EN_get_result                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPipelined_float_add(CLK,
			     RST_N,

			     get_inp_s_inp_S,
			     EN_get_inp_s,
			     RDY_get_inp_s,

			     get_inp_c_inp_C,
			     EN_get_inp_c,
			     RDY_get_inp_c,

			     EN_get_result,
			     get_result,
			     RDY_get_result);
  input  CLK;
  input  RST_N;

  // action method get_inp_s
  input  [31 : 0] get_inp_s_inp_S;
  input  EN_get_inp_s;
  output RDY_get_inp_s;

  // action method get_inp_c
  input  [31 : 0] get_inp_c_inp_C;
  input  EN_get_inp_c;
  output RDY_get_inp_c;

  // actionvalue method get_result
  input  EN_get_result;
  output [31 : 0] get_result;
  output RDY_get_result;

  // signals for module outputs
  wire [31 : 0] get_result;
  wire RDY_get_inp_c, RDY_get_inp_s, RDY_get_result;

  // inlined wires
  wire [32 : 0] fifo_add_rv_port0__write_1,
		fifo_add_rv_port1__read,
		fifo_add_rv_port1__write_1,
		fifo_add_rv_port2__read,
		fifo_c_rv_port1__write_1,
		fifo_c_rv_port2__read,
		fifo_s_rv_port1__write_1,
		fifo_s_rv_port2__read;
  wire fifo_add_rv_EN_port1__write;

  // register add_done
  reg add_done;
  wire add_done_D_IN, add_done_EN;

  // register add_or_sub
  reg [1 : 0] add_or_sub;
  wire [1 : 0] add_or_sub_D_IN;
  wire add_or_sub_EN;

  // register add_start
  reg add_start;
  wire add_start_D_IN, add_start_EN;

  // register addition_start
  reg addition_start;
  wire addition_start_D_IN, addition_start_EN;

  // register adj_exp_done
  reg adj_exp_done;
  wire adj_exp_done_D_IN, adj_exp_done_EN;

  // register align_man_done
  reg align_man_done;
  wire align_man_done_D_IN, align_man_done_EN;

  // register c
  reg [31 : 0] c;
  wire [31 : 0] c_D_IN;
  wire c_EN;

  // register calc_fraction_done
  reg calc_fraction_done;
  wire calc_fraction_done_D_IN, calc_fraction_done_EN;

  // register cmp_exp_done
  reg cmp_exp_done;
  wire cmp_exp_done_D_IN, cmp_exp_done_EN;

  // register end_result
  reg [31 : 0] end_result;
  wire [31 : 0] end_result_D_IN;
  wire end_result_EN;

  // register exp_diff
  reg [7 : 0] exp_diff;
  wire [7 : 0] exp_diff_D_IN;
  wire exp_diff_EN;

  // register exp_mantissa
  reg [30 : 0] exp_mantissa;
  wire [30 : 0] exp_mantissa_D_IN;
  wire exp_mantissa_EN;

  // register exp_res
  reg [7 : 0] exp_res;
  wire [7 : 0] exp_res_D_IN;
  wire exp_res_EN;

  // register fifo_add_rv
  reg [32 : 0] fifo_add_rv;
  wire [32 : 0] fifo_add_rv_D_IN;
  wire fifo_add_rv_EN;

  // register fifo_c_rv
  reg [32 : 0] fifo_c_rv;
  wire [32 : 0] fifo_c_rv_D_IN;
  wire fifo_c_rv_EN;

  // register fifo_s_rv
  reg [32 : 0] fifo_s_rv;
  wire [32 : 0] fifo_s_rv_D_IN;
  wire fifo_s_rv_EN;

  // register get_r
  reg get_r;
  wire get_r_D_IN, get_r_EN;

  // register got_c
  reg got_c;
  wire got_c_D_IN, got_c_EN;

  // register got_s
  reg got_s;
  wire got_s_D_IN, got_s_EN;

  // register handle_zero
  reg handle_zero;
  wire handle_zero_D_IN, handle_zero_EN;

  // register input_no
  reg input_no;
  wire input_no_D_IN, input_no_EN;

  // register input_zero
  reg input_zero;
  wire input_zero_D_IN, input_zero_EN;

  // register mantissa_done
  reg mantissa_done;
  wire mantissa_done_D_IN, mantissa_done_EN;

  // register mantissa_res
  reg [22 : 0] mantissa_res;
  wire [22 : 0] mantissa_res_D_IN;
  wire mantissa_res_EN;

  // register pack_done
  reg pack_done;
  wire pack_done_D_IN, pack_done_EN;

  // register result_concatenated
  reg result_concatenated;
  wire result_concatenated_D_IN, result_concatenated_EN;

  // register s
  reg [31 : 0] s;
  wire [31 : 0] s_D_IN;
  wire s_EN;

  // register sign_done
  reg sign_done;
  wire sign_done_D_IN, sign_done_EN;

  // register swap_done
  reg swap_done;
  wire swap_done_D_IN, swap_done_EN;

  // register temp_c
  reg [49 : 0] temp_c;
  wire [49 : 0] temp_c_D_IN;
  wire temp_c_EN;

  // register temp_man
  reg [49 : 0] temp_man;
  wire [49 : 0] temp_man_D_IN;
  wire temp_man_EN;

  // register temp_s
  reg [49 : 0] temp_s;
  wire [49 : 0] temp_s_D_IN;
  wire temp_s_EN;

  // register tmp_exp
  reg [7 : 0] tmp_exp;
  wire [7 : 0] tmp_exp_D_IN;
  wire tmp_exp_EN;

  // register tmp_res
  reg [23 : 0] tmp_res;
  wire [23 : 0] tmp_res_D_IN;
  wire tmp_res_EN;

  // register tmp_sign
  reg tmp_sign;
  wire tmp_sign_D_IN, tmp_sign_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_add_or_sub_exp,
       CAN_FIRE_RL_rl_add_start,
       CAN_FIRE_RL_rl_adj_exp,
       CAN_FIRE_RL_rl_adj_mantissa,
       CAN_FIRE_RL_rl_align_exp,
       CAN_FIRE_RL_rl_assemble_result,
       CAN_FIRE_RL_rl_cmp_exp,
       CAN_FIRE_RL_rl_deassert_signals,
       CAN_FIRE_RL_rl_get_sign,
       CAN_FIRE_RL_rl_handle_zero_val,
       CAN_FIRE_RL_rl_swap,
       CAN_FIRE_get_inp_c,
       CAN_FIRE_get_inp_s,
       CAN_FIRE_get_result,
       WILL_FIRE_RL_rl_add_or_sub_exp,
       WILL_FIRE_RL_rl_add_start,
       WILL_FIRE_RL_rl_adj_exp,
       WILL_FIRE_RL_rl_adj_mantissa,
       WILL_FIRE_RL_rl_align_exp,
       WILL_FIRE_RL_rl_assemble_result,
       WILL_FIRE_RL_rl_cmp_exp,
       WILL_FIRE_RL_rl_deassert_signals,
       WILL_FIRE_RL_rl_get_sign,
       WILL_FIRE_RL_rl_handle_zero_val,
       WILL_FIRE_RL_rl_swap,
       WILL_FIRE_get_inp_c,
       WILL_FIRE_get_inp_s,
       WILL_FIRE_get_result;

  // inputs to muxes for submodule ports
  wire [49 : 0] MUX_temp_c_write_1__VAL_1,
		MUX_temp_c_write_1__VAL_2,
		MUX_temp_man_write_1__VAL_1,
		MUX_temp_man_write_1__VAL_2;
  wire [32 : 0] MUX_fifo_add_rv_port1__write_1__VAL_1,
		MUX_fifo_add_rv_port1__write_1__VAL_2;
  wire [7 : 0] MUX_tmp_exp_write_1__VAL_1;
  wire [1 : 0] MUX_add_or_sub_write_1__VAL_1;
  wire MUX_add_or_sub_write_1__SEL_2,
       MUX_adj_exp_done_write_1__SEL_1,
       MUX_c_write_1__SEL_1,
       MUX_input_zero_write_1__SEL_2,
       MUX_mantissa_done_write_1__SEL_1,
       MUX_mantissa_done_write_1__SEL_2,
       MUX_temp_man_write_1__SEL_1,
       MUX_temp_man_write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h2669;
  reg [31 : 0] v__h6844;
  reg [31 : 0] v__h6892;
  reg [31 : 0] v__h6942;
  reg [31 : 0] v__h7195;
  reg [31 : 0] v__h17868;
  reg [31 : 0] v__h38665;
  reg [31 : 0] v__h38789;
  reg [31 : 0] v__h42041;
  reg [31 : 0] v__h67550;
  // synopsys translate_on

  // remaining internal signals
  wire [49 : 0] IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6,
		IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5,
		IF_temp_c_BIT_0_THEN_1_ELSE_0__q3,
		IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9,
		IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8,
		x__h17939,
		x__h41988,
		x__h41999,
		x__h7272;
  wire [47 : 0] temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560,
		temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931;
  wire [45 : 0] temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559,
		temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930;
  wire [43 : 0] temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558,
		temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929;
  wire [41 : 0] temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557,
		temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928;
  wire [39 : 0] temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556,
		temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927;
  wire [37 : 0] temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555,
		temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926;
  wire [35 : 0] temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554,
		temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925;
  wire [33 : 0] temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553,
		temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924;
  wire [31 : 0] temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552,
		temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923;
  wire [30 : 0] IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224,
		IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140,
		IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139,
		IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223;
  wire [29 : 0] temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551,
		temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922;
  wire [27 : 0] temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550,
		temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921;
  wire [25 : 0] temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549,
		temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920;
  wire [23 : 0] temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548,
		temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919;
  wire [22 : 0] rounded_mantissa__h53991,
		rounded_mantissa__h65833,
		rounded_mantissa__h67409,
		rounded_mantissa__h67491;
  wire [21 : 0] temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547,
		temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918;
  wire [19 : 0] temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546,
		temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917;
  wire [17 : 0] temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545,
		temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916;
  wire [15 : 0] temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544,
		temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915;
  wire [13 : 0] temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543,
		temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914;
  wire [11 : 0] temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542,
		temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913;
  wire [9 : 0] temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912;
  wire [7 : 0] IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10,
	       IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4,
	       IF_c_BIT_23_THEN_0_ELSE_1__q1,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7,
	       _theResult___fst__h65834,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911;
  wire [6 : 0] tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088;
  wire [5 : 0] temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910,
	       tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162;
  wire [4 : 0] temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128,
	       tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087;
  wire [3 : 0] temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909,
	       tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161;
  wire [2 : 0] tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086;
  wire [1 : 0] temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908,
	       tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160;
  wire IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63,
       NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166,
       s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34,
       s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41,
       s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33,
       s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38,
       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195,
       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111,
       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
       temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
       tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953,
       x__h10052,
       x__h10099,
       x__h10244,
       x__h10291,
       x__h10436,
       x__h10483,
       x__h10628,
       x__h10675,
       x__h10820,
       x__h10867,
       x__h11012,
       x__h11059,
       x__h11204,
       x__h11251,
       x__h11396,
       x__h11443,
       x__h11588,
       x__h11635,
       x__h11780,
       x__h11827,
       x__h11972,
       x__h12019,
       x__h12164,
       x__h12211,
       x__h12356,
       x__h12403,
       x__h12548,
       x__h12595,
       x__h12740,
       x__h12787,
       x__h12932,
       x__h12979,
       x__h13124,
       x__h13171,
       x__h13316,
       x__h13363,
       x__h13508,
       x__h13555,
       x__h13700,
       x__h13747,
       x__h13892,
       x__h13939,
       x__h14084,
       x__h14131,
       x__h14276,
       x__h14323,
       x__h14468,
       x__h14515,
       x__h14660,
       x__h14707,
       x__h14852,
       x__h14899,
       x__h15044,
       x__h15091,
       x__h15236,
       x__h15283,
       x__h15428,
       x__h15475,
       x__h15620,
       x__h15667,
       x__h15812,
       x__h15859,
       x__h16004,
       x__h16051,
       x__h16196,
       x__h16243,
       x__h16388,
       x__h16435,
       x__h16580,
       x__h16627,
       x__h16772,
       x__h16819,
       x__h16964,
       x__h17011,
       x__h17156,
       x__h17203,
       x__h17348,
       x__h17395,
       x__h17540,
       x__h17587,
       x__h17673,
       x__h17732,
       x__h17779,
       x__h29462,
       x__h29590,
       x__h29648,
       x__h29779,
       x__h29837,
       x__h29968,
       x__h30026,
       x__h30157,
       x__h30215,
       x__h30346,
       x__h30404,
       x__h30535,
       x__h30593,
       x__h30724,
       x__h30782,
       x__h30913,
       x__h30971,
       x__h31102,
       x__h31160,
       x__h31291,
       x__h31349,
       x__h31480,
       x__h31538,
       x__h31669,
       x__h31727,
       x__h31858,
       x__h31916,
       x__h32047,
       x__h32105,
       x__h32236,
       x__h32294,
       x__h32425,
       x__h32483,
       x__h32614,
       x__h32672,
       x__h32803,
       x__h32861,
       x__h32992,
       x__h33050,
       x__h33181,
       x__h33239,
       x__h33370,
       x__h33428,
       x__h33559,
       x__h33617,
       x__h33748,
       x__h33806,
       x__h33937,
       x__h33995,
       x__h34126,
       x__h34184,
       x__h34315,
       x__h34373,
       x__h34504,
       x__h34562,
       x__h34693,
       x__h34751,
       x__h34882,
       x__h34940,
       x__h35071,
       x__h35129,
       x__h35260,
       x__h35318,
       x__h35449,
       x__h35507,
       x__h35638,
       x__h35696,
       x__h35827,
       x__h35885,
       x__h36016,
       x__h36074,
       x__h36205,
       x__h36263,
       x__h36394,
       x__h36452,
       x__h36583,
       x__h36641,
       x__h36772,
       x__h36830,
       x__h36961,
       x__h37019,
       x__h37150,
       x__h37208,
       x__h37339,
       x__h37397,
       x__h37528,
       x__h37586,
       x__h37717,
       x__h37775,
       x__h37906,
       x__h37964,
       x__h38095,
       x__h38153,
       x__h38284,
       x__h38342,
       x__h38473,
       x__h38531,
       x__h40954,
       x__h41145,
       x__h41336,
       x__h41527,
       x__h41718,
       x__h41804,
       x__h41909,
       x__h5282,
       x__h54254,
       x__h54380,
       x__h54566,
       x__h54752,
       x__h5493,
       x__h54938,
       x__h55124,
       x__h5621,
       x__h5679,
       x__h5810,
       x__h5868,
       x__h5999,
       x__h6057,
       x__h6188,
       x__h6246,
       x__h6377,
       x__h6435,
       x__h6566,
       x__h6624,
       x__h8708,
       x__h8755,
       x__h8900,
       x__h8947,
       x__h9092,
       x__h9139,
       x__h9284,
       x__h9331,
       x__h9476,
       x__h9523,
       x__h9668,
       x__h9715,
       x__h9860,
       x__h9907,
       y__h10053,
       y__h10186,
       y__h10245,
       y__h10378,
       y__h10437,
       y__h10570,
       y__h10629,
       y__h10762,
       y__h10821,
       y__h10954,
       y__h11013,
       y__h11146,
       y__h11205,
       y__h11338,
       y__h11397,
       y__h11530,
       y__h11589,
       y__h11722,
       y__h11781,
       y__h11914,
       y__h11973,
       y__h12106,
       y__h12165,
       y__h12298,
       y__h12357,
       y__h12490,
       y__h12549,
       y__h12682,
       y__h12741,
       y__h12874,
       y__h12933,
       y__h13066,
       y__h13125,
       y__h13258,
       y__h13317,
       y__h13450,
       y__h13509,
       y__h13642,
       y__h13701,
       y__h13834,
       y__h13893,
       y__h14026,
       y__h14085,
       y__h14218,
       y__h14277,
       y__h14410,
       y__h14469,
       y__h14602,
       y__h14661,
       y__h14794,
       y__h14853,
       y__h14986,
       y__h15045,
       y__h15178,
       y__h15237,
       y__h15370,
       y__h15429,
       y__h15562,
       y__h15621,
       y__h15754,
       y__h15813,
       y__h15946,
       y__h16005,
       y__h16138,
       y__h16197,
       y__h16330,
       y__h16389,
       y__h16522,
       y__h16581,
       y__h16714,
       y__h16773,
       y__h16906,
       y__h16965,
       y__h17098,
       y__h17157,
       y__h17290,
       y__h17349,
       y__h17482,
       y__h17541,
       y__h17674,
       y__h17733,
       y__h20511,
       y__h20613,
       y__h20697,
       y__h20883,
       y__h21069,
       y__h21255,
       y__h21441,
       y__h21627,
       y__h21813,
       y__h21999,
       y__h22185,
       y__h22371,
       y__h22557,
       y__h22743,
       y__h22929,
       y__h23115,
       y__h23301,
       y__h23487,
       y__h23673,
       y__h23859,
       y__h24045,
       y__h24231,
       y__h24417,
       y__h24603,
       y__h24789,
       y__h24975,
       y__h25161,
       y__h25347,
       y__h25533,
       y__h25719,
       y__h25905,
       y__h26091,
       y__h26277,
       y__h26463,
       y__h26649,
       y__h26835,
       y__h27021,
       y__h27207,
       y__h27393,
       y__h27579,
       y__h27765,
       y__h27951,
       y__h28137,
       y__h28323,
       y__h28509,
       y__h28695,
       y__h28881,
       y__h29067,
       y__h29253,
       y__h29463,
       y__h29465,
       y__h29591,
       y__h29593,
       y__h29649,
       y__h29780,
       y__h29782,
       y__h29838,
       y__h29969,
       y__h29971,
       y__h30027,
       y__h30158,
       y__h30160,
       y__h30216,
       y__h30347,
       y__h30349,
       y__h30405,
       y__h30536,
       y__h30538,
       y__h30594,
       y__h30725,
       y__h30727,
       y__h30783,
       y__h30914,
       y__h30916,
       y__h30972,
       y__h31103,
       y__h31105,
       y__h31161,
       y__h31292,
       y__h31294,
       y__h31350,
       y__h31481,
       y__h31483,
       y__h31539,
       y__h31670,
       y__h31672,
       y__h31728,
       y__h31859,
       y__h31861,
       y__h31917,
       y__h32048,
       y__h32050,
       y__h32106,
       y__h32237,
       y__h32239,
       y__h32295,
       y__h32426,
       y__h32428,
       y__h32484,
       y__h32615,
       y__h32617,
       y__h32673,
       y__h32804,
       y__h32806,
       y__h32862,
       y__h32993,
       y__h32995,
       y__h33051,
       y__h33182,
       y__h33184,
       y__h33240,
       y__h33371,
       y__h33373,
       y__h33429,
       y__h33560,
       y__h33562,
       y__h33618,
       y__h33749,
       y__h33751,
       y__h33807,
       y__h33938,
       y__h33940,
       y__h33996,
       y__h34127,
       y__h34129,
       y__h34185,
       y__h34316,
       y__h34318,
       y__h34374,
       y__h34505,
       y__h34507,
       y__h34563,
       y__h34694,
       y__h34696,
       y__h34752,
       y__h34883,
       y__h34885,
       y__h34941,
       y__h35072,
       y__h35074,
       y__h35130,
       y__h35261,
       y__h35263,
       y__h35319,
       y__h35450,
       y__h35452,
       y__h35508,
       y__h35639,
       y__h35641,
       y__h35697,
       y__h35828,
       y__h35830,
       y__h35886,
       y__h36017,
       y__h36019,
       y__h36075,
       y__h36206,
       y__h36208,
       y__h36264,
       y__h36395,
       y__h36397,
       y__h36453,
       y__h36584,
       y__h36586,
       y__h36642,
       y__h36773,
       y__h36775,
       y__h36831,
       y__h36962,
       y__h36964,
       y__h37020,
       y__h37151,
       y__h37153,
       y__h37209,
       y__h37340,
       y__h37342,
       y__h37398,
       y__h37529,
       y__h37531,
       y__h37587,
       y__h37718,
       y__h37720,
       y__h37776,
       y__h37907,
       y__h37909,
       y__h37965,
       y__h38096,
       y__h38098,
       y__h38154,
       y__h38285,
       y__h38287,
       y__h38343,
       y__h38474,
       y__h38476,
       y__h38532,
       y__h40850,
       y__h40909,
       y__h41041,
       y__h41100,
       y__h41232,
       y__h41291,
       y__h41423,
       y__h41482,
       y__h41614,
       y__h41673,
       y__h41805,
       y__h41864,
       y__h4353,
       y__h45145,
       y__h45331,
       y__h4539,
       y__h45517,
       y__h45703,
       y__h45889,
       y__h46075,
       y__h46261,
       y__h46447,
       y__h46633,
       y__h46819,
       y__h47005,
       y__h47191,
       y__h4725,
       y__h47377,
       y__h47563,
       y__h47749,
       y__h47935,
       y__h48121,
       y__h48307,
       y__h48493,
       y__h48679,
       y__h48865,
       y__h49051,
       y__h4911,
       y__h5097,
       y__h5283,
       y__h54381,
       y__h54567,
       y__h54753,
       y__h54939,
       y__h5494,
       y__h5496,
       y__h55125,
       y__h55311,
       y__h5622,
       y__h5624,
       y__h5680,
       y__h56984,
       y__h57170,
       y__h57356,
       y__h57542,
       y__h57728,
       y__h57914,
       y__h58100,
       y__h5811,
       y__h5813,
       y__h58286,
       y__h58472,
       y__h58658,
       y__h5869,
       y__h58844,
       y__h59030,
       y__h59216,
       y__h59402,
       y__h59588,
       y__h59774,
       y__h59960,
       y__h6000,
       y__h6002,
       y__h60146,
       y__h60332,
       y__h60518,
       y__h6058,
       y__h60704,
       y__h60890,
       y__h61076,
       y__h6189,
       y__h6191,
       y__h6247,
       y__h6378,
       y__h6380,
       y__h6436,
       y__h6567,
       y__h6569,
       y__h66225,
       y__h6625,
       y__h66414,
       y__h66603,
       y__h66792,
       y__h66981,
       y__h67170,
       y__h8650,
       y__h8709,
       y__h8756,
       y__h8842,
       y__h8901,
       y__h9034,
       y__h9093,
       y__h9226,
       y__h9285,
       y__h9418,
       y__h9477,
       y__h9610,
       y__h9669,
       y__h9802,
       y__h9861,
       y__h9994;

  // action method get_inp_s
  assign RDY_get_inp_s = !fifo_s_rv[32] ;
  assign CAN_FIRE_get_inp_s = !fifo_s_rv[32] ;
  assign WILL_FIRE_get_inp_s = EN_get_inp_s ;

  // action method get_inp_c
  assign RDY_get_inp_c = !fifo_c_rv[32] ;
  assign CAN_FIRE_get_inp_c = !fifo_c_rv[32] ;
  assign WILL_FIRE_get_inp_c = EN_get_inp_c ;

  // actionvalue method get_result
  assign get_result = fifo_add_rv[31:0] ;
  assign RDY_get_result = fifo_add_rv[32] && pack_done ;
  assign CAN_FIRE_get_result = fifo_add_rv[32] && pack_done ;
  assign WILL_FIRE_get_result = EN_get_result ;

  // rule RL_rl_swap
  assign CAN_FIRE_RL_rl_swap =
	     add_start && !swap_done && !handle_zero && !input_zero ;
  assign WILL_FIRE_RL_rl_swap = CAN_FIRE_RL_rl_swap ;

  // rule RL_rl_get_sign
  assign CAN_FIRE_RL_rl_get_sign =
	     add_start && swap_done && !add_done && !sign_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_get_sign = CAN_FIRE_RL_rl_get_sign ;

  // rule RL_rl_cmp_exp
  assign CAN_FIRE_RL_rl_cmp_exp =
	     add_start && swap_done && sign_done && !cmp_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_cmp_exp = CAN_FIRE_RL_rl_cmp_exp ;

  // rule RL_rl_align_exp
  assign CAN_FIRE_RL_rl_align_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     !align_man_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_align_exp = CAN_FIRE_RL_rl_align_exp ;

  // rule RL_rl_add_or_sub_exp
  assign CAN_FIRE_RL_rl_add_or_sub_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     !calc_fraction_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_add_or_sub_exp = CAN_FIRE_RL_rl_add_or_sub_exp ;

  // rule RL_rl_adj_exp
  assign CAN_FIRE_RL_rl_adj_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     calc_fraction_done &&
	     !adj_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_exp = CAN_FIRE_RL_rl_adj_exp ;

  // rule RL_rl_adj_mantissa
  assign CAN_FIRE_RL_rl_adj_mantissa = MUX_mantissa_done_write_1__SEL_2 ;
  assign WILL_FIRE_RL_rl_adj_mantissa = MUX_mantissa_done_write_1__SEL_2 ;

  // rule RL_rl_assemble_result
  assign CAN_FIRE_RL_rl_assemble_result =
	     !fifo_add_rv_port1__read[32] &&
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231 ;
  assign WILL_FIRE_RL_rl_assemble_result = CAN_FIRE_RL_rl_assemble_result ;

  // rule RL_rl_handle_zero_val
  assign CAN_FIRE_RL_rl_handle_zero_val =
	     !fifo_add_rv_port1__read[32] && (handle_zero || input_zero) ;
  assign WILL_FIRE_RL_rl_handle_zero_val = CAN_FIRE_RL_rl_handle_zero_val ;

  // rule RL_rl_add_start
  assign CAN_FIRE_RL_rl_add_start =
	     fifo_s_rv[32] && fifo_c_rv[32] && !add_start ;
  assign WILL_FIRE_RL_rl_add_start = CAN_FIRE_RL_rl_add_start ;

  // rule RL_rl_deassert_signals
  assign CAN_FIRE_RL_rl_deassert_signals = add_done ;
  assign WILL_FIRE_RL_rl_deassert_signals = MUX_mantissa_done_write_1__SEL_1 ;

  // inputs to muxes for submodule ports
  assign MUX_add_or_sub_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;
  assign MUX_adj_exp_done_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ;
  assign MUX_c_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ;
  assign MUX_input_zero_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 ;
  assign MUX_mantissa_done_write_1__SEL_1 =
	     add_done && !WILL_FIRE_RL_rl_handle_zero_val ;
  assign MUX_mantissa_done_write_1__SEL_2 =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 &&
	     !mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign MUX_temp_man_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ;
  assign MUX_temp_man_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;
  assign MUX_add_or_sub_write_1__VAL_1 =
	     s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 ? 2'd1 : 2'd2 ;
  assign MUX_fifo_add_rv_port1__write_1__VAL_1 =
	     { 1'd1, tmp_sign, exp_mantissa } ;
  assign MUX_fifo_add_rv_port1__write_1__VAL_2 =
	     handle_zero ? 33'h100000000 : { 1'd1, input_no ? s : c } ;
  assign MUX_temp_c_write_1__VAL_1 = temp_c >> exp_diff ;
  assign MUX_temp_c_write_1__VAL_2 = { 2'b01, c[22:0], 25'd0 } ;
  assign MUX_temp_man_write_1__VAL_1 =
	     (add_or_sub == 2'd1) ? x__h7272 : x__h17939 ;
  assign MUX_temp_man_write_1__VAL_2 = temp_man[49] ? x__h41988 : x__h41999 ;
  assign MUX_tmp_exp_write_1__VAL_1 =
	     { IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;

  // inlined wires
  assign fifo_s_rv_port1__write_1 = { 1'd1, get_inp_s_inp_S } ;
  assign fifo_s_rv_port2__read =
	     EN_get_inp_s ? fifo_s_rv_port1__write_1 : fifo_s_rv ;
  assign fifo_c_rv_port1__write_1 = { 1'd1, get_inp_c_inp_C } ;
  assign fifo_c_rv_port2__read =
	     EN_get_inp_c ? fifo_c_rv_port1__write_1 : fifo_c_rv ;
  assign fifo_add_rv_port0__write_1 =
	     { 1'd0,
	       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign fifo_add_rv_port1__read =
	     EN_get_result ? fifo_add_rv_port0__write_1 : fifo_add_rv ;
  assign fifo_add_rv_EN_port1__write =
	     WILL_FIRE_RL_rl_assemble_result ||
	     WILL_FIRE_RL_rl_handle_zero_val ;
  assign fifo_add_rv_port1__write_1 =
	     WILL_FIRE_RL_rl_assemble_result ?
	       MUX_fifo_add_rv_port1__write_1__VAL_1 :
	       MUX_fifo_add_rv_port1__write_1__VAL_2 ;
  assign fifo_add_rv_port2__read =
	     fifo_add_rv_EN_port1__write ?
	       fifo_add_rv_port1__write_1 :
	       fifo_add_rv_port1__read ;

  // register add_done
  assign add_done_D_IN = 1'd1 ;
  assign add_done_EN =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register add_or_sub
  assign add_or_sub_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_add_or_sub_write_1__VAL_1 :
	       2'd0 ;
  assign add_or_sub_EN =
	     WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;

  // register add_start
  assign add_start_D_IN = 1'd1 ;
  assign add_start_EN = CAN_FIRE_RL_rl_add_start ;

  // register addition_start
  assign addition_start_D_IN = 1'b0 ;
  assign addition_start_EN = 1'b0 ;

  // register adj_exp_done
  assign adj_exp_done_D_IN = MUX_adj_exp_done_write_1__SEL_1 ;
  assign adj_exp_done_EN =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register align_man_done
  assign align_man_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign align_man_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_align_exp ;

  // register c
  assign c_D_IN = MUX_c_write_1__SEL_1 ? s : fifo_c_rv[31:0] ;
  assign c_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ||
	     WILL_FIRE_RL_rl_add_start ;

  // register calc_fraction_done
  assign calc_fraction_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign calc_fraction_done_EN = MUX_add_or_sub_write_1__SEL_2 ;

  // register cmp_exp_done
  assign cmp_exp_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign cmp_exp_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_cmp_exp ;

  // register end_result
  assign end_result_D_IN = 32'h0 ;
  assign end_result_EN = 1'b0 ;

  // register exp_diff
  assign exp_diff_D_IN =
	     { x__h6566 ^ y__h6567,
	       x__h6377 ^ y__h6378,
	       tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162 } ;
  assign exp_diff_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register exp_mantissa
  assign exp_mantissa_D_IN =
	     temp_man[49] ?
	       IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140 :
	       IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224 ;
  assign exp_mantissa_EN = MUX_mantissa_done_write_1__SEL_2 ;

  // register exp_res
  assign exp_res_D_IN = 8'h0 ;
  assign exp_res_EN = 1'b0 ;

  // register fifo_add_rv
  assign fifo_add_rv_D_IN = fifo_add_rv_port2__read ;
  assign fifo_add_rv_EN = 1'b1 ;

  // register fifo_c_rv
  assign fifo_c_rv_D_IN = fifo_c_rv_port2__read ;
  assign fifo_c_rv_EN = 1'b1 ;

  // register fifo_s_rv
  assign fifo_s_rv_D_IN = fifo_s_rv_port2__read ;
  assign fifo_s_rv_EN = 1'b1 ;

  // register get_r
  assign get_r_D_IN = 1'b0 ;
  assign get_r_EN = 1'b0 ;

  // register got_c
  assign got_c_D_IN = 1'b0 ;
  assign got_c_EN = 1'b0 ;

  // register got_s
  assign got_s_D_IN = 1'b0 ;
  assign got_s_EN = 1'b0 ;

  // register handle_zero
  assign handle_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign handle_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register input_no
  assign input_no_D_IN = s[30:23] != 8'd0 || s[22:0] != 23'd0 ;
  assign input_no_EN = MUX_input_zero_write_1__SEL_2 ;

  // register input_zero
  assign input_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign input_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register mantissa_done
  assign mantissa_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign mantissa_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_adj_mantissa ;

  // register mantissa_res
  assign mantissa_res_D_IN = 23'h0 ;
  assign mantissa_res_EN = 1'b0 ;

  // register pack_done
  assign pack_done_D_IN =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;
  assign pack_done_EN =
	     EN_get_result || WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register result_concatenated
  assign result_concatenated_D_IN = 1'b0 ;
  assign result_concatenated_EN = 1'b0 ;

  // register s
  assign s_D_IN = MUX_c_write_1__SEL_1 ? c : fifo_s_rv[31:0] ;
  assign s_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ||
	     WILL_FIRE_RL_rl_add_start ;

  // register sign_done
  assign sign_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign sign_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_get_sign ;

  // register swap_done
  assign swap_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign swap_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_swap ;

  // register temp_c
  assign temp_c_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_temp_c_write_1__VAL_1 :
	       MUX_temp_c_write_1__VAL_2 ;
  assign temp_c_EN = WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_cmp_exp ;

  // register temp_man
  assign temp_man_D_IN =
	     MUX_temp_man_write_1__SEL_1 ?
	       MUX_temp_man_write_1__VAL_1 :
	       MUX_temp_man_write_1__VAL_2 ;
  assign temp_man_EN =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ||
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;

  // register temp_s
  assign temp_s_D_IN = { 2'b01, s[22:0], 25'd0 } ;
  assign temp_s_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register tmp_exp
  assign tmp_exp_D_IN =
	     MUX_temp_man_write_1__SEL_2 ?
	       MUX_tmp_exp_write_1__VAL_1 :
	       s[30:23] ;
  assign tmp_exp_EN =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ||
	     WILL_FIRE_RL_rl_get_sign ;

  // register tmp_res
  assign tmp_res_D_IN = 24'h0 ;
  assign tmp_res_EN = 1'b0 ;

  // register tmp_sign
  assign tmp_sign_D_IN = s[31] ;
  assign tmp_sign_EN = CAN_FIRE_RL_rl_get_sign ;

  // remaining internal signals
  assign IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10 =
	     (~IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2 =
	     (~IF_c_BIT_23_THEN_0_ELSE_1__q1[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6 =
	     (~temp_man[25]) ? 50'd1 : 50'd0 ;
  assign IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5 =
	     (~temp_man[26]) ? 50'd1 : 50'd0 ;
  assign IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4 =
	     (~tmp_exp[0]) ? 8'd1 : 8'd0 ;
  assign IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224 =
	     (!temp_man[24] || temp_man[23:0] == 24'd0 && !temp_man[25]) ?
	       { tmp_exp, temp_man[47:25] } :
	       IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223 ;
  assign IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140 =
	     (!temp_man[25] || temp_man[24:0] == 25'd0 && !temp_man[26]) ?
	       { _theResult___fst__h65834, temp_man[48:26] } :
	       IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139 ;
  assign IF_c_BIT_23_THEN_0_ELSE_1__q1 = c[23] ? 8'd0 : 8'd1 ;
  assign IF_temp_c_BIT_0_THEN_1_ELSE_0__q3 = temp_c[0] ? 50'd1 : 50'd0 ;
  assign IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139 =
	     (temp_man[49] & y__h49051) ?
	       { tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 ^
		 y__h55311,
		 tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088,
		 rounded_mantissa__h53991 } :
	       { _theResult___fst__h65834, rounded_mantissa__h67409 } ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992 =
	     temp_man[49] ? x__h54254 : x__h40954 ^ tmp_exp[0] ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989 =
	     temp_man[49] ? x__h54380 : x__h41145 ^ y__h40850 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986 =
	     temp_man[49] ? x__h54566 : x__h41336 ^ y__h41041 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983 =
	     temp_man[49] ? x__h54752 : x__h41527 ^ y__h41232 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980 =
	     temp_man[49] ? x__h54938 : x__h41718 ^ y__h41423 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977 =
	     temp_man[49] ? x__h55124 : x__h41909 ^ y__h41614 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974 =
	     temp_man[49] ?
	       tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 :
	       x__h41804 ^ y__h41805 ;
  assign IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223 =
	     (temp_man[49] ^ y__h61076) ?
	       { _theResult___fst__h65834, rounded_mantissa__h65833 } :
	       { tmp_exp, rounded_mantissa__h67491 } ;
  assign IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9 =
	     (temp_s[0] ^ IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0]) ?
	       50'd1 :
	       50'd0 ;
  assign IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8 =
	     (temp_s[0] ^ temp_c[0]) ? 50'd1 : 50'd0 ;
  assign IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7 =
	     (tmp_exp[0] ^
	      IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0]) ?
	       8'd1 :
	       8'd0 ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0 || c[30:23] != 8'd0 ||
	      c[22:0] != 23'd0) &&
	     (!s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 ||
	      !s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 ||
	      s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 =
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53 &&
	     (s[30:23] == 8'd0 && s[22:0] == 23'd0 ||
	      c[30:23] == 8'd0 && c[22:0] == 23'd0) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0) &&
	     (s[30:23] < c[30:23] ||
	      s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 &&
	      s[22:0] < c[22:0]) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 =
	     (!s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 ||
	      !s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 ||
	      s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38) &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63 ;
  assign _theResult___fst__h65834 =
	     { tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953,
	       x__h55124,
	       x__h54938,
	       x__h54752,
	       x__h54566,
	       x__h54380,
	       x__h54254,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     calc_fraction_done &&
	     adj_exp_done ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231 =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 &&
	     mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 =
	     add_start && swap_done && sign_done && cmp_exp_done ;
  assign rounded_mantissa__h53991 =
	     { temp_man[49] ^ y__h49051,
	       temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111 } ;
  assign rounded_mantissa__h65833 =
	     { temp_man[48] ^ y__h60890,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
	       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195 } ;
  assign rounded_mantissa__h67409 =
	     { temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128 } ;
  assign rounded_mantissa__h67491 =
	     { temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212 } ;
  assign s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 = s[22:0] == c[22:0] ;
  assign s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41 =
	     s[30:23] == 8'd0 && s[22:0] == 23'd0 && c[30:23] == 8'd0 &&
	     c[22:0] == 23'd0 ||
	     s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 &&
	     s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 &&
	     !s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 ;
  assign s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 =
	     s[30:23] == c[30:23] ;
  assign s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 = s[31] == c[31] ;
  assign temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195 =
	     temp_man[26] ^ temp_man[25] ;
  assign temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111 =
	     temp_man[27] ^ temp_man[26] ;
  assign temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194 =
	     temp_man[27] ^ y__h56984 ;
  assign temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110 =
	     temp_man[28] ^ y__h45145 ;
  assign temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193 =
	     temp_man[28] ^ y__h57170 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109 =
	     temp_man[29] ^ y__h45331 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192 =
	     temp_man[29] ^ y__h57356 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212 =
	     { temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
	       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195,
	       IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6[0] } ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108 =
	     temp_man[30] ^ y__h45517 ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128 =
	     { temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111,
	       IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5[0] } ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191 =
	     temp_man[30] ^ y__h57542 ;
  assign temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107 =
	     temp_man[31] ^ y__h45703 ;
  assign temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190 =
	     temp_man[31] ^ y__h57728 ;
  assign temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106 =
	     temp_man[32] ^ y__h45889 ;
  assign temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189 =
	     temp_man[32] ^ y__h57914 ;
  assign temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105 =
	     temp_man[33] ^ y__h46075 ;
  assign temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188 =
	     temp_man[33] ^ y__h58100 ;
  assign temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104 =
	     temp_man[34] ^ y__h46261 ;
  assign temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187 =
	     temp_man[34] ^ y__h58286 ;
  assign temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103 =
	     temp_man[35] ^ y__h46447 ;
  assign temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186 =
	     temp_man[35] ^ y__h58472 ;
  assign temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102 =
	     temp_man[36] ^ y__h46633 ;
  assign temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185 =
	     temp_man[36] ^ y__h58658 ;
  assign temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101 =
	     temp_man[37] ^ y__h46819 ;
  assign temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184 =
	     temp_man[37] ^ y__h58844 ;
  assign temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100 =
	     temp_man[38] ^ y__h47005 ;
  assign temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183 =
	     temp_man[38] ^ y__h59030 ;
  assign temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099 =
	     temp_man[39] ^ y__h47191 ;
  assign temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182 =
	     temp_man[39] ^ y__h59216 ;
  assign temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098 =
	     temp_man[40] ^ y__h47377 ;
  assign temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181 =
	     temp_man[40] ^ y__h59402 ;
  assign temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097 =
	     temp_man[41] ^ y__h47563 ;
  assign temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180 =
	     temp_man[41] ^ y__h59588 ;
  assign temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096 =
	     temp_man[42] ^ y__h47749 ;
  assign temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179 =
	     temp_man[42] ^ y__h59774 ;
  assign temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095 =
	     temp_man[43] ^ y__h47935 ;
  assign temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178 =
	     temp_man[43] ^ y__h59960 ;
  assign temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094 =
	     temp_man[44] ^ y__h48121 ;
  assign temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177 =
	     temp_man[44] ^ y__h60146 ;
  assign temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093 =
	     temp_man[45] ^ y__h48307 ;
  assign temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176 =
	     temp_man[45] ^ y__h60332 ;
  assign temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092 =
	     temp_man[46] ^ y__h48493 ;
  assign temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175 =
	     temp_man[46] ^ y__h60518 ;
  assign temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091 =
	     temp_man[47] ^ y__h48679 ;
  assign temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174 =
	     temp_man[47] ^ y__h60704 ;
  assign temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090 =
	     temp_man[48] ^ y__h48865 ;
  assign temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542 =
	     { x__h10675 ^ y__h10378,
	       x__h10483 ^ y__h10186,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541 } ;
  assign temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913 =
	     { x__h31291 ^ y__h31292,
	       x__h31102 ^ y__h31103,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912 } ;
  assign temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543 =
	     { x__h11059 ^ y__h10762,
	       x__h10867 ^ y__h10570,
	       temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542 } ;
  assign temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914 =
	     { x__h31669 ^ y__h31670,
	       x__h31480 ^ y__h31481,
	       temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913 } ;
  assign temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544 =
	     { x__h11443 ^ y__h11146,
	       x__h11251 ^ y__h10954,
	       temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543 } ;
  assign temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915 =
	     { x__h32047 ^ y__h32048,
	       x__h31858 ^ y__h31859,
	       temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914 } ;
  assign temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545 =
	     { x__h11827 ^ y__h11530,
	       x__h11635 ^ y__h11338,
	       temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544 } ;
  assign temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916 =
	     { x__h32425 ^ y__h32426,
	       x__h32236 ^ y__h32237,
	       temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915 } ;
  assign temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546 =
	     { x__h12211 ^ y__h11914,
	       x__h12019 ^ y__h11722,
	       temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545 } ;
  assign temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917 =
	     { x__h32803 ^ y__h32804,
	       x__h32614 ^ y__h32615,
	       temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916 } ;
  assign temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537 =
	     { x__h8755 ^ y__h8756,
	       IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8[0] } ;
  assign temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908 =
	     { x__h29462 ^ y__h29463,
	       IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9[0] } ;
  assign temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547 =
	     { x__h12595 ^ y__h12298,
	       x__h12403 ^ y__h12106,
	       temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546 } ;
  assign temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918 =
	     { x__h33181 ^ y__h33182,
	       x__h32992 ^ y__h32993,
	       temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917 } ;
  assign temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548 =
	     { x__h12979 ^ y__h12682,
	       x__h12787 ^ y__h12490,
	       temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547 } ;
  assign temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919 =
	     { x__h33559 ^ y__h33560,
	       x__h33370 ^ y__h33371,
	       temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918 } ;
  assign temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549 =
	     { x__h13363 ^ y__h13066,
	       x__h13171 ^ y__h12874,
	       temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548 } ;
  assign temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920 =
	     { x__h33937 ^ y__h33938,
	       x__h33748 ^ y__h33749,
	       temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919 } ;
  assign temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550 =
	     { x__h13747 ^ y__h13450,
	       x__h13555 ^ y__h13258,
	       temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549 } ;
  assign temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921 =
	     { x__h34315 ^ y__h34316,
	       x__h34126 ^ y__h34127,
	       temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920 } ;
  assign temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551 =
	     { x__h14131 ^ y__h13834,
	       x__h13939 ^ y__h13642,
	       temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550 } ;
  assign temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922 =
	     { x__h34693 ^ y__h34694,
	       x__h34504 ^ y__h34505,
	       temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921 } ;
  assign temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552 =
	     { x__h14515 ^ y__h14218,
	       x__h14323 ^ y__h14026,
	       temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551 } ;
  assign temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923 =
	     { x__h35071 ^ y__h35072,
	       x__h34882 ^ y__h34883,
	       temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922 } ;
  assign temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553 =
	     { x__h14899 ^ y__h14602,
	       x__h14707 ^ y__h14410,
	       temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552 } ;
  assign temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924 =
	     { x__h35449 ^ y__h35450,
	       x__h35260 ^ y__h35261,
	       temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923 } ;
  assign temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554 =
	     { x__h15283 ^ y__h14986,
	       x__h15091 ^ y__h14794,
	       temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553 } ;
  assign temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925 =
	     { x__h35827 ^ y__h35828,
	       x__h35638 ^ y__h35639,
	       temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924 } ;
  assign temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555 =
	     { x__h15667 ^ y__h15370,
	       x__h15475 ^ y__h15178,
	       temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554 } ;
  assign temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926 =
	     { x__h36205 ^ y__h36206,
	       x__h36016 ^ y__h36017,
	       temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925 } ;
  assign temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556 =
	     { x__h16051 ^ y__h15754,
	       x__h15859 ^ y__h15562,
	       temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555 } ;
  assign temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927 =
	     { x__h36583 ^ y__h36584,
	       x__h36394 ^ y__h36395,
	       temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926 } ;
  assign temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538 =
	     { x__h9139 ^ y__h8842,
	       x__h8947 ^ y__h8650,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537 } ;
  assign temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909 =
	     { x__h29779 ^ y__h29780,
	       x__h29590 ^ y__h29591,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908 } ;
  assign temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557 =
	     { x__h16435 ^ y__h16138,
	       x__h16243 ^ y__h15946,
	       temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556 } ;
  assign temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928 =
	     { x__h36961 ^ y__h36962,
	       x__h36772 ^ y__h36773,
	       temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927 } ;
  assign temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558 =
	     { x__h16819 ^ y__h16522,
	       x__h16627 ^ y__h16330,
	       temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557 } ;
  assign temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929 =
	     { x__h37339 ^ y__h37340,
	       x__h37150 ^ y__h37151,
	       temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928 } ;
  assign temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559 =
	     { x__h17203 ^ y__h16906,
	       x__h17011 ^ y__h16714,
	       temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558 } ;
  assign temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930 =
	     { x__h37717 ^ y__h37718,
	       x__h37528 ^ y__h37529,
	       temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929 } ;
  assign temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560 =
	     { x__h17587 ^ y__h17290,
	       x__h17395 ^ y__h17098,
	       temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559 } ;
  assign temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931 =
	     { x__h38095 ^ y__h38096,
	       x__h37906 ^ y__h37907,
	       temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930 } ;
  assign temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539 =
	     { x__h9523 ^ y__h9226,
	       x__h9331 ^ y__h9034,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538 } ;
  assign temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910 =
	     { x__h30157 ^ y__h30158,
	       x__h29968 ^ y__h29969,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909 } ;
  assign temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540 =
	     { x__h9907 ^ y__h9610,
	       x__h9715 ^ y__h9418,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539 } ;
  assign temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911 =
	     { x__h30535 ^ y__h30536,
	       x__h30346 ^ y__h30347,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910 } ;
  assign temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541 =
	     { x__h10291 ^ y__h9994,
	       x__h10099 ^ y__h9802,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540 } ;
  assign temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912 =
	     { x__h30913 ^ y__h30914,
	       x__h30724 ^ y__h30725,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911 } ;
  assign tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160 =
	     { x__h5493 ^ y__h5494,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7[0] } ;
  assign tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086 =
	     { x__h54380 ^ y__h54381,
	       x__h54254 ^ IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0],
	       IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10[0] } ;
  assign tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161 =
	     { x__h5810 ^ y__h5811,
	       x__h5621 ^ y__h5622,
	       tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160 } ;
  assign tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087 =
	     { x__h54752 ^ y__h54753,
	       x__h54566 ^ y__h54567,
	       tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086 } ;
  assign tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162 =
	     { x__h6188 ^ y__h6189,
	       x__h5999 ^ y__h6000,
	       tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161 } ;
  assign tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088 =
	     { x__h55124 ^ y__h55125,
	       x__h54938 ^ y__h54939,
	       tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087 } ;
  assign tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 =
	     tmp_exp[7] ^ y__h67170 ;
  assign x__h10052 = temp_s[8] & temp_c[8] ;
  assign x__h10099 = temp_s[8] ^ temp_c[8] ;
  assign x__h10244 = temp_s[9] & temp_c[9] ;
  assign x__h10291 = temp_s[9] ^ temp_c[9] ;
  assign x__h10436 = temp_s[10] & temp_c[10] ;
  assign x__h10483 = temp_s[10] ^ temp_c[10] ;
  assign x__h10628 = temp_s[11] & temp_c[11] ;
  assign x__h10675 = temp_s[11] ^ temp_c[11] ;
  assign x__h10820 = temp_s[12] & temp_c[12] ;
  assign x__h10867 = temp_s[12] ^ temp_c[12] ;
  assign x__h11012 = temp_s[13] & temp_c[13] ;
  assign x__h11059 = temp_s[13] ^ temp_c[13] ;
  assign x__h11204 = temp_s[14] & temp_c[14] ;
  assign x__h11251 = temp_s[14] ^ temp_c[14] ;
  assign x__h11396 = temp_s[15] & temp_c[15] ;
  assign x__h11443 = temp_s[15] ^ temp_c[15] ;
  assign x__h11588 = temp_s[16] & temp_c[16] ;
  assign x__h11635 = temp_s[16] ^ temp_c[16] ;
  assign x__h11780 = temp_s[17] & temp_c[17] ;
  assign x__h11827 = temp_s[17] ^ temp_c[17] ;
  assign x__h11972 = temp_s[18] & temp_c[18] ;
  assign x__h12019 = temp_s[18] ^ temp_c[18] ;
  assign x__h12164 = temp_s[19] & temp_c[19] ;
  assign x__h12211 = temp_s[19] ^ temp_c[19] ;
  assign x__h12356 = temp_s[20] & temp_c[20] ;
  assign x__h12403 = temp_s[20] ^ temp_c[20] ;
  assign x__h12548 = temp_s[21] & temp_c[21] ;
  assign x__h12595 = temp_s[21] ^ temp_c[21] ;
  assign x__h12740 = temp_s[22] & temp_c[22] ;
  assign x__h12787 = temp_s[22] ^ temp_c[22] ;
  assign x__h12932 = temp_s[23] & temp_c[23] ;
  assign x__h12979 = temp_s[23] ^ temp_c[23] ;
  assign x__h13124 = temp_s[24] & temp_c[24] ;
  assign x__h13171 = temp_s[24] ^ temp_c[24] ;
  assign x__h13316 = temp_s[25] & temp_c[25] ;
  assign x__h13363 = temp_s[25] ^ temp_c[25] ;
  assign x__h13508 = temp_s[26] & temp_c[26] ;
  assign x__h13555 = temp_s[26] ^ temp_c[26] ;
  assign x__h13700 = temp_s[27] & temp_c[27] ;
  assign x__h13747 = temp_s[27] ^ temp_c[27] ;
  assign x__h13892 = temp_s[28] & temp_c[28] ;
  assign x__h13939 = temp_s[28] ^ temp_c[28] ;
  assign x__h14084 = temp_s[29] & temp_c[29] ;
  assign x__h14131 = temp_s[29] ^ temp_c[29] ;
  assign x__h14276 = temp_s[30] & temp_c[30] ;
  assign x__h14323 = temp_s[30] ^ temp_c[30] ;
  assign x__h14468 = temp_s[31] & temp_c[31] ;
  assign x__h14515 = temp_s[31] ^ temp_c[31] ;
  assign x__h14660 = temp_s[32] & temp_c[32] ;
  assign x__h14707 = temp_s[32] ^ temp_c[32] ;
  assign x__h14852 = temp_s[33] & temp_c[33] ;
  assign x__h14899 = temp_s[33] ^ temp_c[33] ;
  assign x__h15044 = temp_s[34] & temp_c[34] ;
  assign x__h15091 = temp_s[34] ^ temp_c[34] ;
  assign x__h15236 = temp_s[35] & temp_c[35] ;
  assign x__h15283 = temp_s[35] ^ temp_c[35] ;
  assign x__h15428 = temp_s[36] & temp_c[36] ;
  assign x__h15475 = temp_s[36] ^ temp_c[36] ;
  assign x__h15620 = temp_s[37] & temp_c[37] ;
  assign x__h15667 = temp_s[37] ^ temp_c[37] ;
  assign x__h15812 = temp_s[38] & temp_c[38] ;
  assign x__h15859 = temp_s[38] ^ temp_c[38] ;
  assign x__h16004 = temp_s[39] & temp_c[39] ;
  assign x__h16051 = temp_s[39] ^ temp_c[39] ;
  assign x__h16196 = temp_s[40] & temp_c[40] ;
  assign x__h16243 = temp_s[40] ^ temp_c[40] ;
  assign x__h16388 = temp_s[41] & temp_c[41] ;
  assign x__h16435 = temp_s[41] ^ temp_c[41] ;
  assign x__h16580 = temp_s[42] & temp_c[42] ;
  assign x__h16627 = temp_s[42] ^ temp_c[42] ;
  assign x__h16772 = temp_s[43] & temp_c[43] ;
  assign x__h16819 = temp_s[43] ^ temp_c[43] ;
  assign x__h16964 = temp_s[44] & temp_c[44] ;
  assign x__h17011 = temp_s[44] ^ temp_c[44] ;
  assign x__h17156 = temp_s[45] & temp_c[45] ;
  assign x__h17203 = temp_s[45] ^ temp_c[45] ;
  assign x__h17348 = temp_s[46] & temp_c[46] ;
  assign x__h17395 = temp_s[46] ^ temp_c[46] ;
  assign x__h17540 = temp_s[47] & temp_c[47] ;
  assign x__h17587 = temp_s[47] ^ temp_c[47] ;
  assign x__h17673 = temp_s[49] ^ temp_c[49] ;
  assign x__h17732 = temp_s[48] & temp_c[48] ;
  assign x__h17779 = temp_s[48] ^ temp_c[48] ;
  assign x__h17939 =
	     { x__h38473 ^ y__h38474,
	       x__h38284 ^ y__h38285,
	       temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931 } ;
  assign x__h29462 = temp_s[1] ^ y__h29465 ;
  assign x__h29590 = temp_s[2] ^ y__h29593 ;
  assign x__h29648 = temp_s[1] & y__h29465 ;
  assign x__h29779 = temp_s[3] ^ y__h29782 ;
  assign x__h29837 = temp_s[2] & y__h29593 ;
  assign x__h29968 = temp_s[4] ^ y__h29971 ;
  assign x__h30026 = temp_s[3] & y__h29782 ;
  assign x__h30157 = temp_s[5] ^ y__h30160 ;
  assign x__h30215 = temp_s[4] & y__h29971 ;
  assign x__h30346 = temp_s[6] ^ y__h30349 ;
  assign x__h30404 = temp_s[5] & y__h30160 ;
  assign x__h30535 = temp_s[7] ^ y__h30538 ;
  assign x__h30593 = temp_s[6] & y__h30349 ;
  assign x__h30724 = temp_s[8] ^ y__h30727 ;
  assign x__h30782 = temp_s[7] & y__h30538 ;
  assign x__h30913 = temp_s[9] ^ y__h30916 ;
  assign x__h30971 = temp_s[8] & y__h30727 ;
  assign x__h31102 = temp_s[10] ^ y__h31105 ;
  assign x__h31160 = temp_s[9] & y__h30916 ;
  assign x__h31291 = temp_s[11] ^ y__h31294 ;
  assign x__h31349 = temp_s[10] & y__h31105 ;
  assign x__h31480 = temp_s[12] ^ y__h31483 ;
  assign x__h31538 = temp_s[11] & y__h31294 ;
  assign x__h31669 = temp_s[13] ^ y__h31672 ;
  assign x__h31727 = temp_s[12] & y__h31483 ;
  assign x__h31858 = temp_s[14] ^ y__h31861 ;
  assign x__h31916 = temp_s[13] & y__h31672 ;
  assign x__h32047 = temp_s[15] ^ y__h32050 ;
  assign x__h32105 = temp_s[14] & y__h31861 ;
  assign x__h32236 = temp_s[16] ^ y__h32239 ;
  assign x__h32294 = temp_s[15] & y__h32050 ;
  assign x__h32425 = temp_s[17] ^ y__h32428 ;
  assign x__h32483 = temp_s[16] & y__h32239 ;
  assign x__h32614 = temp_s[18] ^ y__h32617 ;
  assign x__h32672 = temp_s[17] & y__h32428 ;
  assign x__h32803 = temp_s[19] ^ y__h32806 ;
  assign x__h32861 = temp_s[18] & y__h32617 ;
  assign x__h32992 = temp_s[20] ^ y__h32995 ;
  assign x__h33050 = temp_s[19] & y__h32806 ;
  assign x__h33181 = temp_s[21] ^ y__h33184 ;
  assign x__h33239 = temp_s[20] & y__h32995 ;
  assign x__h33370 = temp_s[22] ^ y__h33373 ;
  assign x__h33428 = temp_s[21] & y__h33184 ;
  assign x__h33559 = temp_s[23] ^ y__h33562 ;
  assign x__h33617 = temp_s[22] & y__h33373 ;
  assign x__h33748 = temp_s[24] ^ y__h33751 ;
  assign x__h33806 = temp_s[23] & y__h33562 ;
  assign x__h33937 = temp_s[25] ^ y__h33940 ;
  assign x__h33995 = temp_s[24] & y__h33751 ;
  assign x__h34126 = temp_s[26] ^ y__h34129 ;
  assign x__h34184 = temp_s[25] & y__h33940 ;
  assign x__h34315 = temp_s[27] ^ y__h34318 ;
  assign x__h34373 = temp_s[26] & y__h34129 ;
  assign x__h34504 = temp_s[28] ^ y__h34507 ;
  assign x__h34562 = temp_s[27] & y__h34318 ;
  assign x__h34693 = temp_s[29] ^ y__h34696 ;
  assign x__h34751 = temp_s[28] & y__h34507 ;
  assign x__h34882 = temp_s[30] ^ y__h34885 ;
  assign x__h34940 = temp_s[29] & y__h34696 ;
  assign x__h35071 = temp_s[31] ^ y__h35074 ;
  assign x__h35129 = temp_s[30] & y__h34885 ;
  assign x__h35260 = temp_s[32] ^ y__h35263 ;
  assign x__h35318 = temp_s[31] & y__h35074 ;
  assign x__h35449 = temp_s[33] ^ y__h35452 ;
  assign x__h35507 = temp_s[32] & y__h35263 ;
  assign x__h35638 = temp_s[34] ^ y__h35641 ;
  assign x__h35696 = temp_s[33] & y__h35452 ;
  assign x__h35827 = temp_s[35] ^ y__h35830 ;
  assign x__h35885 = temp_s[34] & y__h35641 ;
  assign x__h36016 = temp_s[36] ^ y__h36019 ;
  assign x__h36074 = temp_s[35] & y__h35830 ;
  assign x__h36205 = temp_s[37] ^ y__h36208 ;
  assign x__h36263 = temp_s[36] & y__h36019 ;
  assign x__h36394 = temp_s[38] ^ y__h36397 ;
  assign x__h36452 = temp_s[37] & y__h36208 ;
  assign x__h36583 = temp_s[39] ^ y__h36586 ;
  assign x__h36641 = temp_s[38] & y__h36397 ;
  assign x__h36772 = temp_s[40] ^ y__h36775 ;
  assign x__h36830 = temp_s[39] & y__h36586 ;
  assign x__h36961 = temp_s[41] ^ y__h36964 ;
  assign x__h37019 = temp_s[40] & y__h36775 ;
  assign x__h37150 = temp_s[42] ^ y__h37153 ;
  assign x__h37208 = temp_s[41] & y__h36964 ;
  assign x__h37339 = temp_s[43] ^ y__h37342 ;
  assign x__h37397 = temp_s[42] & y__h37153 ;
  assign x__h37528 = temp_s[44] ^ y__h37531 ;
  assign x__h37586 = temp_s[43] & y__h37342 ;
  assign x__h37717 = temp_s[45] ^ y__h37720 ;
  assign x__h37775 = temp_s[44] & y__h37531 ;
  assign x__h37906 = temp_s[46] ^ y__h37909 ;
  assign x__h37964 = temp_s[45] & y__h37720 ;
  assign x__h38095 = temp_s[47] ^ y__h38098 ;
  assign x__h38153 = temp_s[46] & y__h37909 ;
  assign x__h38284 = temp_s[48] ^ y__h38287 ;
  assign x__h38342 = temp_s[47] & y__h38098 ;
  assign x__h38473 = temp_s[49] ^ y__h38476 ;
  assign x__h38531 = temp_s[48] & y__h38287 ;
  assign x__h40954 = ~tmp_exp[1] ;
  assign x__h41145 = ~tmp_exp[2] ;
  assign x__h41336 = ~tmp_exp[3] ;
  assign x__h41527 = ~tmp_exp[4] ;
  assign x__h41718 = ~tmp_exp[5] ;
  assign x__h41804 = ~tmp_exp[7] ;
  assign x__h41909 = ~tmp_exp[6] ;
  assign x__h41988 = { 1'd0, temp_man[49:1] } ;
  assign x__h41999 = { temp_man[48:0], 1'd0 } ;
  assign x__h5282 = !c[30] ;
  assign x__h54254 = tmp_exp[1] ^ tmp_exp[0] ;
  assign x__h54380 = tmp_exp[2] ^ y__h66225 ;
  assign x__h54566 = tmp_exp[3] ^ y__h66414 ;
  assign x__h54752 = tmp_exp[4] ^ y__h66603 ;
  assign x__h5493 = tmp_exp[1] ^ y__h5496 ;
  assign x__h54938 = tmp_exp[5] ^ y__h66792 ;
  assign x__h55124 = tmp_exp[6] ^ y__h66981 ;
  assign x__h5621 = tmp_exp[2] ^ y__h5624 ;
  assign x__h5679 = tmp_exp[1] & y__h5496 ;
  assign x__h5810 = tmp_exp[3] ^ y__h5813 ;
  assign x__h5868 = tmp_exp[2] & y__h5624 ;
  assign x__h5999 = tmp_exp[4] ^ y__h6002 ;
  assign x__h6057 = tmp_exp[3] & y__h5813 ;
  assign x__h6188 = tmp_exp[5] ^ y__h6191 ;
  assign x__h6246 = tmp_exp[4] & y__h6002 ;
  assign x__h6377 = tmp_exp[6] ^ y__h6380 ;
  assign x__h6435 = tmp_exp[5] & y__h6191 ;
  assign x__h6566 = tmp_exp[7] ^ y__h6569 ;
  assign x__h6624 = tmp_exp[6] & y__h6380 ;
  assign x__h7272 =
	     { x__h17673 ^ y__h17674,
	       x__h17779 ^ y__h17482,
	       temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560 } ;
  assign x__h8708 = temp_s[1] & temp_c[1] ;
  assign x__h8755 = temp_s[1] ^ temp_c[1] ;
  assign x__h8900 = temp_s[2] & temp_c[2] ;
  assign x__h8947 = temp_s[2] ^ temp_c[2] ;
  assign x__h9092 = temp_s[3] & temp_c[3] ;
  assign x__h9139 = temp_s[3] ^ temp_c[3] ;
  assign x__h9284 = temp_s[4] & temp_c[4] ;
  assign x__h9331 = temp_s[4] ^ temp_c[4] ;
  assign x__h9476 = temp_s[5] & temp_c[5] ;
  assign x__h9523 = temp_s[5] ^ temp_c[5] ;
  assign x__h9668 = temp_s[6] & temp_c[6] ;
  assign x__h9715 = temp_s[6] ^ temp_c[6] ;
  assign x__h9860 = temp_s[7] & temp_c[7] ;
  assign x__h9907 = temp_s[7] ^ temp_c[7] ;
  assign y__h10053 = x__h10099 & y__h9802 ;
  assign y__h10186 = x__h10244 | y__h10245 ;
  assign y__h10245 = x__h10291 & y__h9994 ;
  assign y__h10378 = x__h10436 | y__h10437 ;
  assign y__h10437 = x__h10483 & y__h10186 ;
  assign y__h10570 = x__h10628 | y__h10629 ;
  assign y__h10629 = x__h10675 & y__h10378 ;
  assign y__h10762 = x__h10820 | y__h10821 ;
  assign y__h10821 = x__h10867 & y__h10570 ;
  assign y__h10954 = x__h11012 | y__h11013 ;
  assign y__h11013 = x__h11059 & y__h10762 ;
  assign y__h11146 = x__h11204 | y__h11205 ;
  assign y__h11205 = x__h11251 & y__h10954 ;
  assign y__h11338 = x__h11396 | y__h11397 ;
  assign y__h11397 = x__h11443 & y__h11146 ;
  assign y__h11530 = x__h11588 | y__h11589 ;
  assign y__h11589 = x__h11635 & y__h11338 ;
  assign y__h11722 = x__h11780 | y__h11781 ;
  assign y__h11781 = x__h11827 & y__h11530 ;
  assign y__h11914 = x__h11972 | y__h11973 ;
  assign y__h11973 = x__h12019 & y__h11722 ;
  assign y__h12106 = x__h12164 | y__h12165 ;
  assign y__h12165 = x__h12211 & y__h11914 ;
  assign y__h12298 = x__h12356 | y__h12357 ;
  assign y__h12357 = x__h12403 & y__h12106 ;
  assign y__h12490 = x__h12548 | y__h12549 ;
  assign y__h12549 = x__h12595 & y__h12298 ;
  assign y__h12682 = x__h12740 | y__h12741 ;
  assign y__h12741 = x__h12787 & y__h12490 ;
  assign y__h12874 = x__h12932 | y__h12933 ;
  assign y__h12933 = x__h12979 & y__h12682 ;
  assign y__h13066 = x__h13124 | y__h13125 ;
  assign y__h13125 = x__h13171 & y__h12874 ;
  assign y__h13258 = x__h13316 | y__h13317 ;
  assign y__h13317 = x__h13363 & y__h13066 ;
  assign y__h13450 = x__h13508 | y__h13509 ;
  assign y__h13509 = x__h13555 & y__h13258 ;
  assign y__h13642 = x__h13700 | y__h13701 ;
  assign y__h13701 = x__h13747 & y__h13450 ;
  assign y__h13834 = x__h13892 | y__h13893 ;
  assign y__h13893 = x__h13939 & y__h13642 ;
  assign y__h14026 = x__h14084 | y__h14085 ;
  assign y__h14085 = x__h14131 & y__h13834 ;
  assign y__h14218 = x__h14276 | y__h14277 ;
  assign y__h14277 = x__h14323 & y__h14026 ;
  assign y__h14410 = x__h14468 | y__h14469 ;
  assign y__h14469 = x__h14515 & y__h14218 ;
  assign y__h14602 = x__h14660 | y__h14661 ;
  assign y__h14661 = x__h14707 & y__h14410 ;
  assign y__h14794 = x__h14852 | y__h14853 ;
  assign y__h14853 = x__h14899 & y__h14602 ;
  assign y__h14986 = x__h15044 | y__h15045 ;
  assign y__h15045 = x__h15091 & y__h14794 ;
  assign y__h15178 = x__h15236 | y__h15237 ;
  assign y__h15237 = x__h15283 & y__h14986 ;
  assign y__h15370 = x__h15428 | y__h15429 ;
  assign y__h15429 = x__h15475 & y__h15178 ;
  assign y__h15562 = x__h15620 | y__h15621 ;
  assign y__h15621 = x__h15667 & y__h15370 ;
  assign y__h15754 = x__h15812 | y__h15813 ;
  assign y__h15813 = x__h15859 & y__h15562 ;
  assign y__h15946 = x__h16004 | y__h16005 ;
  assign y__h16005 = x__h16051 & y__h15754 ;
  assign y__h16138 = x__h16196 | y__h16197 ;
  assign y__h16197 = x__h16243 & y__h15946 ;
  assign y__h16330 = x__h16388 | y__h16389 ;
  assign y__h16389 = x__h16435 & y__h16138 ;
  assign y__h16522 = x__h16580 | y__h16581 ;
  assign y__h16581 = x__h16627 & y__h16330 ;
  assign y__h16714 = x__h16772 | y__h16773 ;
  assign y__h16773 = x__h16819 & y__h16522 ;
  assign y__h16906 = x__h16964 | y__h16965 ;
  assign y__h16965 = x__h17011 & y__h16714 ;
  assign y__h17098 = x__h17156 | y__h17157 ;
  assign y__h17157 = x__h17203 & y__h16906 ;
  assign y__h17290 = x__h17348 | y__h17349 ;
  assign y__h17349 = x__h17395 & y__h17098 ;
  assign y__h17482 = x__h17540 | y__h17541 ;
  assign y__h17541 = x__h17587 & y__h17290 ;
  assign y__h17674 = x__h17732 | y__h17733 ;
  assign y__h17733 = x__h17779 & y__h17482 ;
  assign y__h20511 = temp_c[1] & y__h20613 ;
  assign y__h20613 = ~temp_c[0] ;
  assign y__h20697 = temp_c[2] & y__h20511 ;
  assign y__h20883 = temp_c[3] & y__h20697 ;
  assign y__h21069 = temp_c[4] & y__h20883 ;
  assign y__h21255 = temp_c[5] & y__h21069 ;
  assign y__h21441 = temp_c[6] & y__h21255 ;
  assign y__h21627 = temp_c[7] & y__h21441 ;
  assign y__h21813 = temp_c[8] & y__h21627 ;
  assign y__h21999 = temp_c[9] & y__h21813 ;
  assign y__h22185 = temp_c[10] & y__h21999 ;
  assign y__h22371 = temp_c[11] & y__h22185 ;
  assign y__h22557 = temp_c[12] & y__h22371 ;
  assign y__h22743 = temp_c[13] & y__h22557 ;
  assign y__h22929 = temp_c[14] & y__h22743 ;
  assign y__h23115 = temp_c[15] & y__h22929 ;
  assign y__h23301 = temp_c[16] & y__h23115 ;
  assign y__h23487 = temp_c[17] & y__h23301 ;
  assign y__h23673 = temp_c[18] & y__h23487 ;
  assign y__h23859 = temp_c[19] & y__h23673 ;
  assign y__h24045 = temp_c[20] & y__h23859 ;
  assign y__h24231 = temp_c[21] & y__h24045 ;
  assign y__h24417 = temp_c[22] & y__h24231 ;
  assign y__h24603 = temp_c[23] & y__h24417 ;
  assign y__h24789 = temp_c[24] & y__h24603 ;
  assign y__h24975 = temp_c[25] & y__h24789 ;
  assign y__h25161 = temp_c[26] & y__h24975 ;
  assign y__h25347 = temp_c[27] & y__h25161 ;
  assign y__h25533 = temp_c[28] & y__h25347 ;
  assign y__h25719 = temp_c[29] & y__h25533 ;
  assign y__h25905 = temp_c[30] & y__h25719 ;
  assign y__h26091 = temp_c[31] & y__h25905 ;
  assign y__h26277 = temp_c[32] & y__h26091 ;
  assign y__h26463 = temp_c[33] & y__h26277 ;
  assign y__h26649 = temp_c[34] & y__h26463 ;
  assign y__h26835 = temp_c[35] & y__h26649 ;
  assign y__h27021 = temp_c[36] & y__h26835 ;
  assign y__h27207 = temp_c[37] & y__h27021 ;
  assign y__h27393 = temp_c[38] & y__h27207 ;
  assign y__h27579 = temp_c[39] & y__h27393 ;
  assign y__h27765 = temp_c[40] & y__h27579 ;
  assign y__h27951 = temp_c[41] & y__h27765 ;
  assign y__h28137 = temp_c[42] & y__h27951 ;
  assign y__h28323 = temp_c[43] & y__h28137 ;
  assign y__h28509 = temp_c[44] & y__h28323 ;
  assign y__h28695 = temp_c[45] & y__h28509 ;
  assign y__h28881 = temp_c[46] & y__h28695 ;
  assign y__h29067 = temp_c[47] & y__h28881 ;
  assign y__h29253 = temp_c[48] & y__h29067 ;
  assign y__h29463 = temp_s[0] & IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0] ;
  assign y__h29465 = temp_c[1] ^ y__h20613 ;
  assign y__h29591 = x__h29648 | y__h29649 ;
  assign y__h29593 = temp_c[2] ^ y__h20511 ;
  assign y__h29649 = x__h29462 & y__h29463 ;
  assign y__h29780 = x__h29837 | y__h29838 ;
  assign y__h29782 = temp_c[3] ^ y__h20697 ;
  assign y__h29838 = x__h29590 & y__h29591 ;
  assign y__h29969 = x__h30026 | y__h30027 ;
  assign y__h29971 = temp_c[4] ^ y__h20883 ;
  assign y__h30027 = x__h29779 & y__h29780 ;
  assign y__h30158 = x__h30215 | y__h30216 ;
  assign y__h30160 = temp_c[5] ^ y__h21069 ;
  assign y__h30216 = x__h29968 & y__h29969 ;
  assign y__h30347 = x__h30404 | y__h30405 ;
  assign y__h30349 = temp_c[6] ^ y__h21255 ;
  assign y__h30405 = x__h30157 & y__h30158 ;
  assign y__h30536 = x__h30593 | y__h30594 ;
  assign y__h30538 = temp_c[7] ^ y__h21441 ;
  assign y__h30594 = x__h30346 & y__h30347 ;
  assign y__h30725 = x__h30782 | y__h30783 ;
  assign y__h30727 = temp_c[8] ^ y__h21627 ;
  assign y__h30783 = x__h30535 & y__h30536 ;
  assign y__h30914 = x__h30971 | y__h30972 ;
  assign y__h30916 = temp_c[9] ^ y__h21813 ;
  assign y__h30972 = x__h30724 & y__h30725 ;
  assign y__h31103 = x__h31160 | y__h31161 ;
  assign y__h31105 = temp_c[10] ^ y__h21999 ;
  assign y__h31161 = x__h30913 & y__h30914 ;
  assign y__h31292 = x__h31349 | y__h31350 ;
  assign y__h31294 = temp_c[11] ^ y__h22185 ;
  assign y__h31350 = x__h31102 & y__h31103 ;
  assign y__h31481 = x__h31538 | y__h31539 ;
  assign y__h31483 = temp_c[12] ^ y__h22371 ;
  assign y__h31539 = x__h31291 & y__h31292 ;
  assign y__h31670 = x__h31727 | y__h31728 ;
  assign y__h31672 = temp_c[13] ^ y__h22557 ;
  assign y__h31728 = x__h31480 & y__h31481 ;
  assign y__h31859 = x__h31916 | y__h31917 ;
  assign y__h31861 = temp_c[14] ^ y__h22743 ;
  assign y__h31917 = x__h31669 & y__h31670 ;
  assign y__h32048 = x__h32105 | y__h32106 ;
  assign y__h32050 = temp_c[15] ^ y__h22929 ;
  assign y__h32106 = x__h31858 & y__h31859 ;
  assign y__h32237 = x__h32294 | y__h32295 ;
  assign y__h32239 = temp_c[16] ^ y__h23115 ;
  assign y__h32295 = x__h32047 & y__h32048 ;
  assign y__h32426 = x__h32483 | y__h32484 ;
  assign y__h32428 = temp_c[17] ^ y__h23301 ;
  assign y__h32484 = x__h32236 & y__h32237 ;
  assign y__h32615 = x__h32672 | y__h32673 ;
  assign y__h32617 = temp_c[18] ^ y__h23487 ;
  assign y__h32673 = x__h32425 & y__h32426 ;
  assign y__h32804 = x__h32861 | y__h32862 ;
  assign y__h32806 = temp_c[19] ^ y__h23673 ;
  assign y__h32862 = x__h32614 & y__h32615 ;
  assign y__h32993 = x__h33050 | y__h33051 ;
  assign y__h32995 = temp_c[20] ^ y__h23859 ;
  assign y__h33051 = x__h32803 & y__h32804 ;
  assign y__h33182 = x__h33239 | y__h33240 ;
  assign y__h33184 = temp_c[21] ^ y__h24045 ;
  assign y__h33240 = x__h32992 & y__h32993 ;
  assign y__h33371 = x__h33428 | y__h33429 ;
  assign y__h33373 = temp_c[22] ^ y__h24231 ;
  assign y__h33429 = x__h33181 & y__h33182 ;
  assign y__h33560 = x__h33617 | y__h33618 ;
  assign y__h33562 = temp_c[23] ^ y__h24417 ;
  assign y__h33618 = x__h33370 & y__h33371 ;
  assign y__h33749 = x__h33806 | y__h33807 ;
  assign y__h33751 = temp_c[24] ^ y__h24603 ;
  assign y__h33807 = x__h33559 & y__h33560 ;
  assign y__h33938 = x__h33995 | y__h33996 ;
  assign y__h33940 = temp_c[25] ^ y__h24789 ;
  assign y__h33996 = x__h33748 & y__h33749 ;
  assign y__h34127 = x__h34184 | y__h34185 ;
  assign y__h34129 = temp_c[26] ^ y__h24975 ;
  assign y__h34185 = x__h33937 & y__h33938 ;
  assign y__h34316 = x__h34373 | y__h34374 ;
  assign y__h34318 = temp_c[27] ^ y__h25161 ;
  assign y__h34374 = x__h34126 & y__h34127 ;
  assign y__h34505 = x__h34562 | y__h34563 ;
  assign y__h34507 = temp_c[28] ^ y__h25347 ;
  assign y__h34563 = x__h34315 & y__h34316 ;
  assign y__h34694 = x__h34751 | y__h34752 ;
  assign y__h34696 = temp_c[29] ^ y__h25533 ;
  assign y__h34752 = x__h34504 & y__h34505 ;
  assign y__h34883 = x__h34940 | y__h34941 ;
  assign y__h34885 = temp_c[30] ^ y__h25719 ;
  assign y__h34941 = x__h34693 & y__h34694 ;
  assign y__h35072 = x__h35129 | y__h35130 ;
  assign y__h35074 = temp_c[31] ^ y__h25905 ;
  assign y__h35130 = x__h34882 & y__h34883 ;
  assign y__h35261 = x__h35318 | y__h35319 ;
  assign y__h35263 = temp_c[32] ^ y__h26091 ;
  assign y__h35319 = x__h35071 & y__h35072 ;
  assign y__h35450 = x__h35507 | y__h35508 ;
  assign y__h35452 = temp_c[33] ^ y__h26277 ;
  assign y__h35508 = x__h35260 & y__h35261 ;
  assign y__h35639 = x__h35696 | y__h35697 ;
  assign y__h35641 = temp_c[34] ^ y__h26463 ;
  assign y__h35697 = x__h35449 & y__h35450 ;
  assign y__h35828 = x__h35885 | y__h35886 ;
  assign y__h35830 = temp_c[35] ^ y__h26649 ;
  assign y__h35886 = x__h35638 & y__h35639 ;
  assign y__h36017 = x__h36074 | y__h36075 ;
  assign y__h36019 = temp_c[36] ^ y__h26835 ;
  assign y__h36075 = x__h35827 & y__h35828 ;
  assign y__h36206 = x__h36263 | y__h36264 ;
  assign y__h36208 = temp_c[37] ^ y__h27021 ;
  assign y__h36264 = x__h36016 & y__h36017 ;
  assign y__h36395 = x__h36452 | y__h36453 ;
  assign y__h36397 = temp_c[38] ^ y__h27207 ;
  assign y__h36453 = x__h36205 & y__h36206 ;
  assign y__h36584 = x__h36641 | y__h36642 ;
  assign y__h36586 = temp_c[39] ^ y__h27393 ;
  assign y__h36642 = x__h36394 & y__h36395 ;
  assign y__h36773 = x__h36830 | y__h36831 ;
  assign y__h36775 = temp_c[40] ^ y__h27579 ;
  assign y__h36831 = x__h36583 & y__h36584 ;
  assign y__h36962 = x__h37019 | y__h37020 ;
  assign y__h36964 = temp_c[41] ^ y__h27765 ;
  assign y__h37020 = x__h36772 & y__h36773 ;
  assign y__h37151 = x__h37208 | y__h37209 ;
  assign y__h37153 = temp_c[42] ^ y__h27951 ;
  assign y__h37209 = x__h36961 & y__h36962 ;
  assign y__h37340 = x__h37397 | y__h37398 ;
  assign y__h37342 = temp_c[43] ^ y__h28137 ;
  assign y__h37398 = x__h37150 & y__h37151 ;
  assign y__h37529 = x__h37586 | y__h37587 ;
  assign y__h37531 = temp_c[44] ^ y__h28323 ;
  assign y__h37587 = x__h37339 & y__h37340 ;
  assign y__h37718 = x__h37775 | y__h37776 ;
  assign y__h37720 = temp_c[45] ^ y__h28509 ;
  assign y__h37776 = x__h37528 & y__h37529 ;
  assign y__h37907 = x__h37964 | y__h37965 ;
  assign y__h37909 = temp_c[46] ^ y__h28695 ;
  assign y__h37965 = x__h37717 & y__h37718 ;
  assign y__h38096 = x__h38153 | y__h38154 ;
  assign y__h38098 = temp_c[47] ^ y__h28881 ;
  assign y__h38154 = x__h37906 & y__h37907 ;
  assign y__h38285 = x__h38342 | y__h38343 ;
  assign y__h38287 = temp_c[48] ^ y__h29067 ;
  assign y__h38343 = x__h38095 & y__h38096 ;
  assign y__h38474 = x__h38531 | y__h38532 ;
  assign y__h38476 = temp_c[49] ^ y__h29253 ;
  assign y__h38532 = x__h38284 & y__h38285 ;
  assign y__h40850 = tmp_exp[1] | y__h40909 ;
  assign y__h40909 = x__h40954 & tmp_exp[0] ;
  assign y__h41041 = tmp_exp[2] | y__h41100 ;
  assign y__h41100 = x__h41145 & y__h40850 ;
  assign y__h41232 = tmp_exp[3] | y__h41291 ;
  assign y__h41291 = x__h41336 & y__h41041 ;
  assign y__h41423 = tmp_exp[4] | y__h41482 ;
  assign y__h41482 = x__h41527 & y__h41232 ;
  assign y__h41614 = tmp_exp[5] | y__h41673 ;
  assign y__h41673 = x__h41718 & y__h41423 ;
  assign y__h41805 = tmp_exp[6] | y__h41864 ;
  assign y__h41864 = x__h41909 & y__h41614 ;
  assign y__h4353 = !c[24] & IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h45145 = temp_man[27] & temp_man[26] ;
  assign y__h45331 = temp_man[28] & y__h45145 ;
  assign y__h4539 = !c[25] & y__h4353 ;
  assign y__h45517 = temp_man[29] & y__h45331 ;
  assign y__h45703 = temp_man[30] & y__h45517 ;
  assign y__h45889 = temp_man[31] & y__h45703 ;
  assign y__h46075 = temp_man[32] & y__h45889 ;
  assign y__h46261 = temp_man[33] & y__h46075 ;
  assign y__h46447 = temp_man[34] & y__h46261 ;
  assign y__h46633 = temp_man[35] & y__h46447 ;
  assign y__h46819 = temp_man[36] & y__h46633 ;
  assign y__h47005 = temp_man[37] & y__h46819 ;
  assign y__h47191 = temp_man[38] & y__h47005 ;
  assign y__h4725 = !c[26] & y__h4539 ;
  assign y__h47377 = temp_man[39] & y__h47191 ;
  assign y__h47563 = temp_man[40] & y__h47377 ;
  assign y__h47749 = temp_man[41] & y__h47563 ;
  assign y__h47935 = temp_man[42] & y__h47749 ;
  assign y__h48121 = temp_man[43] & y__h47935 ;
  assign y__h48307 = temp_man[44] & y__h48121 ;
  assign y__h48493 = temp_man[45] & y__h48307 ;
  assign y__h48679 = temp_man[46] & y__h48493 ;
  assign y__h48865 = temp_man[47] & y__h48679 ;
  assign y__h49051 = temp_man[48] & y__h48865 ;
  assign y__h4911 = !c[27] & y__h4725 ;
  assign y__h5097 = !c[28] & y__h4911 ;
  assign y__h5283 = !c[29] & y__h5097 ;
  assign y__h54381 = x__h54254 & IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] ;
  assign y__h54567 = x__h54380 & y__h54381 ;
  assign y__h54753 = x__h54566 & y__h54567 ;
  assign y__h54939 = x__h54752 & y__h54753 ;
  assign y__h5494 =
	     tmp_exp[0] &
	     IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0] ;
  assign y__h5496 = !c[24] ^ IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h55125 = x__h54938 & y__h54939 ;
  assign y__h55311 = x__h55124 & y__h55125 ;
  assign y__h5622 = x__h5679 | y__h5680 ;
  assign y__h5624 = !c[25] ^ y__h4353 ;
  assign y__h5680 = x__h5493 & y__h5494 ;
  assign y__h56984 = temp_man[26] & temp_man[25] ;
  assign y__h57170 = temp_man[27] & y__h56984 ;
  assign y__h57356 = temp_man[28] & y__h57170 ;
  assign y__h57542 = temp_man[29] & y__h57356 ;
  assign y__h57728 = temp_man[30] & y__h57542 ;
  assign y__h57914 = temp_man[31] & y__h57728 ;
  assign y__h58100 = temp_man[32] & y__h57914 ;
  assign y__h5811 = x__h5868 | y__h5869 ;
  assign y__h5813 = !c[26] ^ y__h4539 ;
  assign y__h58286 = temp_man[33] & y__h58100 ;
  assign y__h58472 = temp_man[34] & y__h58286 ;
  assign y__h58658 = temp_man[35] & y__h58472 ;
  assign y__h5869 = x__h5621 & y__h5622 ;
  assign y__h58844 = temp_man[36] & y__h58658 ;
  assign y__h59030 = temp_man[37] & y__h58844 ;
  assign y__h59216 = temp_man[38] & y__h59030 ;
  assign y__h59402 = temp_man[39] & y__h59216 ;
  assign y__h59588 = temp_man[40] & y__h59402 ;
  assign y__h59774 = temp_man[41] & y__h59588 ;
  assign y__h59960 = temp_man[42] & y__h59774 ;
  assign y__h6000 = x__h6057 | y__h6058 ;
  assign y__h6002 = !c[27] ^ y__h4725 ;
  assign y__h60146 = temp_man[43] & y__h59960 ;
  assign y__h60332 = temp_man[44] & y__h60146 ;
  assign y__h60518 = temp_man[45] & y__h60332 ;
  assign y__h6058 = x__h5810 & y__h5811 ;
  assign y__h60704 = temp_man[46] & y__h60518 ;
  assign y__h60890 = temp_man[47] & y__h60704 ;
  assign y__h61076 = temp_man[48] & y__h60890 ;
  assign y__h6189 = x__h6246 | y__h6247 ;
  assign y__h6191 = !c[28] ^ y__h4911 ;
  assign y__h6247 = x__h5999 & y__h6000 ;
  assign y__h6378 = x__h6435 | y__h6436 ;
  assign y__h6380 = !c[29] ^ y__h5097 ;
  assign y__h6436 = x__h6188 & y__h6189 ;
  assign y__h6567 = x__h6624 | y__h6625 ;
  assign y__h6569 = x__h5282 ^ y__h5283 ;
  assign y__h66225 = tmp_exp[1] & tmp_exp[0] ;
  assign y__h6625 = x__h6377 & y__h6378 ;
  assign y__h66414 = tmp_exp[2] & y__h66225 ;
  assign y__h66603 = tmp_exp[3] & y__h66414 ;
  assign y__h66792 = tmp_exp[4] & y__h66603 ;
  assign y__h66981 = tmp_exp[5] & y__h66792 ;
  assign y__h67170 = tmp_exp[6] & y__h66981 ;
  assign y__h8650 = x__h8708 | y__h8709 ;
  assign y__h8709 = x__h8755 & y__h8756 ;
  assign y__h8756 = temp_s[0] & temp_c[0] ;
  assign y__h8842 = x__h8900 | y__h8901 ;
  assign y__h8901 = x__h8947 & y__h8650 ;
  assign y__h9034 = x__h9092 | y__h9093 ;
  assign y__h9093 = x__h9139 & y__h8842 ;
  assign y__h9226 = x__h9284 | y__h9285 ;
  assign y__h9285 = x__h9331 & y__h9034 ;
  assign y__h9418 = x__h9476 | y__h9477 ;
  assign y__h9477 = x__h9523 & y__h9226 ;
  assign y__h9610 = x__h9668 | y__h9669 ;
  assign y__h9669 = x__h9715 & y__h9418 ;
  assign y__h9802 = x__h9860 | y__h9861 ;
  assign y__h9861 = x__h9907 & y__h9610 ;
  assign y__h9994 = x__h10052 | y__h10053 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        add_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	add_or_sub <= `BSV_ASSIGNMENT_DELAY 2'b0;
	add_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	addition_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	adj_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	align_man_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c <= `BSV_ASSIGNMENT_DELAY 32'd0;
	calc_fraction_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cmp_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	end_result <= `BSV_ASSIGNMENT_DELAY 32'd0;
	exp_diff <= `BSV_ASSIGNMENT_DELAY 8'd0;
	exp_mantissa <= `BSV_ASSIGNMENT_DELAY 31'd0;
	exp_res <= `BSV_ASSIGNMENT_DELAY 8'd0;
	fifo_add_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	fifo_c_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	fifo_s_rv <= `BSV_ASSIGNMENT_DELAY
	    { 1'd0,
	      32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
	get_r <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_c <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_s <= `BSV_ASSIGNMENT_DELAY 1'd0;
	handle_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	input_no <= `BSV_ASSIGNMENT_DELAY 1'b0;
	input_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_res <= `BSV_ASSIGNMENT_DELAY 23'd0;
	pack_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	result_concatenated <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sign_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	swap_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	temp_c <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_man <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_s <= `BSV_ASSIGNMENT_DELAY 50'd0;
	tmp_exp <= `BSV_ASSIGNMENT_DELAY 8'd0;
	tmp_res <= `BSV_ASSIGNMENT_DELAY 24'd0;
	tmp_sign <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (add_done_EN) add_done <= `BSV_ASSIGNMENT_DELAY add_done_D_IN;
	if (add_or_sub_EN)
	  add_or_sub <= `BSV_ASSIGNMENT_DELAY add_or_sub_D_IN;
	if (add_start_EN) add_start <= `BSV_ASSIGNMENT_DELAY add_start_D_IN;
	if (addition_start_EN)
	  addition_start <= `BSV_ASSIGNMENT_DELAY addition_start_D_IN;
	if (adj_exp_done_EN)
	  adj_exp_done <= `BSV_ASSIGNMENT_DELAY adj_exp_done_D_IN;
	if (align_man_done_EN)
	  align_man_done <= `BSV_ASSIGNMENT_DELAY align_man_done_D_IN;
	if (c_EN) c <= `BSV_ASSIGNMENT_DELAY c_D_IN;
	if (calc_fraction_done_EN)
	  calc_fraction_done <= `BSV_ASSIGNMENT_DELAY calc_fraction_done_D_IN;
	if (cmp_exp_done_EN)
	  cmp_exp_done <= `BSV_ASSIGNMENT_DELAY cmp_exp_done_D_IN;
	if (end_result_EN)
	  end_result <= `BSV_ASSIGNMENT_DELAY end_result_D_IN;
	if (exp_diff_EN) exp_diff <= `BSV_ASSIGNMENT_DELAY exp_diff_D_IN;
	if (exp_mantissa_EN)
	  exp_mantissa <= `BSV_ASSIGNMENT_DELAY exp_mantissa_D_IN;
	if (exp_res_EN) exp_res <= `BSV_ASSIGNMENT_DELAY exp_res_D_IN;
	if (fifo_add_rv_EN)
	  fifo_add_rv <= `BSV_ASSIGNMENT_DELAY fifo_add_rv_D_IN;
	if (fifo_c_rv_EN) fifo_c_rv <= `BSV_ASSIGNMENT_DELAY fifo_c_rv_D_IN;
	if (fifo_s_rv_EN) fifo_s_rv <= `BSV_ASSIGNMENT_DELAY fifo_s_rv_D_IN;
	if (get_r_EN) get_r <= `BSV_ASSIGNMENT_DELAY get_r_D_IN;
	if (got_c_EN) got_c <= `BSV_ASSIGNMENT_DELAY got_c_D_IN;
	if (got_s_EN) got_s <= `BSV_ASSIGNMENT_DELAY got_s_D_IN;
	if (handle_zero_EN)
	  handle_zero <= `BSV_ASSIGNMENT_DELAY handle_zero_D_IN;
	if (input_no_EN) input_no <= `BSV_ASSIGNMENT_DELAY input_no_D_IN;
	if (input_zero_EN)
	  input_zero <= `BSV_ASSIGNMENT_DELAY input_zero_D_IN;
	if (mantissa_done_EN)
	  mantissa_done <= `BSV_ASSIGNMENT_DELAY mantissa_done_D_IN;
	if (mantissa_res_EN)
	  mantissa_res <= `BSV_ASSIGNMENT_DELAY mantissa_res_D_IN;
	if (pack_done_EN) pack_done <= `BSV_ASSIGNMENT_DELAY pack_done_D_IN;
	if (result_concatenated_EN)
	  result_concatenated <= `BSV_ASSIGNMENT_DELAY
	      result_concatenated_D_IN;
	if (s_EN) s <= `BSV_ASSIGNMENT_DELAY s_D_IN;
	if (sign_done_EN) sign_done <= `BSV_ASSIGNMENT_DELAY sign_done_D_IN;
	if (swap_done_EN) swap_done <= `BSV_ASSIGNMENT_DELAY swap_done_D_IN;
	if (temp_c_EN) temp_c <= `BSV_ASSIGNMENT_DELAY temp_c_D_IN;
	if (temp_man_EN) temp_man <= `BSV_ASSIGNMENT_DELAY temp_man_D_IN;
	if (temp_s_EN) temp_s <= `BSV_ASSIGNMENT_DELAY temp_s_D_IN;
	if (tmp_exp_EN) tmp_exp <= `BSV_ASSIGNMENT_DELAY tmp_exp_D_IN;
	if (tmp_res_EN) tmp_res <= `BSV_ASSIGNMENT_DELAY tmp_res_D_IN;
	if (tmp_sign_EN) tmp_sign <= `BSV_ASSIGNMENT_DELAY tmp_sign_D_IN;
      end
  end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    add_done = 1'h0;
    add_or_sub = 2'h2;
    add_start = 1'h0;
    addition_start = 1'h0;
    adj_exp_done = 1'h0;
    align_man_done = 1'h0;
    c = 32'hAAAAAAAA;
    calc_fraction_done = 1'h0;
    cmp_exp_done = 1'h0;
    end_result = 32'hAAAAAAAA;
    exp_diff = 8'hAA;
    exp_mantissa = 31'h2AAAAAAA;
    exp_res = 8'hAA;
    fifo_add_rv = 33'h0AAAAAAAA;
    fifo_c_rv = 33'h0AAAAAAAA;
    fifo_s_rv = 33'h0AAAAAAAA;
    get_r = 1'h0;
    got_c = 1'h0;
    got_s = 1'h0;
    handle_zero = 1'h0;
    input_no = 1'h0;
    input_zero = 1'h0;
    mantissa_done = 1'h0;
    mantissa_res = 23'h2AAAAA;
    pack_done = 1'h0;
    result_concatenated = 1'h0;
    s = 32'hAAAAAAAA;
    sign_done = 1'h0;
    swap_done = 1'h0;
    temp_c = 50'h2AAAAAAAAAAAA;
    temp_man = 50'h2AAAAAAAAAAAA;
    temp_s = 50'h2AAAAAAAAAAAA;
    tmp_exp = 8'hAA;
    tmp_res = 24'hAAAAAA;
    tmp_sign = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	begin
	  v__h2669 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	$display(v__h2669, " After Swapping s: %b c: %b", s, c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6844 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6844, "i s_mantissa new %b", temp_s);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6892 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6892, "i c_mantissa new %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6942 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6942, "i Exponent difference %d", exp_diff);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	begin
	  v__h7195 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	$display(v__h7195, " shifted mantissa of c %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	begin
	  v__h17868 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	$display(v__h17868, " Adding the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	begin
	  v__h38665 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	$display(v__h38665, " Subtracting the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	begin
	  v__h38789 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	$display(v__h38789, " calculated mantissa c %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	begin
	  v__h42041 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	$display(v__h42041, " mantissa: %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	begin
	  v__h67550 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	$display(v__h67550,
		 " End Result sign:%b exp: %b mantissa: %b ",
		 tmp_sign,
		 exp_mantissa[30:23],
		 exp_mantissa[22:0]);
  end
  // synopsys translate_on
endmodule  // mkPipelined_float_add

