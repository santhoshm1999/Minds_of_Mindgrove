=== Generated schedule for mkUnpipelined_float ===

Method schedule
---------------
Method: get_input_a
Ready signal: ! got_rg_a
Conflict-free: get_input_b, get_input_s, get_input_c, get_MAC_result
Conflicts: get_input_a
 
Method: get_input_b
Ready signal: ! got_rg_b
Conflict-free: get_input_a, get_input_s, get_input_c, get_MAC_result
Conflicts: get_input_b
 
Method: get_input_s
Ready signal: True
Conflict-free: get_input_a,
	       get_input_b,
	       get_input_s,
	       get_input_c,
	       get_MAC_result
 
Method: get_input_c
Ready signal: ! got_rg_c
Conflict-free: get_input_a, get_input_b, get_input_s, get_MAC_result
Conflicts: get_input_c
 
Method: get_MAC_result
Ready signal: mac_completed
Conflict-free: get_input_a,
	       get_input_b,
	       get_input_s,
	       get_input_c,
	       get_MAC_result
 
Rule schedule
-------------
Rule: rl_put_mul_val
Predicate: mul.RDY_get_inp_a && mul.RDY_get_inp_b &&
	   got_rg_a && got_rg_b && (! mul_started)
Blocking rules: (none)
 
Rule: get_mul_result
Predicate: mul.RDY_get_result && mul_started
Blocking rules: (none)
 
Rule: rl_put_add_val
Predicate: add.RDY_get_inp_c && add.RDY_get_inp_s &&
	   got_rg_a && got_rg_b && got_rg_c && mul_done && (! add_started)
Blocking rules: (none)
 
Rule: rl_get_add_result
Predicate: add.RDY_get_result && add_started
Blocking rules: (none)
 
Rule: rl_deassert_signals
Predicate: mac_completed
Blocking rules: rl_get_add_result
 
Logical execution order: get_input_a,
			 get_input_b,
			 get_input_s,
			 get_input_c,
			 get_MAC_result,
			 rl_put_add_val,
			 get_mul_result,
			 rl_put_mul_val,
			 rl_get_add_result,
			 rl_deassert_signals

===================================================
