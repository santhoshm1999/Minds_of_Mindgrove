//
// Generated by Bluespec Compiler, version untagged-g2930c314 (build 2930c314)
//
// On Mon Nov 25 05:07:48 IST 2024
//
//
// Ports:
// Name                         I/O  size props
// RDY_get_inp_s                  O     1
// RDY_get_inp_c                  O     1
// get_result                     O    32
// RDY_get_result                 O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// get_inp_s_inp_S                I    32
// get_inp_c_inp_C                I    32
// EN_get_inp_s                   I     1
// EN_get_inp_c                   I     1
// EN_get_result                  I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkPipelined_float_add(CLK,
			     RST_N,

			     get_inp_s_inp_S,
			     EN_get_inp_s,
			     RDY_get_inp_s,

			     get_inp_c_inp_C,
			     EN_get_inp_c,
			     RDY_get_inp_c,

			     EN_get_result,
			     get_result,
			     RDY_get_result);
  input  CLK;
  input  RST_N;

  // action method get_inp_s
  input  [31 : 0] get_inp_s_inp_S;
  input  EN_get_inp_s;
  output RDY_get_inp_s;

  // action method get_inp_c
  input  [31 : 0] get_inp_c_inp_C;
  input  EN_get_inp_c;
  output RDY_get_inp_c;

  // actionvalue method get_result
  input  EN_get_result;
  output [31 : 0] get_result;
  output RDY_get_result;

  // signals for module outputs
  wire [31 : 0] get_result;
  wire RDY_get_inp_c, RDY_get_inp_s, RDY_get_result;

  // inlined wires
  wire [32 : 0] fifo_add_rv_port0__write_1,
		fifo_add_rv_port1__read,
		fifo_add_rv_port1__write_1,
		fifo_add_rv_port2__read,
		fifo_c_rv_port1__write_1,
		fifo_c_rv_port2__read,
		fifo_s_rv_port1__write_1,
		fifo_s_rv_port2__read;
  wire fifo_add_rv_EN_port1__write;

  // register add_done
  reg add_done;
  wire add_done_D_IN, add_done_EN;

  // register add_or_sub
  reg [1 : 0] add_or_sub;
  wire [1 : 0] add_or_sub_D_IN;
  wire add_or_sub_EN;

  // register add_start
  reg add_start;
  wire add_start_D_IN, add_start_EN;

  // register addition_start
  reg addition_start;
  wire addition_start_D_IN, addition_start_EN;

  // register adj_exp_done
  reg adj_exp_done;
  wire adj_exp_done_D_IN, adj_exp_done_EN;

  // register align_man_done
  reg align_man_done;
  wire align_man_done_D_IN, align_man_done_EN;

  // register c
  reg [31 : 0] c;
  wire [31 : 0] c_D_IN;
  wire c_EN;

  // register calc_fraction_done
  reg calc_fraction_done;
  wire calc_fraction_done_D_IN, calc_fraction_done_EN;

  // register cmp_exp_done
  reg cmp_exp_done;
  wire cmp_exp_done_D_IN, cmp_exp_done_EN;

  // register end_result
  reg [31 : 0] end_result;
  wire [31 : 0] end_result_D_IN;
  wire end_result_EN;

  // register exp_diff
  reg [7 : 0] exp_diff;
  wire [7 : 0] exp_diff_D_IN;
  wire exp_diff_EN;

  // register exp_mantissa
  reg [30 : 0] exp_mantissa;
  wire [30 : 0] exp_mantissa_D_IN;
  wire exp_mantissa_EN;

  // register exp_res
  reg [7 : 0] exp_res;
  wire [7 : 0] exp_res_D_IN;
  wire exp_res_EN;

  // register fifo_add_rv
  reg [32 : 0] fifo_add_rv;
  wire [32 : 0] fifo_add_rv_D_IN;
  wire fifo_add_rv_EN;

  // register fifo_c_rv
  reg [32 : 0] fifo_c_rv;
  wire [32 : 0] fifo_c_rv_D_IN;
  wire fifo_c_rv_EN;

  // register fifo_s_rv
  reg [32 : 0] fifo_s_rv;
  wire [32 : 0] fifo_s_rv_D_IN;
  wire fifo_s_rv_EN;

  // register get_r
  reg get_r;
  wire get_r_D_IN, get_r_EN;

  // register got_c
  reg got_c;
  wire got_c_D_IN, got_c_EN;

  // register got_s
  reg got_s;
  wire got_s_D_IN, got_s_EN;

  // register handle_zero
  reg handle_zero;
  wire handle_zero_D_IN, handle_zero_EN;

  // register input_no
  reg input_no;
  wire input_no_D_IN, input_no_EN;

  // register input_zero
  reg input_zero;
  wire input_zero_D_IN, input_zero_EN;

  // register mantissa_done
  reg mantissa_done;
  wire mantissa_done_D_IN, mantissa_done_EN;

  // register mantissa_res
  reg [22 : 0] mantissa_res;
  wire [22 : 0] mantissa_res_D_IN;
  wire mantissa_res_EN;

  // register pack_done
  reg pack_done;
  wire pack_done_D_IN, pack_done_EN;

  // register result_concatenated
  reg result_concatenated;
  wire result_concatenated_D_IN, result_concatenated_EN;

  // register s
  reg [31 : 0] s;
  wire [31 : 0] s_D_IN;
  wire s_EN;

  // register sign_done
  reg sign_done;
  wire sign_done_D_IN, sign_done_EN;

  // register swap_done
  reg swap_done;
  wire swap_done_D_IN, swap_done_EN;

  // register temp_c
  reg [49 : 0] temp_c;
  wire [49 : 0] temp_c_D_IN;
  wire temp_c_EN;

  // register temp_man
  reg [49 : 0] temp_man;
  wire [49 : 0] temp_man_D_IN;
  wire temp_man_EN;

  // register temp_s
  reg [49 : 0] temp_s;
  wire [49 : 0] temp_s_D_IN;
  wire temp_s_EN;

  // register tmp_exp
  reg [7 : 0] tmp_exp;
  wire [7 : 0] tmp_exp_D_IN;
  wire tmp_exp_EN;

  // register tmp_res
  reg [23 : 0] tmp_res;
  wire [23 : 0] tmp_res_D_IN;
  wire tmp_res_EN;

  // register tmp_sign
  reg tmp_sign;
  wire tmp_sign_D_IN, tmp_sign_EN;

  // rule scheduling signals
  wire CAN_FIRE_RL_rl_add_or_sub_exp,
       CAN_FIRE_RL_rl_add_start,
       CAN_FIRE_RL_rl_adj_exp,
       CAN_FIRE_RL_rl_adj_mantissa,
       CAN_FIRE_RL_rl_align_exp,
       CAN_FIRE_RL_rl_assemble_result,
       CAN_FIRE_RL_rl_cmp_exp,
       CAN_FIRE_RL_rl_deassert_signals,
       CAN_FIRE_RL_rl_get_sign,
       CAN_FIRE_RL_rl_handle_zero_val,
       CAN_FIRE_RL_rl_swap,
       CAN_FIRE_get_inp_c,
       CAN_FIRE_get_inp_s,
       CAN_FIRE_get_result,
       WILL_FIRE_RL_rl_add_or_sub_exp,
       WILL_FIRE_RL_rl_add_start,
       WILL_FIRE_RL_rl_adj_exp,
       WILL_FIRE_RL_rl_adj_mantissa,
       WILL_FIRE_RL_rl_align_exp,
       WILL_FIRE_RL_rl_assemble_result,
       WILL_FIRE_RL_rl_cmp_exp,
       WILL_FIRE_RL_rl_deassert_signals,
       WILL_FIRE_RL_rl_get_sign,
       WILL_FIRE_RL_rl_handle_zero_val,
       WILL_FIRE_RL_rl_swap,
       WILL_FIRE_get_inp_c,
       WILL_FIRE_get_inp_s,
       WILL_FIRE_get_result;

  // inputs to muxes for submodule ports
  wire [49 : 0] MUX_temp_c_write_1__VAL_1,
		MUX_temp_c_write_1__VAL_2,
		MUX_temp_man_write_1__VAL_1,
		MUX_temp_man_write_1__VAL_2;
  wire [32 : 0] MUX_fifo_add_rv_port1__write_1__VAL_1,
		MUX_fifo_add_rv_port1__write_1__VAL_2;
  wire [7 : 0] MUX_tmp_exp_write_1__VAL_1;
  wire [1 : 0] MUX_add_or_sub_write_1__VAL_1;
  wire MUX_add_or_sub_write_1__SEL_2,
       MUX_adj_exp_done_write_1__SEL_1,
       MUX_c_write_1__SEL_1,
       MUX_input_zero_write_1__SEL_2,
       MUX_temp_man_write_1__SEL_1,
       MUX_temp_man_write_1__SEL_2;

  // declarations used by system tasks
  // synopsys translate_off
  reg [31 : 0] v__h2669;
  reg [31 : 0] v__h6848;
  reg [31 : 0] v__h6896;
  reg [31 : 0] v__h6946;
  reg [31 : 0] v__h7199;
  reg [31 : 0] v__h17874;
  reg [31 : 0] v__h38675;
  reg [31 : 0] v__h38799;
  reg [31 : 0] v__h42055;
  reg [31 : 0] v__h67571;
  // synopsys translate_on

  // remaining internal signals
  wire [49 : 0] IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6,
		IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5,
		IF_temp_c_BIT_0_THEN_1_ELSE_0__q3,
		IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9,
		IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8,
		x__h17945,
		x__h42002,
		x__h42013,
		x__h7276;
  wire [47 : 0] temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560,
		temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931;
  wire [45 : 0] temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559,
		temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930;
  wire [43 : 0] temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558,
		temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929;
  wire [41 : 0] temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557,
		temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928;
  wire [39 : 0] temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556,
		temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927;
  wire [37 : 0] temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555,
		temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926;
  wire [35 : 0] temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554,
		temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925;
  wire [33 : 0] temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553,
		temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924;
  wire [31 : 0] temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552,
		temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923;
  wire [30 : 0] IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224,
		IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140,
		IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139,
		IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223;
  wire [29 : 0] temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551,
		temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922;
  wire [27 : 0] temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550,
		temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921;
  wire [25 : 0] temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549,
		temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920;
  wire [23 : 0] temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548,
		temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919;
  wire [22 : 0] rounded_mantissa__h53999,
		rounded_mantissa__h65836,
		rounded_mantissa__h67422,
		rounded_mantissa__h67512;
  wire [21 : 0] temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547,
		temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918;
  wire [19 : 0] temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546,
		temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917;
  wire [17 : 0] temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545,
		temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916;
  wire [15 : 0] temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544,
		temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915;
  wire [13 : 0] temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543,
		temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914;
  wire [11 : 0] temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542,
		temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913;
  wire [9 : 0] temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912;
  wire [7 : 0] IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10,
	       IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4,
	       IF_c_BIT_23_THEN_0_ELSE_1__q1,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7,
	       _theResult___fst__h65837,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911;
  wire [6 : 0] tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088;
  wire [5 : 0] temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910,
	       tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162;
  wire [4 : 0] temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128,
	       tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087;
  wire [3 : 0] temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909,
	       tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161;
  wire [2 : 0] tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086;
  wire [1 : 0] temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908,
	       tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160;
  wire IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977,
       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56,
       NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63,
       NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231,
       add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166,
       s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34,
       s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41,
       s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33,
       s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38,
       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195,
       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111,
       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
       temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
       tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953,
       x__h10058,
       x__h10105,
       x__h10250,
       x__h10297,
       x__h10442,
       x__h10489,
       x__h10634,
       x__h10681,
       x__h10826,
       x__h10873,
       x__h11018,
       x__h11065,
       x__h11210,
       x__h11257,
       x__h11402,
       x__h11449,
       x__h11594,
       x__h11641,
       x__h11786,
       x__h11833,
       x__h11978,
       x__h12025,
       x__h12170,
       x__h12217,
       x__h12362,
       x__h12409,
       x__h12554,
       x__h12601,
       x__h12746,
       x__h12793,
       x__h12938,
       x__h12985,
       x__h13130,
       x__h13177,
       x__h13322,
       x__h13369,
       x__h13514,
       x__h13561,
       x__h13706,
       x__h13753,
       x__h13898,
       x__h13945,
       x__h14090,
       x__h14137,
       x__h14282,
       x__h14329,
       x__h14474,
       x__h14521,
       x__h14666,
       x__h14713,
       x__h14858,
       x__h14905,
       x__h15050,
       x__h15097,
       x__h15242,
       x__h15289,
       x__h15434,
       x__h15481,
       x__h15626,
       x__h15673,
       x__h15818,
       x__h15865,
       x__h16010,
       x__h16057,
       x__h16202,
       x__h16249,
       x__h16394,
       x__h16441,
       x__h16586,
       x__h16633,
       x__h16778,
       x__h16825,
       x__h16970,
       x__h17017,
       x__h17162,
       x__h17209,
       x__h17354,
       x__h17401,
       x__h17546,
       x__h17593,
       x__h17679,
       x__h17738,
       x__h17785,
       x__h29472,
       x__h29600,
       x__h29658,
       x__h29789,
       x__h29847,
       x__h29978,
       x__h30036,
       x__h30167,
       x__h30225,
       x__h30356,
       x__h30414,
       x__h30545,
       x__h30603,
       x__h30734,
       x__h30792,
       x__h30923,
       x__h30981,
       x__h31112,
       x__h31170,
       x__h31301,
       x__h31359,
       x__h31490,
       x__h31548,
       x__h31679,
       x__h31737,
       x__h31868,
       x__h31926,
       x__h32057,
       x__h32115,
       x__h32246,
       x__h32304,
       x__h32435,
       x__h32493,
       x__h32624,
       x__h32682,
       x__h32813,
       x__h32871,
       x__h33002,
       x__h33060,
       x__h33191,
       x__h33249,
       x__h33380,
       x__h33438,
       x__h33569,
       x__h33627,
       x__h33758,
       x__h33816,
       x__h33947,
       x__h34005,
       x__h34136,
       x__h34194,
       x__h34325,
       x__h34383,
       x__h34514,
       x__h34572,
       x__h34703,
       x__h34761,
       x__h34892,
       x__h34950,
       x__h35081,
       x__h35139,
       x__h35270,
       x__h35328,
       x__h35459,
       x__h35517,
       x__h35648,
       x__h35706,
       x__h35837,
       x__h35895,
       x__h36026,
       x__h36084,
       x__h36215,
       x__h36273,
       x__h36404,
       x__h36462,
       x__h36593,
       x__h36651,
       x__h36782,
       x__h36840,
       x__h36971,
       x__h37029,
       x__h37160,
       x__h37218,
       x__h37349,
       x__h37407,
       x__h37538,
       x__h37596,
       x__h37727,
       x__h37785,
       x__h37916,
       x__h37974,
       x__h38105,
       x__h38163,
       x__h38294,
       x__h38352,
       x__h38483,
       x__h38541,
       x__h40968,
       x__h41159,
       x__h41350,
       x__h41541,
       x__h41732,
       x__h41818,
       x__h41923,
       x__h5286,
       x__h54264,
       x__h54390,
       x__h54576,
       x__h54762,
       x__h54948,
       x__h5497,
       x__h55134,
       x__h5625,
       x__h5683,
       x__h5814,
       x__h5872,
       x__h6003,
       x__h6061,
       x__h6192,
       x__h6250,
       x__h6381,
       x__h6439,
       x__h6570,
       x__h6628,
       x__h8714,
       x__h8761,
       x__h8906,
       x__h8953,
       x__h9098,
       x__h9145,
       x__h9290,
       x__h9337,
       x__h9482,
       x__h9529,
       x__h9674,
       x__h9721,
       x__h9866,
       x__h9913,
       y__h10000,
       y__h10059,
       y__h10192,
       y__h10251,
       y__h10384,
       y__h10443,
       y__h10576,
       y__h10635,
       y__h10768,
       y__h10827,
       y__h10960,
       y__h11019,
       y__h11152,
       y__h11211,
       y__h11344,
       y__h11403,
       y__h11536,
       y__h11595,
       y__h11728,
       y__h11787,
       y__h11920,
       y__h11979,
       y__h12112,
       y__h12171,
       y__h12304,
       y__h12363,
       y__h12496,
       y__h12555,
       y__h12688,
       y__h12747,
       y__h12880,
       y__h12939,
       y__h13072,
       y__h13131,
       y__h13264,
       y__h13323,
       y__h13456,
       y__h13515,
       y__h13648,
       y__h13707,
       y__h13840,
       y__h13899,
       y__h14032,
       y__h14091,
       y__h14224,
       y__h14283,
       y__h14416,
       y__h14475,
       y__h14608,
       y__h14667,
       y__h14800,
       y__h14859,
       y__h14992,
       y__h15051,
       y__h15184,
       y__h15243,
       y__h15376,
       y__h15435,
       y__h15568,
       y__h15627,
       y__h15760,
       y__h15819,
       y__h15952,
       y__h16011,
       y__h16144,
       y__h16203,
       y__h16336,
       y__h16395,
       y__h16528,
       y__h16587,
       y__h16720,
       y__h16779,
       y__h16912,
       y__h16971,
       y__h17104,
       y__h17163,
       y__h17296,
       y__h17355,
       y__h17488,
       y__h17547,
       y__h17680,
       y__h17739,
       y__h20521,
       y__h20623,
       y__h20707,
       y__h20893,
       y__h21079,
       y__h21265,
       y__h21451,
       y__h21637,
       y__h21823,
       y__h22009,
       y__h22195,
       y__h22381,
       y__h22567,
       y__h22753,
       y__h22939,
       y__h23125,
       y__h23311,
       y__h23497,
       y__h23683,
       y__h23869,
       y__h24055,
       y__h24241,
       y__h24427,
       y__h24613,
       y__h24799,
       y__h24985,
       y__h25171,
       y__h25357,
       y__h25543,
       y__h25729,
       y__h25915,
       y__h26101,
       y__h26287,
       y__h26473,
       y__h26659,
       y__h26845,
       y__h27031,
       y__h27217,
       y__h27403,
       y__h27589,
       y__h27775,
       y__h27961,
       y__h28147,
       y__h28333,
       y__h28519,
       y__h28705,
       y__h28891,
       y__h29077,
       y__h29263,
       y__h29473,
       y__h29475,
       y__h29601,
       y__h29603,
       y__h29659,
       y__h29790,
       y__h29792,
       y__h29848,
       y__h29979,
       y__h29981,
       y__h30037,
       y__h30168,
       y__h30170,
       y__h30226,
       y__h30357,
       y__h30359,
       y__h30415,
       y__h30546,
       y__h30548,
       y__h30604,
       y__h30735,
       y__h30737,
       y__h30793,
       y__h30924,
       y__h30926,
       y__h30982,
       y__h31113,
       y__h31115,
       y__h31171,
       y__h31302,
       y__h31304,
       y__h31360,
       y__h31491,
       y__h31493,
       y__h31549,
       y__h31680,
       y__h31682,
       y__h31738,
       y__h31869,
       y__h31871,
       y__h31927,
       y__h32058,
       y__h32060,
       y__h32116,
       y__h32247,
       y__h32249,
       y__h32305,
       y__h32436,
       y__h32438,
       y__h32494,
       y__h32625,
       y__h32627,
       y__h32683,
       y__h32814,
       y__h32816,
       y__h32872,
       y__h33003,
       y__h33005,
       y__h33061,
       y__h33192,
       y__h33194,
       y__h33250,
       y__h33381,
       y__h33383,
       y__h33439,
       y__h33570,
       y__h33572,
       y__h33628,
       y__h33759,
       y__h33761,
       y__h33817,
       y__h33948,
       y__h33950,
       y__h34006,
       y__h34137,
       y__h34139,
       y__h34195,
       y__h34326,
       y__h34328,
       y__h34384,
       y__h34515,
       y__h34517,
       y__h34573,
       y__h34704,
       y__h34706,
       y__h34762,
       y__h34893,
       y__h34895,
       y__h34951,
       y__h35082,
       y__h35084,
       y__h35140,
       y__h35271,
       y__h35273,
       y__h35329,
       y__h35460,
       y__h35462,
       y__h35518,
       y__h35649,
       y__h35651,
       y__h35707,
       y__h35838,
       y__h35840,
       y__h35896,
       y__h36027,
       y__h36029,
       y__h36085,
       y__h36216,
       y__h36218,
       y__h36274,
       y__h36405,
       y__h36407,
       y__h36463,
       y__h36594,
       y__h36596,
       y__h36652,
       y__h36783,
       y__h36785,
       y__h36841,
       y__h36972,
       y__h36974,
       y__h37030,
       y__h37161,
       y__h37163,
       y__h37219,
       y__h37350,
       y__h37352,
       y__h37408,
       y__h37539,
       y__h37541,
       y__h37597,
       y__h37728,
       y__h37730,
       y__h37786,
       y__h37917,
       y__h37919,
       y__h37975,
       y__h38106,
       y__h38108,
       y__h38164,
       y__h38295,
       y__h38297,
       y__h38353,
       y__h38484,
       y__h38486,
       y__h38542,
       y__h40864,
       y__h40923,
       y__h41055,
       y__h41114,
       y__h41246,
       y__h41305,
       y__h41437,
       y__h41496,
       y__h41628,
       y__h41687,
       y__h41819,
       y__h41878,
       y__h4357,
       y__h45153,
       y__h45339,
       y__h4543,
       y__h45525,
       y__h45711,
       y__h45897,
       y__h46083,
       y__h46269,
       y__h46455,
       y__h46641,
       y__h46827,
       y__h47013,
       y__h47199,
       y__h4729,
       y__h47385,
       y__h47571,
       y__h47757,
       y__h47943,
       y__h48129,
       y__h48315,
       y__h48501,
       y__h48687,
       y__h48873,
       y__h49059,
       y__h4915,
       y__h5101,
       y__h5287,
       y__h54391,
       y__h54577,
       y__h54763,
       y__h54949,
       y__h5498,
       y__h5500,
       y__h55135,
       y__h55321,
       y__h5626,
       y__h5628,
       y__h5684,
       y__h56987,
       y__h57173,
       y__h57359,
       y__h57545,
       y__h57731,
       y__h57917,
       y__h58103,
       y__h5815,
       y__h5817,
       y__h58289,
       y__h58475,
       y__h58661,
       y__h5873,
       y__h58847,
       y__h59033,
       y__h59219,
       y__h59405,
       y__h59591,
       y__h59777,
       y__h59963,
       y__h6004,
       y__h6006,
       y__h60149,
       y__h60335,
       y__h60521,
       y__h6062,
       y__h60707,
       y__h60893,
       y__h61079,
       y__h6193,
       y__h6195,
       y__h6251,
       y__h6382,
       y__h6384,
       y__h6440,
       y__h6571,
       y__h6573,
       y__h66230,
       y__h6629,
       y__h66419,
       y__h66608,
       y__h66797,
       y__h66986,
       y__h67175,
       y__h8656,
       y__h8715,
       y__h8762,
       y__h8848,
       y__h8907,
       y__h9040,
       y__h9099,
       y__h9232,
       y__h9291,
       y__h9424,
       y__h9483,
       y__h9616,
       y__h9675,
       y__h9808,
       y__h9867;

  // action method get_inp_s
  assign RDY_get_inp_s = !fifo_s_rv[32] ;
  assign CAN_FIRE_get_inp_s = !fifo_s_rv[32] ;
  assign WILL_FIRE_get_inp_s = EN_get_inp_s ;

  // action method get_inp_c
  assign RDY_get_inp_c = !fifo_c_rv[32] ;
  assign CAN_FIRE_get_inp_c = !fifo_c_rv[32] ;
  assign WILL_FIRE_get_inp_c = EN_get_inp_c ;

  // actionvalue method get_result
  assign get_result = fifo_add_rv[31:0] ;
  assign RDY_get_result = fifo_add_rv[32] && pack_done ;
  assign CAN_FIRE_get_result = fifo_add_rv[32] && pack_done ;
  assign WILL_FIRE_get_result = EN_get_result ;

  // rule RL_rl_swap
  assign CAN_FIRE_RL_rl_swap =
	     add_start && !swap_done && !handle_zero && !input_zero ;
  assign WILL_FIRE_RL_rl_swap = CAN_FIRE_RL_rl_swap ;

  // rule RL_rl_get_sign
  assign CAN_FIRE_RL_rl_get_sign =
	     add_start && swap_done && !add_done && !sign_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_get_sign = CAN_FIRE_RL_rl_get_sign ;

  // rule RL_rl_cmp_exp
  assign CAN_FIRE_RL_rl_cmp_exp =
	     add_start && swap_done && sign_done && !cmp_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_cmp_exp = CAN_FIRE_RL_rl_cmp_exp ;

  // rule RL_rl_align_exp
  assign CAN_FIRE_RL_rl_align_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     !align_man_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_align_exp = CAN_FIRE_RL_rl_align_exp ;

  // rule RL_rl_add_or_sub_exp
  assign CAN_FIRE_RL_rl_add_or_sub_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     !calc_fraction_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_add_or_sub_exp = CAN_FIRE_RL_rl_add_or_sub_exp ;

  // rule RL_rl_adj_exp
  assign CAN_FIRE_RL_rl_adj_exp =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     calc_fraction_done &&
	     !adj_exp_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_exp = CAN_FIRE_RL_rl_adj_exp ;

  // rule RL_rl_adj_mantissa
  assign CAN_FIRE_RL_rl_adj_mantissa =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 &&
	     !mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign WILL_FIRE_RL_rl_adj_mantissa = CAN_FIRE_RL_rl_adj_mantissa ;

  // rule RL_rl_assemble_result
  assign CAN_FIRE_RL_rl_assemble_result =
	     !fifo_add_rv_port1__read[32] &&
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231 ;
  assign WILL_FIRE_RL_rl_assemble_result = CAN_FIRE_RL_rl_assemble_result ;

  // rule RL_rl_handle_zero_val
  assign CAN_FIRE_RL_rl_handle_zero_val =
	     !fifo_add_rv_port1__read[32] && (handle_zero || input_zero) ;
  assign WILL_FIRE_RL_rl_handle_zero_val = CAN_FIRE_RL_rl_handle_zero_val ;

  // rule RL_rl_add_start
  assign CAN_FIRE_RL_rl_add_start =
	     fifo_s_rv[32] && fifo_c_rv[32] && !add_start ;
  assign WILL_FIRE_RL_rl_add_start = CAN_FIRE_RL_rl_add_start ;

  // rule RL_rl_deassert_signals
  assign CAN_FIRE_RL_rl_deassert_signals = add_done ;
  assign WILL_FIRE_RL_rl_deassert_signals =
	     add_done && !WILL_FIRE_RL_rl_handle_zero_val ;

  // inputs to muxes for submodule ports
  assign MUX_add_or_sub_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;
  assign MUX_adj_exp_done_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ;
  assign MUX_c_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ;
  assign MUX_input_zero_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 ;
  assign MUX_temp_man_write_1__SEL_1 =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ;
  assign MUX_temp_man_write_1__SEL_2 =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;
  assign MUX_add_or_sub_write_1__VAL_1 =
	     s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 ? 2'd1 : 2'd2 ;
  assign MUX_fifo_add_rv_port1__write_1__VAL_1 =
	     { 1'd1, tmp_sign, exp_mantissa } ;
  assign MUX_fifo_add_rv_port1__write_1__VAL_2 =
	     handle_zero ? 33'h100000000 : { 1'd1, input_no ? s : c } ;
  assign MUX_temp_c_write_1__VAL_1 = temp_c >> exp_diff ;
  assign MUX_temp_c_write_1__VAL_2 = { 2'b01, c[22:0], 25'd0 } ;
  assign MUX_temp_man_write_1__VAL_1 =
	     (add_or_sub == 2'd1) ? x__h7276 : x__h17945 ;
  assign MUX_temp_man_write_1__VAL_2 = temp_man[49] ? x__h42002 : x__h42013 ;
  assign MUX_tmp_exp_write_1__VAL_1 =
	     { IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989,
	       IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;

  // inlined wires
  assign fifo_s_rv_port1__write_1 = { 1'd1, get_inp_s_inp_S } ;
  assign fifo_s_rv_port2__read =
	     EN_get_inp_s ? fifo_s_rv_port1__write_1 : fifo_s_rv ;
  assign fifo_c_rv_port1__write_1 = { 1'd1, get_inp_c_inp_C } ;
  assign fifo_c_rv_port2__read =
	     EN_get_inp_c ? fifo_c_rv_port1__write_1 : fifo_c_rv ;
  assign fifo_add_rv_port0__write_1 =
	     { 1'd0,
	       32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  } ;
  assign fifo_add_rv_port1__read =
	     EN_get_result ? fifo_add_rv_port0__write_1 : fifo_add_rv ;
  assign fifo_add_rv_EN_port1__write =
	     WILL_FIRE_RL_rl_assemble_result ||
	     WILL_FIRE_RL_rl_handle_zero_val ;
  assign fifo_add_rv_port1__write_1 =
	     WILL_FIRE_RL_rl_assemble_result ?
	       MUX_fifo_add_rv_port1__write_1__VAL_1 :
	       MUX_fifo_add_rv_port1__write_1__VAL_2 ;
  assign fifo_add_rv_port2__read =
	     fifo_add_rv_EN_port1__write ?
	       fifo_add_rv_port1__write_1 :
	       fifo_add_rv_port1__read ;

  // register add_done
  assign add_done_D_IN = 1'd1 ;
  assign add_done_EN =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register add_or_sub
  assign add_or_sub_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_add_or_sub_write_1__VAL_1 :
	       2'd0 ;
  assign add_or_sub_EN =
	     WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_add_or_sub_exp ;

  // register add_start
  assign add_start_D_IN = 1'd1 ;
  assign add_start_EN = CAN_FIRE_RL_rl_add_start ;

  // register addition_start
  assign addition_start_D_IN = 1'b0 ;
  assign addition_start_EN = 1'b0 ;

  // register adj_exp_done
  assign adj_exp_done_D_IN = MUX_adj_exp_done_write_1__SEL_1 ;
  assign adj_exp_done_EN =
	     WILL_FIRE_RL_rl_adj_exp && temp_man[48] ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register align_man_done
  assign align_man_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign align_man_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_align_exp ;

  // register c
  assign c_D_IN = MUX_c_write_1__SEL_1 ? s : fifo_c_rv[31:0] ;
  assign c_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ||
	     WILL_FIRE_RL_rl_add_start ;

  // register calc_fraction_done
  assign calc_fraction_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign calc_fraction_done_EN = MUX_add_or_sub_write_1__SEL_2 ;

  // register cmp_exp_done
  assign cmp_exp_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign cmp_exp_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_cmp_exp ;

  // register end_result
  assign end_result_D_IN = 32'h0 ;
  assign end_result_EN = 1'b0 ;

  // register exp_diff
  assign exp_diff_D_IN =
	     { x__h6570 ^ y__h6571,
	       x__h6381 ^ y__h6382,
	       tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162 } ;
  assign exp_diff_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register exp_mantissa
  assign exp_mantissa_D_IN =
	     temp_man[49] ?
	       IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140 :
	       IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224 ;
  assign exp_mantissa_EN = CAN_FIRE_RL_rl_adj_mantissa ;

  // register exp_res
  assign exp_res_D_IN = 8'h0 ;
  assign exp_res_EN = 1'b0 ;

  // register fifo_add_rv
  assign fifo_add_rv_D_IN = fifo_add_rv_port2__read ;
  assign fifo_add_rv_EN = 1'b1 ;

  // register fifo_c_rv
  assign fifo_c_rv_D_IN = fifo_c_rv_port2__read ;
  assign fifo_c_rv_EN = 1'b1 ;

  // register fifo_s_rv
  assign fifo_s_rv_D_IN = fifo_s_rv_port2__read ;
  assign fifo_s_rv_EN = 1'b1 ;

  // register get_r
  assign get_r_D_IN = 1'b0 ;
  assign get_r_EN = 1'b0 ;

  // register got_c
  assign got_c_D_IN = 1'b0 ;
  assign got_c_EN = 1'b0 ;

  // register got_s
  assign got_s_D_IN = 1'b0 ;
  assign got_s_EN = 1'b0 ;

  // register handle_zero
  assign handle_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign handle_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register input_no
  assign input_no_D_IN = s[30:23] != 8'd0 || s[22:0] != 23'd0 ;
  assign input_no_EN = MUX_input_zero_write_1__SEL_2 ;

  // register input_zero
  assign input_zero_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign input_zero_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 ||
	     WILL_FIRE_RL_rl_deassert_signals ;

  // register mantissa_done
  assign mantissa_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign mantissa_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals ||
	     WILL_FIRE_RL_rl_adj_mantissa ;

  // register mantissa_res
  assign mantissa_res_D_IN = 23'h0 ;
  assign mantissa_res_EN = 1'b0 ;

  // register pack_done
  assign pack_done_D_IN =
	     WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;
  assign pack_done_EN =
	     EN_get_result || WILL_FIRE_RL_rl_handle_zero_val ||
	     WILL_FIRE_RL_rl_assemble_result ;

  // register result_concatenated
  assign result_concatenated_D_IN = 1'b0 ;
  assign result_concatenated_EN = 1'b0 ;

  // register s
  assign s_D_IN = MUX_c_write_1__SEL_1 ? c : fifo_s_rv[31:0] ;
  assign s_EN =
	     WILL_FIRE_RL_rl_swap &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 ||
	     WILL_FIRE_RL_rl_add_start ;

  // register sign_done
  assign sign_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign sign_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_get_sign ;

  // register swap_done
  assign swap_done_D_IN = !WILL_FIRE_RL_rl_deassert_signals ;
  assign swap_done_EN =
	     WILL_FIRE_RL_rl_deassert_signals || WILL_FIRE_RL_rl_swap ;

  // register temp_c
  assign temp_c_D_IN =
	     WILL_FIRE_RL_rl_align_exp ?
	       MUX_temp_c_write_1__VAL_1 :
	       MUX_temp_c_write_1__VAL_2 ;
  assign temp_c_EN = WILL_FIRE_RL_rl_align_exp || WILL_FIRE_RL_rl_cmp_exp ;

  // register temp_man
  assign temp_man_D_IN =
	     MUX_temp_man_write_1__SEL_1 ?
	       MUX_temp_man_write_1__VAL_1 :
	       MUX_temp_man_write_1__VAL_2 ;
  assign temp_man_EN =
	     WILL_FIRE_RL_rl_add_or_sub_exp &&
	     (add_or_sub == 2'd1 || add_or_sub == 2'd2) ||
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ;

  // register temp_s
  assign temp_s_D_IN = { 2'b01, s[22:0], 25'd0 } ;
  assign temp_s_EN = CAN_FIRE_RL_rl_cmp_exp ;

  // register tmp_exp
  assign tmp_exp_D_IN =
	     MUX_temp_man_write_1__SEL_2 ?
	       MUX_tmp_exp_write_1__VAL_1 :
	       s[30:23] ;
  assign tmp_exp_EN =
	     WILL_FIRE_RL_rl_adj_exp && !temp_man[48] ||
	     WILL_FIRE_RL_rl_get_sign ;

  // register tmp_res
  assign tmp_res_D_IN = 24'h0 ;
  assign tmp_res_EN = 1'b0 ;

  // register tmp_sign
  assign tmp_sign_D_IN = s[31] ;
  assign tmp_sign_EN = CAN_FIRE_RL_rl_get_sign ;

  // remaining internal signals
  assign IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10 =
	     (~IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2 =
	     (~IF_c_BIT_23_THEN_0_ELSE_1__q1[0]) ? 8'd1 : 8'd0 ;
  assign IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6 =
	     (~temp_man[25]) ? 50'd1 : 50'd0 ;
  assign IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5 =
	     (~temp_man[26]) ? 50'd1 : 50'd0 ;
  assign IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4 =
	     (~tmp_exp[0]) ? 8'd1 : 8'd0 ;
  assign IF_NOT_temp_man_43_BIT_24_141_142_OR_temp_man__ETC___d1224 =
	     (!temp_man[24] || temp_man[23:0] == 24'd0 && !temp_man[25]) ?
	       { tmp_exp, temp_man[47:25] } :
	       IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223 ;
  assign IF_NOT_temp_man_43_BIT_25_012_013_OR_temp_man__ETC___d1140 =
	     (!temp_man[25] || temp_man[24:0] == 25'd0 && !temp_man[26]) ?
	       { _theResult___fst__h65837, temp_man[48:26] } :
	       IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139 ;
  assign IF_c_BIT_23_THEN_0_ELSE_1__q1 = c[23] ? 8'd0 : 8'd1 ;
  assign IF_temp_c_BIT_0_THEN_1_ELSE_0__q3 = temp_c[0] ? 50'd1 : 50'd0 ;
  assign IF_temp_man_43_BIT_49_46_AND_temp_man_43_BIT_4_ETC___d1139 =
	     (temp_man[49] & y__h49059) ?
	       { tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 ^
		 y__h55321,
		 tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088,
		 rounded_mantissa__h53999 } :
	       { _theResult___fst__h65837, rounded_mantissa__h67422 } ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_1__ETC___d992 =
	     temp_man[49] ? x__h54264 : x__h40968 ^ tmp_exp[0] ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_2__ETC___d989 =
	     temp_man[49] ? x__h54390 : x__h41159 ^ y__h40864 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_3__ETC___d986 =
	     temp_man[49] ? x__h54576 : x__h41350 ^ y__h41055 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_4__ETC___d983 =
	     temp_man[49] ? x__h54762 : x__h41541 ^ y__h41246 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_5__ETC___d980 =
	     temp_man[49] ? x__h54948 : x__h41732 ^ y__h41437 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_6__ETC___d977 =
	     temp_man[49] ? x__h55134 : x__h41923 ^ y__h41628 ;
  assign IF_temp_man_43_BIT_49_46_THEN_tmp_exp_2_BIT_7__ETC___d974 =
	     temp_man[49] ?
	       tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 :
	       x__h41818 ^ y__h41819 ;
  assign IF_temp_man_43_BIT_49_46_XOR_temp_man_43_BIT_4_ETC___d1223 =
	     (temp_man[49] ^ y__h61079) ?
	       { _theResult___fst__h65837, rounded_mantissa__h65836 } :
	       { tmp_exp, rounded_mantissa__h67512 } ;
  assign IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9 =
	     (temp_s[0] ^ IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0]) ?
	       50'd1 :
	       50'd0 ;
  assign IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8 =
	     (temp_s[0] ^ temp_c[0]) ? 50'd1 : 50'd0 ;
  assign IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7 =
	     (tmp_exp[0] ^
	      IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0]) ?
	       8'd1 :
	       8'd0 ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0 || c[30:23] != 8'd0 ||
	      c[22:0] != 23'd0) &&
	     (!s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 ||
	      !s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 ||
	      s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d56 =
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d53 &&
	     (s[30:23] == 8'd0 && s[22:0] == 23'd0 ||
	      c[30:23] == 8'd0 && c[22:0] == 23'd0) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63 =
	     (s[30:23] != 8'd0 || s[22:0] != 23'd0) &&
	     (s[30:23] < c[30:23] ||
	      s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 &&
	      s[22:0] < c[22:0]) ;
  assign NOT_s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7_ETC___d64 =
	     (!s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 ||
	      !s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 ||
	      s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38) &&
	     NOT_s_0_BITS_30_TO_23_1_EQ_0_2_2_OR_NOT_s_0_BI_ETC___d63 ;
  assign _theResult___fst__h65837 =
	     { tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953,
	       x__h55134,
	       x__h54948,
	       x__h54762,
	       x__h54576,
	       x__h54390,
	       x__h54264,
	       IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] } ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 &&
	     align_man_done &&
	     calc_fraction_done &&
	     adj_exp_done ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1231 =
	     add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d1005 &&
	     mantissa_done &&
	     !add_done &&
	     !handle_zero &&
	     !input_zero ;
  assign add_start_AND_swap_done_1_5_AND_sign_done_9_5__ETC___d166 =
	     add_start && swap_done && sign_done && cmp_exp_done ;
  assign rounded_mantissa__h53999 =
	     { temp_man[49] ^ y__h49059,
	       temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111 } ;
  assign rounded_mantissa__h65836 =
	     { temp_man[48] ^ y__h60893,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
	       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195 } ;
  assign rounded_mantissa__h67422 =
	     { temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090,
	       temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128 } ;
  assign rounded_mantissa__h67512 =
	     { temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174,
	       temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175,
	       temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176,
	       temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177,
	       temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178,
	       temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179,
	       temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180,
	       temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181,
	       temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182,
	       temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183,
	       temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184,
	       temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185,
	       temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186,
	       temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187,
	       temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188,
	       temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189,
	       temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190,
	       temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212 } ;
  assign s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 = s[22:0] == c[22:0] ;
  assign s_0_BITS_30_TO_23_1_EQ_0_2_AND_s_0_BITS_22_TO__ETC___d41 =
	     s[30:23] == 8'd0 && s[22:0] == 23'd0 && c[30:23] == 8'd0 &&
	     c[22:0] == 23'd0 ||
	     s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 &&
	     s_0_BITS_22_TO_0_3_EQ_c_6_BITS_22_TO_0_0___d34 &&
	     !s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 ;
  assign s_0_BITS_30_TO_23_1_EQ_c_6_BITS_30_TO_23_7___d33 =
	     s[30:23] == c[30:23] ;
  assign s_0_BIT_31_6_EQ_c_6_BIT_31_7___d38 = s[31] == c[31] ;
  assign temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195 =
	     temp_man[26] ^ temp_man[25] ;
  assign temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111 =
	     temp_man[27] ^ temp_man[26] ;
  assign temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194 =
	     temp_man[27] ^ y__h56987 ;
  assign temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110 =
	     temp_man[28] ^ y__h45153 ;
  assign temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193 =
	     temp_man[28] ^ y__h57173 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109 =
	     temp_man[29] ^ y__h45339 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192 =
	     temp_man[29] ^ y__h57359 ;
  assign temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1212 =
	     { temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1192,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1193,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26__ETC___d1194,
	       temp_man_43_BIT_26_016_XOR_temp_man_43_BIT_25_012___d1195,
	       IF_INV_temp_man_BIT_25_THEN_1_ELSE_0__q6[0] } ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108 =
	     temp_man[30] ^ y__h45525 ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1128 =
	     { temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1108,
	       temp_man_43_BIT_29_044_XOR_temp_man_43_BIT_28__ETC___d1109,
	       temp_man_43_BIT_28_045_XOR_temp_man_43_BIT_27__ETC___d1110,
	       temp_man_43_BIT_27_046_XOR_temp_man_43_BIT_26_016___d1111,
	       IF_INV_temp_man_BIT_26_THEN_1_ELSE_0__q5[0] } ;
  assign temp_man_43_BIT_30_043_XOR_temp_man_43_BIT_29__ETC___d1191 =
	     temp_man[30] ^ y__h57545 ;
  assign temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1107 =
	     temp_man[31] ^ y__h45711 ;
  assign temp_man_43_BIT_31_042_XOR_temp_man_43_BIT_30__ETC___d1190 =
	     temp_man[31] ^ y__h57731 ;
  assign temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1106 =
	     temp_man[32] ^ y__h45897 ;
  assign temp_man_43_BIT_32_041_XOR_temp_man_43_BIT_31__ETC___d1189 =
	     temp_man[32] ^ y__h57917 ;
  assign temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1105 =
	     temp_man[33] ^ y__h46083 ;
  assign temp_man_43_BIT_33_040_XOR_temp_man_43_BIT_32__ETC___d1188 =
	     temp_man[33] ^ y__h58103 ;
  assign temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1104 =
	     temp_man[34] ^ y__h46269 ;
  assign temp_man_43_BIT_34_039_XOR_temp_man_43_BIT_33__ETC___d1187 =
	     temp_man[34] ^ y__h58289 ;
  assign temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1103 =
	     temp_man[35] ^ y__h46455 ;
  assign temp_man_43_BIT_35_038_XOR_temp_man_43_BIT_34__ETC___d1186 =
	     temp_man[35] ^ y__h58475 ;
  assign temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1102 =
	     temp_man[36] ^ y__h46641 ;
  assign temp_man_43_BIT_36_037_XOR_temp_man_43_BIT_35__ETC___d1185 =
	     temp_man[36] ^ y__h58661 ;
  assign temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1101 =
	     temp_man[37] ^ y__h46827 ;
  assign temp_man_43_BIT_37_036_XOR_temp_man_43_BIT_36__ETC___d1184 =
	     temp_man[37] ^ y__h58847 ;
  assign temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1100 =
	     temp_man[38] ^ y__h47013 ;
  assign temp_man_43_BIT_38_035_XOR_temp_man_43_BIT_37__ETC___d1183 =
	     temp_man[38] ^ y__h59033 ;
  assign temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1099 =
	     temp_man[39] ^ y__h47199 ;
  assign temp_man_43_BIT_39_034_XOR_temp_man_43_BIT_38__ETC___d1182 =
	     temp_man[39] ^ y__h59219 ;
  assign temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1098 =
	     temp_man[40] ^ y__h47385 ;
  assign temp_man_43_BIT_40_033_XOR_temp_man_43_BIT_39__ETC___d1181 =
	     temp_man[40] ^ y__h59405 ;
  assign temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1097 =
	     temp_man[41] ^ y__h47571 ;
  assign temp_man_43_BIT_41_032_XOR_temp_man_43_BIT_40__ETC___d1180 =
	     temp_man[41] ^ y__h59591 ;
  assign temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1096 =
	     temp_man[42] ^ y__h47757 ;
  assign temp_man_43_BIT_42_031_XOR_temp_man_43_BIT_41__ETC___d1179 =
	     temp_man[42] ^ y__h59777 ;
  assign temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1095 =
	     temp_man[43] ^ y__h47943 ;
  assign temp_man_43_BIT_43_030_XOR_temp_man_43_BIT_42__ETC___d1178 =
	     temp_man[43] ^ y__h59963 ;
  assign temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1094 =
	     temp_man[44] ^ y__h48129 ;
  assign temp_man_43_BIT_44_029_XOR_temp_man_43_BIT_43__ETC___d1177 =
	     temp_man[44] ^ y__h60149 ;
  assign temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1093 =
	     temp_man[45] ^ y__h48315 ;
  assign temp_man_43_BIT_45_028_XOR_temp_man_43_BIT_44__ETC___d1176 =
	     temp_man[45] ^ y__h60335 ;
  assign temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1092 =
	     temp_man[46] ^ y__h48501 ;
  assign temp_man_43_BIT_46_027_XOR_temp_man_43_BIT_45__ETC___d1175 =
	     temp_man[46] ^ y__h60521 ;
  assign temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1091 =
	     temp_man[47] ^ y__h48687 ;
  assign temp_man_43_BIT_47_026_XOR_temp_man_43_BIT_46__ETC___d1174 =
	     temp_man[47] ^ y__h60707 ;
  assign temp_man_43_BIT_48_44_XOR_temp_man_43_BIT_47_0_ETC___d1090 =
	     temp_man[48] ^ y__h48873 ;
  assign temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542 =
	     { x__h10681 ^ y__h10384,
	       x__h10489 ^ y__h10192,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541 } ;
  assign temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913 =
	     { x__h31301 ^ y__h31302,
	       x__h31112 ^ y__h31113,
	       temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912 } ;
  assign temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543 =
	     { x__h11065 ^ y__h10768,
	       x__h10873 ^ y__h10576,
	       temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_45_ETC___d542 } ;
  assign temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914 =
	     { x__h31679 ^ y__h31680,
	       x__h31490 ^ y__h31491,
	       temp_s_73_BIT_11_42_XOR_temp_c_75_BIT_11_43_XO_ETC___d913 } ;
  assign temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544 =
	     { x__h11449 ^ y__h11152,
	       x__h11257 ^ y__h10960,
	       temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_37_ETC___d543 } ;
  assign temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915 =
	     { x__h32057 ^ y__h32058,
	       x__h31868 ^ y__h31869,
	       temp_s_73_BIT_13_34_XOR_temp_c_75_BIT_13_35_XO_ETC___d914 } ;
  assign temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545 =
	     { x__h11833 ^ y__h11536,
	       x__h11641 ^ y__h11344,
	       temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_29_ETC___d544 } ;
  assign temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916 =
	     { x__h32435 ^ y__h32436,
	       x__h32246 ^ y__h32247,
	       temp_s_73_BIT_15_26_XOR_temp_c_75_BIT_15_27_XO_ETC___d915 } ;
  assign temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546 =
	     { x__h12217 ^ y__h11920,
	       x__h12025 ^ y__h11728,
	       temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_21_ETC___d545 } ;
  assign temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917 =
	     { x__h32813 ^ y__h32814,
	       x__h32624 ^ y__h32625,
	       temp_s_73_BIT_17_18_XOR_temp_c_75_BIT_17_19_XO_ETC___d916 } ;
  assign temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537 =
	     { x__h8761 ^ y__h8762,
	       IF_temp_s_BIT_0_XOR_temp_c_BIT_0_THEN_1_ELSE_0__q8[0] } ;
  assign temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908 =
	     { x__h29472 ^ y__h29473,
	       IF_temp_s_BIT_0_XOR_IF_temp_c_BIT_0_THEN_1_ELS_ETC__q9[0] } ;
  assign temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547 =
	     { x__h12601 ^ y__h12304,
	       x__h12409 ^ y__h12112,
	       temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_13_ETC___d546 } ;
  assign temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918 =
	     { x__h33191 ^ y__h33192,
	       x__h33002 ^ y__h33003,
	       temp_s_73_BIT_19_10_XOR_temp_c_75_BIT_19_11_XO_ETC___d917 } ;
  assign temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548 =
	     { x__h12985 ^ y__h12688,
	       x__h12793 ^ y__h12496,
	       temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_05_ETC___d547 } ;
  assign temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919 =
	     { x__h33569 ^ y__h33570,
	       x__h33380 ^ y__h33381,
	       temp_s_73_BIT_21_02_XOR_temp_c_75_BIT_21_03_XO_ETC___d918 } ;
  assign temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549 =
	     { x__h13369 ^ y__h13072,
	       x__h13177 ^ y__h12880,
	       temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_97_ETC___d548 } ;
  assign temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920 =
	     { x__h33947 ^ y__h33948,
	       x__h33758 ^ y__h33759,
	       temp_s_73_BIT_23_94_XOR_temp_c_75_BIT_23_95_XO_ETC___d919 } ;
  assign temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550 =
	     { x__h13753 ^ y__h13456,
	       x__h13561 ^ y__h13264,
	       temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_89_ETC___d549 } ;
  assign temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921 =
	     { x__h34325 ^ y__h34326,
	       x__h34136 ^ y__h34137,
	       temp_s_73_BIT_25_86_XOR_temp_c_75_BIT_25_87_XO_ETC___d920 } ;
  assign temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551 =
	     { x__h14137 ^ y__h13840,
	       x__h13945 ^ y__h13648,
	       temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_81_ETC___d550 } ;
  assign temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922 =
	     { x__h34703 ^ y__h34704,
	       x__h34514 ^ y__h34515,
	       temp_s_73_BIT_27_78_XOR_temp_c_75_BIT_27_79_XO_ETC___d921 } ;
  assign temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552 =
	     { x__h14521 ^ y__h14224,
	       x__h14329 ^ y__h14032,
	       temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_73_ETC___d551 } ;
  assign temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923 =
	     { x__h35081 ^ y__h35082,
	       x__h34892 ^ y__h34893,
	       temp_s_73_BIT_29_70_XOR_temp_c_75_BIT_29_71_XO_ETC___d922 } ;
  assign temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553 =
	     { x__h14905 ^ y__h14608,
	       x__h14713 ^ y__h14416,
	       temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_65_ETC___d552 } ;
  assign temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924 =
	     { x__h35459 ^ y__h35460,
	       x__h35270 ^ y__h35271,
	       temp_s_73_BIT_31_62_XOR_temp_c_75_BIT_31_63_XO_ETC___d923 } ;
  assign temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554 =
	     { x__h15289 ^ y__h14992,
	       x__h15097 ^ y__h14800,
	       temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_57_ETC___d553 } ;
  assign temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925 =
	     { x__h35837 ^ y__h35838,
	       x__h35648 ^ y__h35649,
	       temp_s_73_BIT_33_54_XOR_temp_c_75_BIT_33_55_XO_ETC___d924 } ;
  assign temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555 =
	     { x__h15673 ^ y__h15376,
	       x__h15481 ^ y__h15184,
	       temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_49_ETC___d554 } ;
  assign temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926 =
	     { x__h36215 ^ y__h36216,
	       x__h36026 ^ y__h36027,
	       temp_s_73_BIT_35_46_XOR_temp_c_75_BIT_35_47_XO_ETC___d925 } ;
  assign temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556 =
	     { x__h16057 ^ y__h15760,
	       x__h15865 ^ y__h15568,
	       temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_41_ETC___d555 } ;
  assign temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927 =
	     { x__h36593 ^ y__h36594,
	       x__h36404 ^ y__h36405,
	       temp_s_73_BIT_37_38_XOR_temp_c_75_BIT_37_39_XO_ETC___d926 } ;
  assign temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538 =
	     { x__h9145 ^ y__h8848,
	       x__h8953 ^ y__h8656,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_85_X_ETC___d537 } ;
  assign temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909 =
	     { x__h29789 ^ y__h29790,
	       x__h29600 ^ y__h29601,
	       temp_s_73_BIT_1_82_XOR_temp_c_75_BIT_1_83_XOR__ETC___d908 } ;
  assign temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557 =
	     { x__h16441 ^ y__h16144,
	       x__h16249 ^ y__h15952,
	       temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_33_ETC___d556 } ;
  assign temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928 =
	     { x__h36971 ^ y__h36972,
	       x__h36782 ^ y__h36783,
	       temp_s_73_BIT_39_30_XOR_temp_c_75_BIT_39_31_XO_ETC___d927 } ;
  assign temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558 =
	     { x__h16825 ^ y__h16528,
	       x__h16633 ^ y__h16336,
	       temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_25_ETC___d557 } ;
  assign temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929 =
	     { x__h37349 ^ y__h37350,
	       x__h37160 ^ y__h37161,
	       temp_s_73_BIT_41_22_XOR_temp_c_75_BIT_41_23_XO_ETC___d928 } ;
  assign temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559 =
	     { x__h17209 ^ y__h16912,
	       x__h17017 ^ y__h16720,
	       temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_17_ETC___d558 } ;
  assign temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930 =
	     { x__h37727 ^ y__h37728,
	       x__h37538 ^ y__h37539,
	       temp_s_73_BIT_43_14_XOR_temp_c_75_BIT_43_15_XO_ETC___d929 } ;
  assign temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560 =
	     { x__h17593 ^ y__h17296,
	       x__h17401 ^ y__h17104,
	       temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_09_ETC___d559 } ;
  assign temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931 =
	     { x__h38105 ^ y__h38106,
	       x__h37916 ^ y__h37917,
	       temp_s_73_BIT_45_06_XOR_temp_c_75_BIT_45_07_XO_ETC___d930 } ;
  assign temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539 =
	     { x__h9529 ^ y__h9232,
	       x__h9337 ^ y__h9040,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_77_X_ETC___d538 } ;
  assign temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910 =
	     { x__h30167 ^ y__h30168,
	       x__h29978 ^ y__h29979,
	       temp_s_73_BIT_3_74_XOR_temp_c_75_BIT_3_75_XOR__ETC___d909 } ;
  assign temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540 =
	     { x__h9913 ^ y__h9616,
	       x__h9721 ^ y__h9424,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_69_X_ETC___d539 } ;
  assign temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911 =
	     { x__h30545 ^ y__h30546,
	       x__h30356 ^ y__h30357,
	       temp_s_73_BIT_5_66_XOR_temp_c_75_BIT_5_67_XOR__ETC___d910 } ;
  assign temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_53_X_ETC___d541 =
	     { x__h10297 ^ y__h10000,
	       x__h10105 ^ y__h9808,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_61_X_ETC___d540 } ;
  assign temp_s_73_BIT_9_50_XOR_temp_c_75_BIT_9_51_XOR__ETC___d912 =
	     { x__h30923 ^ y__h30924,
	       x__h30734 ^ y__h30735,
	       temp_s_73_BIT_7_58_XOR_temp_c_75_BIT_7_59_XOR__ETC___d911 } ;
  assign tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160 =
	     { x__h5497 ^ y__h5498,
	       IF_tmp_exp_BIT_0_XOR_IF_INV_IF_c_BIT_23_THEN_0_ETC__q7[0] } ;
  assign tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086 =
	     { x__h54390 ^ y__h54391,
	       x__h54264 ^ IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0],
	       IF_INV_IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0_BIT__ETC__q10[0] } ;
  assign tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161 =
	     { x__h5814 ^ y__h5815,
	       x__h5625 ^ y__h5626,
	       tmp_exp_2_BIT_1_29_XOR_NOT_c_6_BIT_24_6_7_XOR__ETC___d160 } ;
  assign tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087 =
	     { x__h54762 ^ y__h54763,
	       x__h54576 ^ y__h54577,
	       tmp_exp_2_BIT_2_25_XOR_tmp_exp_2_BIT_1_29_AND__ETC___d1086 } ;
  assign tmp_exp_2_BIT_5_13_XOR_NOT_c_6_BIT_28_8_9_XOR__ETC___d162 =
	     { x__h6192 ^ y__h6193,
	       x__h6003 ^ y__h6004,
	       tmp_exp_2_BIT_3_21_XOR_NOT_c_6_BIT_26_2_3_XOR__ETC___d161 } ;
  assign tmp_exp_2_BIT_6_09_XOR_tmp_exp_2_BIT_5_13_AND__ETC___d1088 =
	     { x__h55134 ^ y__h55135,
	       x__h54948 ^ y__h54949,
	       tmp_exp_2_BIT_4_17_XOR_tmp_exp_2_BIT_3_21_AND__ETC___d1087 } ;
  assign tmp_exp_2_BIT_7_3_XOR_tmp_exp_2_BIT_6_09_AND_t_ETC___d953 =
	     tmp_exp[7] ^ y__h67175 ;
  assign x__h10058 = temp_s[8] & temp_c[8] ;
  assign x__h10105 = temp_s[8] ^ temp_c[8] ;
  assign x__h10250 = temp_s[9] & temp_c[9] ;
  assign x__h10297 = temp_s[9] ^ temp_c[9] ;
  assign x__h10442 = temp_s[10] & temp_c[10] ;
  assign x__h10489 = temp_s[10] ^ temp_c[10] ;
  assign x__h10634 = temp_s[11] & temp_c[11] ;
  assign x__h10681 = temp_s[11] ^ temp_c[11] ;
  assign x__h10826 = temp_s[12] & temp_c[12] ;
  assign x__h10873 = temp_s[12] ^ temp_c[12] ;
  assign x__h11018 = temp_s[13] & temp_c[13] ;
  assign x__h11065 = temp_s[13] ^ temp_c[13] ;
  assign x__h11210 = temp_s[14] & temp_c[14] ;
  assign x__h11257 = temp_s[14] ^ temp_c[14] ;
  assign x__h11402 = temp_s[15] & temp_c[15] ;
  assign x__h11449 = temp_s[15] ^ temp_c[15] ;
  assign x__h11594 = temp_s[16] & temp_c[16] ;
  assign x__h11641 = temp_s[16] ^ temp_c[16] ;
  assign x__h11786 = temp_s[17] & temp_c[17] ;
  assign x__h11833 = temp_s[17] ^ temp_c[17] ;
  assign x__h11978 = temp_s[18] & temp_c[18] ;
  assign x__h12025 = temp_s[18] ^ temp_c[18] ;
  assign x__h12170 = temp_s[19] & temp_c[19] ;
  assign x__h12217 = temp_s[19] ^ temp_c[19] ;
  assign x__h12362 = temp_s[20] & temp_c[20] ;
  assign x__h12409 = temp_s[20] ^ temp_c[20] ;
  assign x__h12554 = temp_s[21] & temp_c[21] ;
  assign x__h12601 = temp_s[21] ^ temp_c[21] ;
  assign x__h12746 = temp_s[22] & temp_c[22] ;
  assign x__h12793 = temp_s[22] ^ temp_c[22] ;
  assign x__h12938 = temp_s[23] & temp_c[23] ;
  assign x__h12985 = temp_s[23] ^ temp_c[23] ;
  assign x__h13130 = temp_s[24] & temp_c[24] ;
  assign x__h13177 = temp_s[24] ^ temp_c[24] ;
  assign x__h13322 = temp_s[25] & temp_c[25] ;
  assign x__h13369 = temp_s[25] ^ temp_c[25] ;
  assign x__h13514 = temp_s[26] & temp_c[26] ;
  assign x__h13561 = temp_s[26] ^ temp_c[26] ;
  assign x__h13706 = temp_s[27] & temp_c[27] ;
  assign x__h13753 = temp_s[27] ^ temp_c[27] ;
  assign x__h13898 = temp_s[28] & temp_c[28] ;
  assign x__h13945 = temp_s[28] ^ temp_c[28] ;
  assign x__h14090 = temp_s[29] & temp_c[29] ;
  assign x__h14137 = temp_s[29] ^ temp_c[29] ;
  assign x__h14282 = temp_s[30] & temp_c[30] ;
  assign x__h14329 = temp_s[30] ^ temp_c[30] ;
  assign x__h14474 = temp_s[31] & temp_c[31] ;
  assign x__h14521 = temp_s[31] ^ temp_c[31] ;
  assign x__h14666 = temp_s[32] & temp_c[32] ;
  assign x__h14713 = temp_s[32] ^ temp_c[32] ;
  assign x__h14858 = temp_s[33] & temp_c[33] ;
  assign x__h14905 = temp_s[33] ^ temp_c[33] ;
  assign x__h15050 = temp_s[34] & temp_c[34] ;
  assign x__h15097 = temp_s[34] ^ temp_c[34] ;
  assign x__h15242 = temp_s[35] & temp_c[35] ;
  assign x__h15289 = temp_s[35] ^ temp_c[35] ;
  assign x__h15434 = temp_s[36] & temp_c[36] ;
  assign x__h15481 = temp_s[36] ^ temp_c[36] ;
  assign x__h15626 = temp_s[37] & temp_c[37] ;
  assign x__h15673 = temp_s[37] ^ temp_c[37] ;
  assign x__h15818 = temp_s[38] & temp_c[38] ;
  assign x__h15865 = temp_s[38] ^ temp_c[38] ;
  assign x__h16010 = temp_s[39] & temp_c[39] ;
  assign x__h16057 = temp_s[39] ^ temp_c[39] ;
  assign x__h16202 = temp_s[40] & temp_c[40] ;
  assign x__h16249 = temp_s[40] ^ temp_c[40] ;
  assign x__h16394 = temp_s[41] & temp_c[41] ;
  assign x__h16441 = temp_s[41] ^ temp_c[41] ;
  assign x__h16586 = temp_s[42] & temp_c[42] ;
  assign x__h16633 = temp_s[42] ^ temp_c[42] ;
  assign x__h16778 = temp_s[43] & temp_c[43] ;
  assign x__h16825 = temp_s[43] ^ temp_c[43] ;
  assign x__h16970 = temp_s[44] & temp_c[44] ;
  assign x__h17017 = temp_s[44] ^ temp_c[44] ;
  assign x__h17162 = temp_s[45] & temp_c[45] ;
  assign x__h17209 = temp_s[45] ^ temp_c[45] ;
  assign x__h17354 = temp_s[46] & temp_c[46] ;
  assign x__h17401 = temp_s[46] ^ temp_c[46] ;
  assign x__h17546 = temp_s[47] & temp_c[47] ;
  assign x__h17593 = temp_s[47] ^ temp_c[47] ;
  assign x__h17679 = temp_s[49] ^ temp_c[49] ;
  assign x__h17738 = temp_s[48] & temp_c[48] ;
  assign x__h17785 = temp_s[48] ^ temp_c[48] ;
  assign x__h17945 =
	     { x__h38483 ^ y__h38484,
	       x__h38294 ^ y__h38295,
	       temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_XO_ETC___d931 } ;
  assign x__h29472 = temp_s[1] ^ y__h29475 ;
  assign x__h29600 = temp_s[2] ^ y__h29603 ;
  assign x__h29658 = temp_s[1] & y__h29475 ;
  assign x__h29789 = temp_s[3] ^ y__h29792 ;
  assign x__h29847 = temp_s[2] & y__h29603 ;
  assign x__h29978 = temp_s[4] ^ y__h29981 ;
  assign x__h30036 = temp_s[3] & y__h29792 ;
  assign x__h30167 = temp_s[5] ^ y__h30170 ;
  assign x__h30225 = temp_s[4] & y__h29981 ;
  assign x__h30356 = temp_s[6] ^ y__h30359 ;
  assign x__h30414 = temp_s[5] & y__h30170 ;
  assign x__h30545 = temp_s[7] ^ y__h30548 ;
  assign x__h30603 = temp_s[6] & y__h30359 ;
  assign x__h30734 = temp_s[8] ^ y__h30737 ;
  assign x__h30792 = temp_s[7] & y__h30548 ;
  assign x__h30923 = temp_s[9] ^ y__h30926 ;
  assign x__h30981 = temp_s[8] & y__h30737 ;
  assign x__h31112 = temp_s[10] ^ y__h31115 ;
  assign x__h31170 = temp_s[9] & y__h30926 ;
  assign x__h31301 = temp_s[11] ^ y__h31304 ;
  assign x__h31359 = temp_s[10] & y__h31115 ;
  assign x__h31490 = temp_s[12] ^ y__h31493 ;
  assign x__h31548 = temp_s[11] & y__h31304 ;
  assign x__h31679 = temp_s[13] ^ y__h31682 ;
  assign x__h31737 = temp_s[12] & y__h31493 ;
  assign x__h31868 = temp_s[14] ^ y__h31871 ;
  assign x__h31926 = temp_s[13] & y__h31682 ;
  assign x__h32057 = temp_s[15] ^ y__h32060 ;
  assign x__h32115 = temp_s[14] & y__h31871 ;
  assign x__h32246 = temp_s[16] ^ y__h32249 ;
  assign x__h32304 = temp_s[15] & y__h32060 ;
  assign x__h32435 = temp_s[17] ^ y__h32438 ;
  assign x__h32493 = temp_s[16] & y__h32249 ;
  assign x__h32624 = temp_s[18] ^ y__h32627 ;
  assign x__h32682 = temp_s[17] & y__h32438 ;
  assign x__h32813 = temp_s[19] ^ y__h32816 ;
  assign x__h32871 = temp_s[18] & y__h32627 ;
  assign x__h33002 = temp_s[20] ^ y__h33005 ;
  assign x__h33060 = temp_s[19] & y__h32816 ;
  assign x__h33191 = temp_s[21] ^ y__h33194 ;
  assign x__h33249 = temp_s[20] & y__h33005 ;
  assign x__h33380 = temp_s[22] ^ y__h33383 ;
  assign x__h33438 = temp_s[21] & y__h33194 ;
  assign x__h33569 = temp_s[23] ^ y__h33572 ;
  assign x__h33627 = temp_s[22] & y__h33383 ;
  assign x__h33758 = temp_s[24] ^ y__h33761 ;
  assign x__h33816 = temp_s[23] & y__h33572 ;
  assign x__h33947 = temp_s[25] ^ y__h33950 ;
  assign x__h34005 = temp_s[24] & y__h33761 ;
  assign x__h34136 = temp_s[26] ^ y__h34139 ;
  assign x__h34194 = temp_s[25] & y__h33950 ;
  assign x__h34325 = temp_s[27] ^ y__h34328 ;
  assign x__h34383 = temp_s[26] & y__h34139 ;
  assign x__h34514 = temp_s[28] ^ y__h34517 ;
  assign x__h34572 = temp_s[27] & y__h34328 ;
  assign x__h34703 = temp_s[29] ^ y__h34706 ;
  assign x__h34761 = temp_s[28] & y__h34517 ;
  assign x__h34892 = temp_s[30] ^ y__h34895 ;
  assign x__h34950 = temp_s[29] & y__h34706 ;
  assign x__h35081 = temp_s[31] ^ y__h35084 ;
  assign x__h35139 = temp_s[30] & y__h34895 ;
  assign x__h35270 = temp_s[32] ^ y__h35273 ;
  assign x__h35328 = temp_s[31] & y__h35084 ;
  assign x__h35459 = temp_s[33] ^ y__h35462 ;
  assign x__h35517 = temp_s[32] & y__h35273 ;
  assign x__h35648 = temp_s[34] ^ y__h35651 ;
  assign x__h35706 = temp_s[33] & y__h35462 ;
  assign x__h35837 = temp_s[35] ^ y__h35840 ;
  assign x__h35895 = temp_s[34] & y__h35651 ;
  assign x__h36026 = temp_s[36] ^ y__h36029 ;
  assign x__h36084 = temp_s[35] & y__h35840 ;
  assign x__h36215 = temp_s[37] ^ y__h36218 ;
  assign x__h36273 = temp_s[36] & y__h36029 ;
  assign x__h36404 = temp_s[38] ^ y__h36407 ;
  assign x__h36462 = temp_s[37] & y__h36218 ;
  assign x__h36593 = temp_s[39] ^ y__h36596 ;
  assign x__h36651 = temp_s[38] & y__h36407 ;
  assign x__h36782 = temp_s[40] ^ y__h36785 ;
  assign x__h36840 = temp_s[39] & y__h36596 ;
  assign x__h36971 = temp_s[41] ^ y__h36974 ;
  assign x__h37029 = temp_s[40] & y__h36785 ;
  assign x__h37160 = temp_s[42] ^ y__h37163 ;
  assign x__h37218 = temp_s[41] & y__h36974 ;
  assign x__h37349 = temp_s[43] ^ y__h37352 ;
  assign x__h37407 = temp_s[42] & y__h37163 ;
  assign x__h37538 = temp_s[44] ^ y__h37541 ;
  assign x__h37596 = temp_s[43] & y__h37352 ;
  assign x__h37727 = temp_s[45] ^ y__h37730 ;
  assign x__h37785 = temp_s[44] & y__h37541 ;
  assign x__h37916 = temp_s[46] ^ y__h37919 ;
  assign x__h37974 = temp_s[45] & y__h37730 ;
  assign x__h38105 = temp_s[47] ^ y__h38108 ;
  assign x__h38163 = temp_s[46] & y__h37919 ;
  assign x__h38294 = temp_s[48] ^ y__h38297 ;
  assign x__h38352 = temp_s[47] & y__h38108 ;
  assign x__h38483 = temp_s[49] ^ y__h38486 ;
  assign x__h38541 = temp_s[48] & y__h38297 ;
  assign x__h40968 = ~tmp_exp[1] ;
  assign x__h41159 = ~tmp_exp[2] ;
  assign x__h41350 = ~tmp_exp[3] ;
  assign x__h41541 = ~tmp_exp[4] ;
  assign x__h41732 = ~tmp_exp[5] ;
  assign x__h41818 = ~tmp_exp[7] ;
  assign x__h41923 = ~tmp_exp[6] ;
  assign x__h42002 = { 1'd0, temp_man[49:1] } ;
  assign x__h42013 = { temp_man[48:0], 1'd0 } ;
  assign x__h5286 = !c[30] ;
  assign x__h54264 = tmp_exp[1] ^ tmp_exp[0] ;
  assign x__h54390 = tmp_exp[2] ^ y__h66230 ;
  assign x__h54576 = tmp_exp[3] ^ y__h66419 ;
  assign x__h54762 = tmp_exp[4] ^ y__h66608 ;
  assign x__h54948 = tmp_exp[5] ^ y__h66797 ;
  assign x__h5497 = tmp_exp[1] ^ y__h5500 ;
  assign x__h55134 = tmp_exp[6] ^ y__h66986 ;
  assign x__h5625 = tmp_exp[2] ^ y__h5628 ;
  assign x__h5683 = tmp_exp[1] & y__h5500 ;
  assign x__h5814 = tmp_exp[3] ^ y__h5817 ;
  assign x__h5872 = tmp_exp[2] & y__h5628 ;
  assign x__h6003 = tmp_exp[4] ^ y__h6006 ;
  assign x__h6061 = tmp_exp[3] & y__h5817 ;
  assign x__h6192 = tmp_exp[5] ^ y__h6195 ;
  assign x__h6250 = tmp_exp[4] & y__h6006 ;
  assign x__h6381 = tmp_exp[6] ^ y__h6384 ;
  assign x__h6439 = tmp_exp[5] & y__h6195 ;
  assign x__h6570 = tmp_exp[7] ^ y__h6573 ;
  assign x__h6628 = tmp_exp[6] & y__h6384 ;
  assign x__h7276 =
	     { x__h17679 ^ y__h17680,
	       x__h17785 ^ y__h17488,
	       temp_s_73_BIT_47_98_XOR_temp_c_75_BIT_47_99_01_ETC___d560 } ;
  assign x__h8714 = temp_s[1] & temp_c[1] ;
  assign x__h8761 = temp_s[1] ^ temp_c[1] ;
  assign x__h8906 = temp_s[2] & temp_c[2] ;
  assign x__h8953 = temp_s[2] ^ temp_c[2] ;
  assign x__h9098 = temp_s[3] & temp_c[3] ;
  assign x__h9145 = temp_s[3] ^ temp_c[3] ;
  assign x__h9290 = temp_s[4] & temp_c[4] ;
  assign x__h9337 = temp_s[4] ^ temp_c[4] ;
  assign x__h9482 = temp_s[5] & temp_c[5] ;
  assign x__h9529 = temp_s[5] ^ temp_c[5] ;
  assign x__h9674 = temp_s[6] & temp_c[6] ;
  assign x__h9721 = temp_s[6] ^ temp_c[6] ;
  assign x__h9866 = temp_s[7] & temp_c[7] ;
  assign x__h9913 = temp_s[7] ^ temp_c[7] ;
  assign y__h10000 = x__h10058 | y__h10059 ;
  assign y__h10059 = x__h10105 & y__h9808 ;
  assign y__h10192 = x__h10250 | y__h10251 ;
  assign y__h10251 = x__h10297 & y__h10000 ;
  assign y__h10384 = x__h10442 | y__h10443 ;
  assign y__h10443 = x__h10489 & y__h10192 ;
  assign y__h10576 = x__h10634 | y__h10635 ;
  assign y__h10635 = x__h10681 & y__h10384 ;
  assign y__h10768 = x__h10826 | y__h10827 ;
  assign y__h10827 = x__h10873 & y__h10576 ;
  assign y__h10960 = x__h11018 | y__h11019 ;
  assign y__h11019 = x__h11065 & y__h10768 ;
  assign y__h11152 = x__h11210 | y__h11211 ;
  assign y__h11211 = x__h11257 & y__h10960 ;
  assign y__h11344 = x__h11402 | y__h11403 ;
  assign y__h11403 = x__h11449 & y__h11152 ;
  assign y__h11536 = x__h11594 | y__h11595 ;
  assign y__h11595 = x__h11641 & y__h11344 ;
  assign y__h11728 = x__h11786 | y__h11787 ;
  assign y__h11787 = x__h11833 & y__h11536 ;
  assign y__h11920 = x__h11978 | y__h11979 ;
  assign y__h11979 = x__h12025 & y__h11728 ;
  assign y__h12112 = x__h12170 | y__h12171 ;
  assign y__h12171 = x__h12217 & y__h11920 ;
  assign y__h12304 = x__h12362 | y__h12363 ;
  assign y__h12363 = x__h12409 & y__h12112 ;
  assign y__h12496 = x__h12554 | y__h12555 ;
  assign y__h12555 = x__h12601 & y__h12304 ;
  assign y__h12688 = x__h12746 | y__h12747 ;
  assign y__h12747 = x__h12793 & y__h12496 ;
  assign y__h12880 = x__h12938 | y__h12939 ;
  assign y__h12939 = x__h12985 & y__h12688 ;
  assign y__h13072 = x__h13130 | y__h13131 ;
  assign y__h13131 = x__h13177 & y__h12880 ;
  assign y__h13264 = x__h13322 | y__h13323 ;
  assign y__h13323 = x__h13369 & y__h13072 ;
  assign y__h13456 = x__h13514 | y__h13515 ;
  assign y__h13515 = x__h13561 & y__h13264 ;
  assign y__h13648 = x__h13706 | y__h13707 ;
  assign y__h13707 = x__h13753 & y__h13456 ;
  assign y__h13840 = x__h13898 | y__h13899 ;
  assign y__h13899 = x__h13945 & y__h13648 ;
  assign y__h14032 = x__h14090 | y__h14091 ;
  assign y__h14091 = x__h14137 & y__h13840 ;
  assign y__h14224 = x__h14282 | y__h14283 ;
  assign y__h14283 = x__h14329 & y__h14032 ;
  assign y__h14416 = x__h14474 | y__h14475 ;
  assign y__h14475 = x__h14521 & y__h14224 ;
  assign y__h14608 = x__h14666 | y__h14667 ;
  assign y__h14667 = x__h14713 & y__h14416 ;
  assign y__h14800 = x__h14858 | y__h14859 ;
  assign y__h14859 = x__h14905 & y__h14608 ;
  assign y__h14992 = x__h15050 | y__h15051 ;
  assign y__h15051 = x__h15097 & y__h14800 ;
  assign y__h15184 = x__h15242 | y__h15243 ;
  assign y__h15243 = x__h15289 & y__h14992 ;
  assign y__h15376 = x__h15434 | y__h15435 ;
  assign y__h15435 = x__h15481 & y__h15184 ;
  assign y__h15568 = x__h15626 | y__h15627 ;
  assign y__h15627 = x__h15673 & y__h15376 ;
  assign y__h15760 = x__h15818 | y__h15819 ;
  assign y__h15819 = x__h15865 & y__h15568 ;
  assign y__h15952 = x__h16010 | y__h16011 ;
  assign y__h16011 = x__h16057 & y__h15760 ;
  assign y__h16144 = x__h16202 | y__h16203 ;
  assign y__h16203 = x__h16249 & y__h15952 ;
  assign y__h16336 = x__h16394 | y__h16395 ;
  assign y__h16395 = x__h16441 & y__h16144 ;
  assign y__h16528 = x__h16586 | y__h16587 ;
  assign y__h16587 = x__h16633 & y__h16336 ;
  assign y__h16720 = x__h16778 | y__h16779 ;
  assign y__h16779 = x__h16825 & y__h16528 ;
  assign y__h16912 = x__h16970 | y__h16971 ;
  assign y__h16971 = x__h17017 & y__h16720 ;
  assign y__h17104 = x__h17162 | y__h17163 ;
  assign y__h17163 = x__h17209 & y__h16912 ;
  assign y__h17296 = x__h17354 | y__h17355 ;
  assign y__h17355 = x__h17401 & y__h17104 ;
  assign y__h17488 = x__h17546 | y__h17547 ;
  assign y__h17547 = x__h17593 & y__h17296 ;
  assign y__h17680 = x__h17738 | y__h17739 ;
  assign y__h17739 = x__h17785 & y__h17488 ;
  assign y__h20521 = temp_c[1] & y__h20623 ;
  assign y__h20623 = ~temp_c[0] ;
  assign y__h20707 = temp_c[2] & y__h20521 ;
  assign y__h20893 = temp_c[3] & y__h20707 ;
  assign y__h21079 = temp_c[4] & y__h20893 ;
  assign y__h21265 = temp_c[5] & y__h21079 ;
  assign y__h21451 = temp_c[6] & y__h21265 ;
  assign y__h21637 = temp_c[7] & y__h21451 ;
  assign y__h21823 = temp_c[8] & y__h21637 ;
  assign y__h22009 = temp_c[9] & y__h21823 ;
  assign y__h22195 = temp_c[10] & y__h22009 ;
  assign y__h22381 = temp_c[11] & y__h22195 ;
  assign y__h22567 = temp_c[12] & y__h22381 ;
  assign y__h22753 = temp_c[13] & y__h22567 ;
  assign y__h22939 = temp_c[14] & y__h22753 ;
  assign y__h23125 = temp_c[15] & y__h22939 ;
  assign y__h23311 = temp_c[16] & y__h23125 ;
  assign y__h23497 = temp_c[17] & y__h23311 ;
  assign y__h23683 = temp_c[18] & y__h23497 ;
  assign y__h23869 = temp_c[19] & y__h23683 ;
  assign y__h24055 = temp_c[20] & y__h23869 ;
  assign y__h24241 = temp_c[21] & y__h24055 ;
  assign y__h24427 = temp_c[22] & y__h24241 ;
  assign y__h24613 = temp_c[23] & y__h24427 ;
  assign y__h24799 = temp_c[24] & y__h24613 ;
  assign y__h24985 = temp_c[25] & y__h24799 ;
  assign y__h25171 = temp_c[26] & y__h24985 ;
  assign y__h25357 = temp_c[27] & y__h25171 ;
  assign y__h25543 = temp_c[28] & y__h25357 ;
  assign y__h25729 = temp_c[29] & y__h25543 ;
  assign y__h25915 = temp_c[30] & y__h25729 ;
  assign y__h26101 = temp_c[31] & y__h25915 ;
  assign y__h26287 = temp_c[32] & y__h26101 ;
  assign y__h26473 = temp_c[33] & y__h26287 ;
  assign y__h26659 = temp_c[34] & y__h26473 ;
  assign y__h26845 = temp_c[35] & y__h26659 ;
  assign y__h27031 = temp_c[36] & y__h26845 ;
  assign y__h27217 = temp_c[37] & y__h27031 ;
  assign y__h27403 = temp_c[38] & y__h27217 ;
  assign y__h27589 = temp_c[39] & y__h27403 ;
  assign y__h27775 = temp_c[40] & y__h27589 ;
  assign y__h27961 = temp_c[41] & y__h27775 ;
  assign y__h28147 = temp_c[42] & y__h27961 ;
  assign y__h28333 = temp_c[43] & y__h28147 ;
  assign y__h28519 = temp_c[44] & y__h28333 ;
  assign y__h28705 = temp_c[45] & y__h28519 ;
  assign y__h28891 = temp_c[46] & y__h28705 ;
  assign y__h29077 = temp_c[47] & y__h28891 ;
  assign y__h29263 = temp_c[48] & y__h29077 ;
  assign y__h29473 = temp_s[0] & IF_temp_c_BIT_0_THEN_1_ELSE_0__q3[0] ;
  assign y__h29475 = temp_c[1] ^ y__h20623 ;
  assign y__h29601 = x__h29658 | y__h29659 ;
  assign y__h29603 = temp_c[2] ^ y__h20521 ;
  assign y__h29659 = x__h29472 & y__h29473 ;
  assign y__h29790 = x__h29847 | y__h29848 ;
  assign y__h29792 = temp_c[3] ^ y__h20707 ;
  assign y__h29848 = x__h29600 & y__h29601 ;
  assign y__h29979 = x__h30036 | y__h30037 ;
  assign y__h29981 = temp_c[4] ^ y__h20893 ;
  assign y__h30037 = x__h29789 & y__h29790 ;
  assign y__h30168 = x__h30225 | y__h30226 ;
  assign y__h30170 = temp_c[5] ^ y__h21079 ;
  assign y__h30226 = x__h29978 & y__h29979 ;
  assign y__h30357 = x__h30414 | y__h30415 ;
  assign y__h30359 = temp_c[6] ^ y__h21265 ;
  assign y__h30415 = x__h30167 & y__h30168 ;
  assign y__h30546 = x__h30603 | y__h30604 ;
  assign y__h30548 = temp_c[7] ^ y__h21451 ;
  assign y__h30604 = x__h30356 & y__h30357 ;
  assign y__h30735 = x__h30792 | y__h30793 ;
  assign y__h30737 = temp_c[8] ^ y__h21637 ;
  assign y__h30793 = x__h30545 & y__h30546 ;
  assign y__h30924 = x__h30981 | y__h30982 ;
  assign y__h30926 = temp_c[9] ^ y__h21823 ;
  assign y__h30982 = x__h30734 & y__h30735 ;
  assign y__h31113 = x__h31170 | y__h31171 ;
  assign y__h31115 = temp_c[10] ^ y__h22009 ;
  assign y__h31171 = x__h30923 & y__h30924 ;
  assign y__h31302 = x__h31359 | y__h31360 ;
  assign y__h31304 = temp_c[11] ^ y__h22195 ;
  assign y__h31360 = x__h31112 & y__h31113 ;
  assign y__h31491 = x__h31548 | y__h31549 ;
  assign y__h31493 = temp_c[12] ^ y__h22381 ;
  assign y__h31549 = x__h31301 & y__h31302 ;
  assign y__h31680 = x__h31737 | y__h31738 ;
  assign y__h31682 = temp_c[13] ^ y__h22567 ;
  assign y__h31738 = x__h31490 & y__h31491 ;
  assign y__h31869 = x__h31926 | y__h31927 ;
  assign y__h31871 = temp_c[14] ^ y__h22753 ;
  assign y__h31927 = x__h31679 & y__h31680 ;
  assign y__h32058 = x__h32115 | y__h32116 ;
  assign y__h32060 = temp_c[15] ^ y__h22939 ;
  assign y__h32116 = x__h31868 & y__h31869 ;
  assign y__h32247 = x__h32304 | y__h32305 ;
  assign y__h32249 = temp_c[16] ^ y__h23125 ;
  assign y__h32305 = x__h32057 & y__h32058 ;
  assign y__h32436 = x__h32493 | y__h32494 ;
  assign y__h32438 = temp_c[17] ^ y__h23311 ;
  assign y__h32494 = x__h32246 & y__h32247 ;
  assign y__h32625 = x__h32682 | y__h32683 ;
  assign y__h32627 = temp_c[18] ^ y__h23497 ;
  assign y__h32683 = x__h32435 & y__h32436 ;
  assign y__h32814 = x__h32871 | y__h32872 ;
  assign y__h32816 = temp_c[19] ^ y__h23683 ;
  assign y__h32872 = x__h32624 & y__h32625 ;
  assign y__h33003 = x__h33060 | y__h33061 ;
  assign y__h33005 = temp_c[20] ^ y__h23869 ;
  assign y__h33061 = x__h32813 & y__h32814 ;
  assign y__h33192 = x__h33249 | y__h33250 ;
  assign y__h33194 = temp_c[21] ^ y__h24055 ;
  assign y__h33250 = x__h33002 & y__h33003 ;
  assign y__h33381 = x__h33438 | y__h33439 ;
  assign y__h33383 = temp_c[22] ^ y__h24241 ;
  assign y__h33439 = x__h33191 & y__h33192 ;
  assign y__h33570 = x__h33627 | y__h33628 ;
  assign y__h33572 = temp_c[23] ^ y__h24427 ;
  assign y__h33628 = x__h33380 & y__h33381 ;
  assign y__h33759 = x__h33816 | y__h33817 ;
  assign y__h33761 = temp_c[24] ^ y__h24613 ;
  assign y__h33817 = x__h33569 & y__h33570 ;
  assign y__h33948 = x__h34005 | y__h34006 ;
  assign y__h33950 = temp_c[25] ^ y__h24799 ;
  assign y__h34006 = x__h33758 & y__h33759 ;
  assign y__h34137 = x__h34194 | y__h34195 ;
  assign y__h34139 = temp_c[26] ^ y__h24985 ;
  assign y__h34195 = x__h33947 & y__h33948 ;
  assign y__h34326 = x__h34383 | y__h34384 ;
  assign y__h34328 = temp_c[27] ^ y__h25171 ;
  assign y__h34384 = x__h34136 & y__h34137 ;
  assign y__h34515 = x__h34572 | y__h34573 ;
  assign y__h34517 = temp_c[28] ^ y__h25357 ;
  assign y__h34573 = x__h34325 & y__h34326 ;
  assign y__h34704 = x__h34761 | y__h34762 ;
  assign y__h34706 = temp_c[29] ^ y__h25543 ;
  assign y__h34762 = x__h34514 & y__h34515 ;
  assign y__h34893 = x__h34950 | y__h34951 ;
  assign y__h34895 = temp_c[30] ^ y__h25729 ;
  assign y__h34951 = x__h34703 & y__h34704 ;
  assign y__h35082 = x__h35139 | y__h35140 ;
  assign y__h35084 = temp_c[31] ^ y__h25915 ;
  assign y__h35140 = x__h34892 & y__h34893 ;
  assign y__h35271 = x__h35328 | y__h35329 ;
  assign y__h35273 = temp_c[32] ^ y__h26101 ;
  assign y__h35329 = x__h35081 & y__h35082 ;
  assign y__h35460 = x__h35517 | y__h35518 ;
  assign y__h35462 = temp_c[33] ^ y__h26287 ;
  assign y__h35518 = x__h35270 & y__h35271 ;
  assign y__h35649 = x__h35706 | y__h35707 ;
  assign y__h35651 = temp_c[34] ^ y__h26473 ;
  assign y__h35707 = x__h35459 & y__h35460 ;
  assign y__h35838 = x__h35895 | y__h35896 ;
  assign y__h35840 = temp_c[35] ^ y__h26659 ;
  assign y__h35896 = x__h35648 & y__h35649 ;
  assign y__h36027 = x__h36084 | y__h36085 ;
  assign y__h36029 = temp_c[36] ^ y__h26845 ;
  assign y__h36085 = x__h35837 & y__h35838 ;
  assign y__h36216 = x__h36273 | y__h36274 ;
  assign y__h36218 = temp_c[37] ^ y__h27031 ;
  assign y__h36274 = x__h36026 & y__h36027 ;
  assign y__h36405 = x__h36462 | y__h36463 ;
  assign y__h36407 = temp_c[38] ^ y__h27217 ;
  assign y__h36463 = x__h36215 & y__h36216 ;
  assign y__h36594 = x__h36651 | y__h36652 ;
  assign y__h36596 = temp_c[39] ^ y__h27403 ;
  assign y__h36652 = x__h36404 & y__h36405 ;
  assign y__h36783 = x__h36840 | y__h36841 ;
  assign y__h36785 = temp_c[40] ^ y__h27589 ;
  assign y__h36841 = x__h36593 & y__h36594 ;
  assign y__h36972 = x__h37029 | y__h37030 ;
  assign y__h36974 = temp_c[41] ^ y__h27775 ;
  assign y__h37030 = x__h36782 & y__h36783 ;
  assign y__h37161 = x__h37218 | y__h37219 ;
  assign y__h37163 = temp_c[42] ^ y__h27961 ;
  assign y__h37219 = x__h36971 & y__h36972 ;
  assign y__h37350 = x__h37407 | y__h37408 ;
  assign y__h37352 = temp_c[43] ^ y__h28147 ;
  assign y__h37408 = x__h37160 & y__h37161 ;
  assign y__h37539 = x__h37596 | y__h37597 ;
  assign y__h37541 = temp_c[44] ^ y__h28333 ;
  assign y__h37597 = x__h37349 & y__h37350 ;
  assign y__h37728 = x__h37785 | y__h37786 ;
  assign y__h37730 = temp_c[45] ^ y__h28519 ;
  assign y__h37786 = x__h37538 & y__h37539 ;
  assign y__h37917 = x__h37974 | y__h37975 ;
  assign y__h37919 = temp_c[46] ^ y__h28705 ;
  assign y__h37975 = x__h37727 & y__h37728 ;
  assign y__h38106 = x__h38163 | y__h38164 ;
  assign y__h38108 = temp_c[47] ^ y__h28891 ;
  assign y__h38164 = x__h37916 & y__h37917 ;
  assign y__h38295 = x__h38352 | y__h38353 ;
  assign y__h38297 = temp_c[48] ^ y__h29077 ;
  assign y__h38353 = x__h38105 & y__h38106 ;
  assign y__h38484 = x__h38541 | y__h38542 ;
  assign y__h38486 = temp_c[49] ^ y__h29263 ;
  assign y__h38542 = x__h38294 & y__h38295 ;
  assign y__h40864 = tmp_exp[1] | y__h40923 ;
  assign y__h40923 = x__h40968 & tmp_exp[0] ;
  assign y__h41055 = tmp_exp[2] | y__h41114 ;
  assign y__h41114 = x__h41159 & y__h40864 ;
  assign y__h41246 = tmp_exp[3] | y__h41305 ;
  assign y__h41305 = x__h41350 & y__h41055 ;
  assign y__h41437 = tmp_exp[4] | y__h41496 ;
  assign y__h41496 = x__h41541 & y__h41246 ;
  assign y__h41628 = tmp_exp[5] | y__h41687 ;
  assign y__h41687 = x__h41732 & y__h41437 ;
  assign y__h41819 = tmp_exp[6] | y__h41878 ;
  assign y__h41878 = x__h41923 & y__h41628 ;
  assign y__h4357 = !c[24] & IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h45153 = temp_man[27] & temp_man[26] ;
  assign y__h45339 = temp_man[28] & y__h45153 ;
  assign y__h4543 = !c[25] & y__h4357 ;
  assign y__h45525 = temp_man[29] & y__h45339 ;
  assign y__h45711 = temp_man[30] & y__h45525 ;
  assign y__h45897 = temp_man[31] & y__h45711 ;
  assign y__h46083 = temp_man[32] & y__h45897 ;
  assign y__h46269 = temp_man[33] & y__h46083 ;
  assign y__h46455 = temp_man[34] & y__h46269 ;
  assign y__h46641 = temp_man[35] & y__h46455 ;
  assign y__h46827 = temp_man[36] & y__h46641 ;
  assign y__h47013 = temp_man[37] & y__h46827 ;
  assign y__h47199 = temp_man[38] & y__h47013 ;
  assign y__h4729 = !c[26] & y__h4543 ;
  assign y__h47385 = temp_man[39] & y__h47199 ;
  assign y__h47571 = temp_man[40] & y__h47385 ;
  assign y__h47757 = temp_man[41] & y__h47571 ;
  assign y__h47943 = temp_man[42] & y__h47757 ;
  assign y__h48129 = temp_man[43] & y__h47943 ;
  assign y__h48315 = temp_man[44] & y__h48129 ;
  assign y__h48501 = temp_man[45] & y__h48315 ;
  assign y__h48687 = temp_man[46] & y__h48501 ;
  assign y__h48873 = temp_man[47] & y__h48687 ;
  assign y__h49059 = temp_man[48] & y__h48873 ;
  assign y__h4915 = !c[27] & y__h4729 ;
  assign y__h5101 = !c[28] & y__h4915 ;
  assign y__h5287 = !c[29] & y__h5101 ;
  assign y__h54391 = x__h54264 & IF_INV_tmp_exp_BIT_0_THEN_1_ELSE_0__q4[0] ;
  assign y__h54577 = x__h54390 & y__h54391 ;
  assign y__h54763 = x__h54576 & y__h54577 ;
  assign y__h54949 = x__h54762 & y__h54763 ;
  assign y__h5498 =
	     tmp_exp[0] &
	     IF_INV_IF_c_BIT_23_THEN_0_ELSE_1_BIT_0_THEN_1__ETC__q2[0] ;
  assign y__h5500 = !c[24] ^ IF_c_BIT_23_THEN_0_ELSE_1__q1[0] ;
  assign y__h55135 = x__h54948 & y__h54949 ;
  assign y__h55321 = x__h55134 & y__h55135 ;
  assign y__h5626 = x__h5683 | y__h5684 ;
  assign y__h5628 = !c[25] ^ y__h4357 ;
  assign y__h5684 = x__h5497 & y__h5498 ;
  assign y__h56987 = temp_man[26] & temp_man[25] ;
  assign y__h57173 = temp_man[27] & y__h56987 ;
  assign y__h57359 = temp_man[28] & y__h57173 ;
  assign y__h57545 = temp_man[29] & y__h57359 ;
  assign y__h57731 = temp_man[30] & y__h57545 ;
  assign y__h57917 = temp_man[31] & y__h57731 ;
  assign y__h58103 = temp_man[32] & y__h57917 ;
  assign y__h5815 = x__h5872 | y__h5873 ;
  assign y__h5817 = !c[26] ^ y__h4543 ;
  assign y__h58289 = temp_man[33] & y__h58103 ;
  assign y__h58475 = temp_man[34] & y__h58289 ;
  assign y__h58661 = temp_man[35] & y__h58475 ;
  assign y__h5873 = x__h5625 & y__h5626 ;
  assign y__h58847 = temp_man[36] & y__h58661 ;
  assign y__h59033 = temp_man[37] & y__h58847 ;
  assign y__h59219 = temp_man[38] & y__h59033 ;
  assign y__h59405 = temp_man[39] & y__h59219 ;
  assign y__h59591 = temp_man[40] & y__h59405 ;
  assign y__h59777 = temp_man[41] & y__h59591 ;
  assign y__h59963 = temp_man[42] & y__h59777 ;
  assign y__h6004 = x__h6061 | y__h6062 ;
  assign y__h6006 = !c[27] ^ y__h4729 ;
  assign y__h60149 = temp_man[43] & y__h59963 ;
  assign y__h60335 = temp_man[44] & y__h60149 ;
  assign y__h60521 = temp_man[45] & y__h60335 ;
  assign y__h6062 = x__h5814 & y__h5815 ;
  assign y__h60707 = temp_man[46] & y__h60521 ;
  assign y__h60893 = temp_man[47] & y__h60707 ;
  assign y__h61079 = temp_man[48] & y__h60893 ;
  assign y__h6193 = x__h6250 | y__h6251 ;
  assign y__h6195 = !c[28] ^ y__h4915 ;
  assign y__h6251 = x__h6003 & y__h6004 ;
  assign y__h6382 = x__h6439 | y__h6440 ;
  assign y__h6384 = !c[29] ^ y__h5101 ;
  assign y__h6440 = x__h6192 & y__h6193 ;
  assign y__h6571 = x__h6628 | y__h6629 ;
  assign y__h6573 = x__h5286 ^ y__h5287 ;
  assign y__h66230 = tmp_exp[1] & tmp_exp[0] ;
  assign y__h6629 = x__h6381 & y__h6382 ;
  assign y__h66419 = tmp_exp[2] & y__h66230 ;
  assign y__h66608 = tmp_exp[3] & y__h66419 ;
  assign y__h66797 = tmp_exp[4] & y__h66608 ;
  assign y__h66986 = tmp_exp[5] & y__h66797 ;
  assign y__h67175 = tmp_exp[6] & y__h66986 ;
  assign y__h8656 = x__h8714 | y__h8715 ;
  assign y__h8715 = x__h8761 & y__h8762 ;
  assign y__h8762 = temp_s[0] & temp_c[0] ;
  assign y__h8848 = x__h8906 | y__h8907 ;
  assign y__h8907 = x__h8953 & y__h8656 ;
  assign y__h9040 = x__h9098 | y__h9099 ;
  assign y__h9099 = x__h9145 & y__h8848 ;
  assign y__h9232 = x__h9290 | y__h9291 ;
  assign y__h9291 = x__h9337 & y__h9040 ;
  assign y__h9424 = x__h9482 | y__h9483 ;
  assign y__h9483 = x__h9529 & y__h9232 ;
  assign y__h9616 = x__h9674 | y__h9675 ;
  assign y__h9675 = x__h9721 & y__h9424 ;
  assign y__h9808 = x__h9866 | y__h9867 ;
  assign y__h9867 = x__h9913 & y__h9616 ;

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        add_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	add_or_sub <= `BSV_ASSIGNMENT_DELAY 2'b0;
	add_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	addition_start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	adj_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	align_man_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c <= `BSV_ASSIGNMENT_DELAY 32'd0;
	calc_fraction_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	cmp_exp_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	end_result <= `BSV_ASSIGNMENT_DELAY 32'd0;
	exp_diff <= `BSV_ASSIGNMENT_DELAY 8'd0;
	exp_mantissa <= `BSV_ASSIGNMENT_DELAY 31'd0;
	exp_res <= `BSV_ASSIGNMENT_DELAY 8'd0;
	get_r <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_c <= `BSV_ASSIGNMENT_DELAY 1'd0;
	got_s <= `BSV_ASSIGNMENT_DELAY 1'd0;
	handle_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	input_no <= `BSV_ASSIGNMENT_DELAY 1'b0;
	input_zero <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	mantissa_res <= `BSV_ASSIGNMENT_DELAY 23'd0;
	pack_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	result_concatenated <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s <= `BSV_ASSIGNMENT_DELAY 32'd0;
	sign_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	swap_done <= `BSV_ASSIGNMENT_DELAY 1'd0;
	temp_c <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_man <= `BSV_ASSIGNMENT_DELAY 50'd0;
	temp_s <= `BSV_ASSIGNMENT_DELAY 50'd0;
	tmp_exp <= `BSV_ASSIGNMENT_DELAY 8'd0;
	tmp_res <= `BSV_ASSIGNMENT_DELAY 24'd0;
	tmp_sign <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (add_done_EN) add_done <= `BSV_ASSIGNMENT_DELAY add_done_D_IN;
	if (add_or_sub_EN)
	  add_or_sub <= `BSV_ASSIGNMENT_DELAY add_or_sub_D_IN;
	if (add_start_EN) add_start <= `BSV_ASSIGNMENT_DELAY add_start_D_IN;
	if (addition_start_EN)
	  addition_start <= `BSV_ASSIGNMENT_DELAY addition_start_D_IN;
	if (adj_exp_done_EN)
	  adj_exp_done <= `BSV_ASSIGNMENT_DELAY adj_exp_done_D_IN;
	if (align_man_done_EN)
	  align_man_done <= `BSV_ASSIGNMENT_DELAY align_man_done_D_IN;
	if (c_EN) c <= `BSV_ASSIGNMENT_DELAY c_D_IN;
	if (calc_fraction_done_EN)
	  calc_fraction_done <= `BSV_ASSIGNMENT_DELAY calc_fraction_done_D_IN;
	if (cmp_exp_done_EN)
	  cmp_exp_done <= `BSV_ASSIGNMENT_DELAY cmp_exp_done_D_IN;
	if (end_result_EN)
	  end_result <= `BSV_ASSIGNMENT_DELAY end_result_D_IN;
	if (exp_diff_EN) exp_diff <= `BSV_ASSIGNMENT_DELAY exp_diff_D_IN;
	if (exp_mantissa_EN)
	  exp_mantissa <= `BSV_ASSIGNMENT_DELAY exp_mantissa_D_IN;
	if (exp_res_EN) exp_res <= `BSV_ASSIGNMENT_DELAY exp_res_D_IN;
	if (get_r_EN) get_r <= `BSV_ASSIGNMENT_DELAY get_r_D_IN;
	if (got_c_EN) got_c <= `BSV_ASSIGNMENT_DELAY got_c_D_IN;
	if (got_s_EN) got_s <= `BSV_ASSIGNMENT_DELAY got_s_D_IN;
	if (handle_zero_EN)
	  handle_zero <= `BSV_ASSIGNMENT_DELAY handle_zero_D_IN;
	if (input_no_EN) input_no <= `BSV_ASSIGNMENT_DELAY input_no_D_IN;
	if (input_zero_EN)
	  input_zero <= `BSV_ASSIGNMENT_DELAY input_zero_D_IN;
	if (mantissa_done_EN)
	  mantissa_done <= `BSV_ASSIGNMENT_DELAY mantissa_done_D_IN;
	if (mantissa_res_EN)
	  mantissa_res <= `BSV_ASSIGNMENT_DELAY mantissa_res_D_IN;
	if (pack_done_EN) pack_done <= `BSV_ASSIGNMENT_DELAY pack_done_D_IN;
	if (result_concatenated_EN)
	  result_concatenated <= `BSV_ASSIGNMENT_DELAY
	      result_concatenated_D_IN;
	if (s_EN) s <= `BSV_ASSIGNMENT_DELAY s_D_IN;
	if (sign_done_EN) sign_done <= `BSV_ASSIGNMENT_DELAY sign_done_D_IN;
	if (swap_done_EN) swap_done <= `BSV_ASSIGNMENT_DELAY swap_done_D_IN;
	if (temp_c_EN) temp_c <= `BSV_ASSIGNMENT_DELAY temp_c_D_IN;
	if (temp_man_EN) temp_man <= `BSV_ASSIGNMENT_DELAY temp_man_D_IN;
	if (temp_s_EN) temp_s <= `BSV_ASSIGNMENT_DELAY temp_s_D_IN;
	if (tmp_exp_EN) tmp_exp <= `BSV_ASSIGNMENT_DELAY tmp_exp_D_IN;
	if (tmp_res_EN) tmp_res <= `BSV_ASSIGNMENT_DELAY tmp_res_D_IN;
	if (tmp_sign_EN) tmp_sign <= `BSV_ASSIGNMENT_DELAY tmp_sign_D_IN;
      end
  end

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      fifo_add_rv <= `BSV_ASSIGNMENT_DELAY
	  { 1'd0,
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      fifo_c_rv <= `BSV_ASSIGNMENT_DELAY
	  { 1'd0,
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
      fifo_s_rv <= `BSV_ASSIGNMENT_DELAY
	  { 1'd0,
	    32'bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx /* unspecified value */  };
    end
  else
    begin
      if (fifo_add_rv_EN)
	fifo_add_rv <= `BSV_ASSIGNMENT_DELAY fifo_add_rv_D_IN;
      if (fifo_c_rv_EN) fifo_c_rv <= `BSV_ASSIGNMENT_DELAY fifo_c_rv_D_IN;
      if (fifo_s_rv_EN) fifo_s_rv <= `BSV_ASSIGNMENT_DELAY fifo_s_rv_D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    add_done = 1'h0;
    add_or_sub = 2'h2;
    add_start = 1'h0;
    addition_start = 1'h0;
    adj_exp_done = 1'h0;
    align_man_done = 1'h0;
    c = 32'hAAAAAAAA;
    calc_fraction_done = 1'h0;
    cmp_exp_done = 1'h0;
    end_result = 32'hAAAAAAAA;
    exp_diff = 8'hAA;
    exp_mantissa = 31'h2AAAAAAA;
    exp_res = 8'hAA;
    fifo_add_rv = 33'h0AAAAAAAA;
    fifo_c_rv = 33'h0AAAAAAAA;
    fifo_s_rv = 33'h0AAAAAAAA;
    get_r = 1'h0;
    got_c = 1'h0;
    got_s = 1'h0;
    handle_zero = 1'h0;
    input_no = 1'h0;
    input_zero = 1'h0;
    mantissa_done = 1'h0;
    mantissa_res = 23'h2AAAAA;
    pack_done = 1'h0;
    result_concatenated = 1'h0;
    s = 32'hAAAAAAAA;
    sign_done = 1'h0;
    swap_done = 1'h0;
    temp_c = 50'h2AAAAAAAAAAAA;
    temp_man = 50'h2AAAAAAAAAAAA;
    temp_s = 50'h2AAAAAAAAAAAA;
    tmp_exp = 8'hAA;
    tmp_res = 24'hAAAAAA;
    tmp_sign = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	begin
	  v__h2669 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_get_sign)
	$display(v__h2669, " After Swapping s: %b c: %b", s, c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6848 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6848, "i s_mantissa new %b", temp_s);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6896 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6896, "i c_mantissa new %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	begin
	  v__h6946 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_align_exp)
	$display(v__h6946, "i Exponent difference %d", exp_diff);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	begin
	  v__h7199 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp)
	$display(v__h7199, " shifted mantissa of c %b", temp_c);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	begin
	  v__h17874 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd1)
	$display(v__h17874, " Adding the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	begin
	  v__h38675 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_add_or_sub_exp && add_or_sub == 2'd2)
	$display(v__h38675, " Subtracting the mantissa");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	begin
	  v__h38799 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_exp)
	$display(v__h38799, " calculated mantissa c %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	begin
	  v__h42055 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_adj_mantissa)
	$display(v__h42055, " mantissa: %b", temp_man);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	begin
	  v__h67571 = $stime;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_rl_assemble_result)
	$display(v__h67571,
		 " End Result sign:%b exp: %b mantissa: %b ",
		 tmp_sign,
		 exp_mantissa[30:23],
		 exp_mantissa[22:0]);
  end
  // synopsys translate_on
endmodule  // mkPipelined_float_add

